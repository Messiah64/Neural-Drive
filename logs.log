2024-10-30 01:19:06,797:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-30 01:19:06,797:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-30 01:19:06,797:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-30 01:19:06,797:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-30 01:19:08,045:INFO:Initializing load_model()
2024-10-30 01:19:08,045:INFO:load_model(model_name=nbest, platform=None, authentication=None, verbose=True)
2024-11-16 18:47:47,553:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-16 18:47:47,553:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-16 18:47:47,553:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-16 18:47:47,553:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-16 18:47:48,781:INFO:Initializing load_model()
2024-11-16 18:47:48,782:INFO:load_model(model_name=nbest, platform=None, authentication=None, verbose=True)
2024-11-16 19:12:16,347:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-16 19:12:16,347:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-16 19:12:16,347:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-16 19:12:16,347:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-16 19:12:16,925:INFO:PyCaret ClassificationExperiment
2024-11-16 19:12:16,925:INFO:Logging name: clf-default-name
2024-11-16 19:12:16,925:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-11-16 19:12:16,925:INFO:version 3.3.2
2024-11-16 19:12:16,925:INFO:Initializing setup()
2024-11-16 19:12:16,925:INFO:self.USI: 3285
2024-11-16 19:12:16,925:INFO:self._variable_keys: {'_ml_usecase', 'exp_name_log', 'idx', 'fold_shuffle_param', 'pipeline', 'gpu_n_jobs_param', 'X_train', 'y_test', 'logging_param', 'memory', 'gpu_param', 'X', 'fix_imbalance', 'seed', 'X_test', 'is_multiclass', 'exp_id', 'html_param', 'n_jobs_param', 'data', 'USI', 'log_plots_param', 'fold_generator', 'y', 'target_param', 'y_train', 'fold_groups_param', '_available_plots'}
2024-11-16 19:12:16,925:INFO:Checking environment
2024-11-16 19:12:16,925:INFO:python_version: 3.9.20
2024-11-16 19:12:16,925:INFO:python_build: ('main', 'Oct  3 2024 02:24:59')
2024-11-16 19:12:16,925:INFO:machine: arm64
2024-11-16 19:12:16,925:INFO:platform: macOS-15.2-arm64-arm-64bit
2024-11-16 19:12:16,925:INFO:Memory: svmem(total=8589934592, available=1236942848, percent=85.6, used=3157540864, free=60866560, active=1189904384, inactive=1063157760, wired=1967636480)
2024-11-16 19:12:16,925:INFO:Physical Core: 8
2024-11-16 19:12:16,925:INFO:Logical Core: 8
2024-11-16 19:12:16,925:INFO:Checking libraries
2024-11-16 19:12:16,925:INFO:System:
2024-11-16 19:12:16,925:INFO:    python: 3.9.20 (main, Oct  3 2024, 02:24:59)  [Clang 14.0.6 ]
2024-11-16 19:12:16,925:INFO:executable: /opt/anaconda3/envs/batey/bin/python
2024-11-16 19:12:16,925:INFO:   machine: macOS-15.2-arm64-arm-64bit
2024-11-16 19:12:16,925:INFO:PyCaret required dependencies:
2024-11-16 19:12:17,081:INFO:                 pip: 24.2
2024-11-16 19:12:17,082:INFO:          setuptools: 75.1.0
2024-11-16 19:12:17,082:INFO:             pycaret: 3.3.2
2024-11-16 19:12:17,082:INFO:             IPython: 8.18.1
2024-11-16 19:12:17,082:INFO:          ipywidgets: 8.1.5
2024-11-16 19:12:17,082:INFO:                tqdm: 4.66.6
2024-11-16 19:12:17,082:INFO:               numpy: 1.26.4
2024-11-16 19:12:17,082:INFO:              pandas: 2.1.4
2024-11-16 19:12:17,082:INFO:              jinja2: 3.1.4
2024-11-16 19:12:17,082:INFO:               scipy: 1.11.4
2024-11-16 19:12:17,082:INFO:              joblib: 1.3.2
2024-11-16 19:12:17,082:INFO:             sklearn: 1.4.2
2024-11-16 19:12:17,082:INFO:                pyod: 2.0.2
2024-11-16 19:12:17,082:INFO:            imblearn: 0.12.4
2024-11-16 19:12:17,082:INFO:   category_encoders: 2.6.4
2024-11-16 19:12:17,082:INFO:            lightgbm: 4.5.0
2024-11-16 19:12:17,082:INFO:               numba: 0.60.0
2024-11-16 19:12:17,082:INFO:            requests: 2.32.3
2024-11-16 19:12:17,082:INFO:          matplotlib: 3.7.5
2024-11-16 19:12:17,082:INFO:          scikitplot: 0.3.7
2024-11-16 19:12:17,082:INFO:         yellowbrick: 1.5
2024-11-16 19:12:17,082:INFO:              plotly: 5.24.1
2024-11-16 19:12:17,082:INFO:    plotly-resampler: Not installed
2024-11-16 19:12:17,082:INFO:             kaleido: 0.2.1
2024-11-16 19:12:17,082:INFO:           schemdraw: 0.15
2024-11-16 19:12:17,082:INFO:         statsmodels: 0.14.4
2024-11-16 19:12:17,082:INFO:              sktime: 0.26.0
2024-11-16 19:12:17,082:INFO:               tbats: 1.1.3
2024-11-16 19:12:17,082:INFO:            pmdarima: 2.0.4
2024-11-16 19:12:17,082:INFO:              psutil: 6.1.0
2024-11-16 19:12:17,082:INFO:          markupsafe: 3.0.2
2024-11-16 19:12:17,082:INFO:             pickle5: Not installed
2024-11-16 19:12:17,082:INFO:         cloudpickle: 3.1.0
2024-11-16 19:12:17,082:INFO:         deprecation: 2.1.0
2024-11-16 19:12:17,082:INFO:              xxhash: 3.5.0
2024-11-16 19:12:17,082:INFO:           wurlitzer: 3.1.1
2024-11-16 19:12:17,082:INFO:PyCaret optional dependencies:
2024-11-16 19:12:17,088:INFO:                shap: Not installed
2024-11-16 19:12:17,088:INFO:           interpret: Not installed
2024-11-16 19:12:17,088:INFO:                umap: Not installed
2024-11-16 19:12:17,088:INFO:     ydata_profiling: Not installed
2024-11-16 19:12:17,088:INFO:  explainerdashboard: Not installed
2024-11-16 19:12:17,088:INFO:             autoviz: Not installed
2024-11-16 19:12:17,088:INFO:           fairlearn: Not installed
2024-11-16 19:12:17,088:INFO:          deepchecks: Not installed
2024-11-16 19:12:17,088:INFO:             xgboost: Not installed
2024-11-16 19:12:17,088:INFO:            catboost: Not installed
2024-11-16 19:12:17,088:INFO:              kmodes: Not installed
2024-11-16 19:12:17,088:INFO:             mlxtend: Not installed
2024-11-16 19:12:17,088:INFO:       statsforecast: Not installed
2024-11-16 19:12:17,088:INFO:        tune_sklearn: Not installed
2024-11-16 19:12:17,088:INFO:                 ray: Not installed
2024-11-16 19:12:17,088:INFO:            hyperopt: Not installed
2024-11-16 19:12:17,088:INFO:              optuna: Not installed
2024-11-16 19:12:17,088:INFO:               skopt: Not installed
2024-11-16 19:12:17,088:INFO:              mlflow: Not installed
2024-11-16 19:12:17,088:INFO:              gradio: Not installed
2024-11-16 19:12:17,088:INFO:             fastapi: Not installed
2024-11-16 19:12:17,088:INFO:             uvicorn: Not installed
2024-11-16 19:12:17,088:INFO:              m2cgen: Not installed
2024-11-16 19:12:17,088:INFO:           evidently: Not installed
2024-11-16 19:12:17,088:INFO:               fugue: Not installed
2024-11-16 19:12:17,088:INFO:           streamlit: Not installed
2024-11-16 19:12:17,088:INFO:             prophet: Not installed
2024-11-16 19:12:17,088:INFO:None
2024-11-16 19:12:17,089:INFO:Set up data.
2024-11-16 19:12:17,096:INFO:Set up folding strategy.
2024-11-16 19:12:17,096:INFO:Set up train/test split.
2024-11-16 19:12:17,114:INFO:Set up index.
2024-11-16 19:12:17,114:INFO:Assigning column types.
2024-11-16 19:12:17,116:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-11-16 19:12:17,135:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-11-16 19:12:17,136:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-16 19:12:17,150:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-16 19:12:17,150:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-16 19:12:17,167:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-11-16 19:12:17,167:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-16 19:12:17,177:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-16 19:12:17,177:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-16 19:12:17,177:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-11-16 19:12:17,194:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-16 19:12:17,204:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-16 19:12:17,204:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-16 19:12:17,220:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-16 19:12:17,230:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-16 19:12:17,230:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-16 19:12:17,230:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-11-16 19:12:17,257:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-16 19:12:17,257:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-16 19:12:17,284:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-16 19:12:17,284:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-16 19:12:17,285:INFO:Preparing preprocessing pipeline...
2024-11-16 19:12:17,287:INFO:Set up label encoding.
2024-11-16 19:12:17,287:INFO:Set up simple imputation.
2024-11-16 19:12:17,336:INFO:Finished creating preprocessing pipeline.
2024-11-16 19:12:17,338:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/0j/8s23v_h569nfcs43k8n8y9pc0000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Timestamp', 'Raw_EMG',
                                             'Independent_Component'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2024-11-16 19:12:17,338:INFO:Creating final display dataframe.
2024-11-16 19:12:17,361:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target             Label
2                   Target type            Binary
3                Target mapping    GO: 0, STOP: 1
4           Original data shape         (6072, 4)
5        Transformed data shape         (6072, 4)
6   Transformed train set shape         (4250, 4)
7    Transformed test set shape         (1822, 4)
8              Numeric features                 3
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13               Fold Generator   StratifiedKFold
14                  Fold Number                10
15                     CPU Jobs                -1
16                      Use GPU             False
17               Log Experiment             False
18              Experiment Name  clf-default-name
19                          USI              3285
2024-11-16 19:12:17,389:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-16 19:12:17,389:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-16 19:12:17,416:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-16 19:12:17,416:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-16 19:12:17,416:INFO:setup() successfully completed in 0.49s...............
2024-11-16 19:12:17,438:INFO:Initializing compare_models()
2024-11-16 19:12:17,438:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11ed4fac0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x11ed4fac0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-11-16 19:12:17,438:INFO:Checking exceptions
2024-11-16 19:12:17,439:INFO:Preparing display monitor
2024-11-16 19:12:17,465:INFO:Initializing Logistic Regression
2024-11-16 19:12:17,465:INFO:Total runtime is 3.6160151163736978e-06 minutes
2024-11-16 19:12:17,465:INFO:SubProcess create_model() called ==================================
2024-11-16 19:12:17,466:INFO:Initializing create_model()
2024-11-16 19:12:17,466:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11ed4fac0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1077e7250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-16 19:12:17,466:INFO:Checking exceptions
2024-11-16 19:12:17,466:INFO:Importing libraries
2024-11-16 19:12:17,466:INFO:Copying training dataset
2024-11-16 19:12:17,468:INFO:Defining folds
2024-11-16 19:12:17,468:INFO:Declaring metric variables
2024-11-16 19:12:17,468:INFO:Importing untrained model
2024-11-16 19:12:17,468:INFO:Logistic Regression Imported successfully
2024-11-16 19:12:17,468:INFO:Starting cross validation
2024-11-16 19:12:17,469:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-16 19:12:20,362:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,362:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,363:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,365:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,365:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,365:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,367:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,367:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,367:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,373:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,376:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,377:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,379:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,379:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,381:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,384:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,386:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,390:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,416:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,422:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,427:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,443:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,445:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,447:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,451:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,453:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,462:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,467:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,469:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,473:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,493:INFO:Calculating mean and std
2024-11-16 19:12:20,496:INFO:Creating metrics dataframe
2024-11-16 19:12:20,503:INFO:Uploading results into container
2024-11-16 19:12:20,503:INFO:Uploading model into container now
2024-11-16 19:12:20,505:INFO:_master_model_container: 1
2024-11-16 19:12:20,505:INFO:_display_container: 2
2024-11-16 19:12:20,506:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-11-16 19:12:20,506:INFO:create_model() successfully completed......................................
2024-11-16 19:12:20,581:INFO:SubProcess create_model() end ==================================
2024-11-16 19:12:20,581:INFO:Creating metrics dataframe
2024-11-16 19:12:20,583:INFO:Initializing K Neighbors Classifier
2024-11-16 19:12:20,583:INFO:Total runtime is 0.051969114939371744 minutes
2024-11-16 19:12:20,583:INFO:SubProcess create_model() called ==================================
2024-11-16 19:12:20,583:INFO:Initializing create_model()
2024-11-16 19:12:20,583:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11ed4fac0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1077e7250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-16 19:12:20,583:INFO:Checking exceptions
2024-11-16 19:12:20,583:INFO:Importing libraries
2024-11-16 19:12:20,584:INFO:Copying training dataset
2024-11-16 19:12:20,586:INFO:Defining folds
2024-11-16 19:12:20,586:INFO:Declaring metric variables
2024-11-16 19:12:20,586:INFO:Importing untrained model
2024-11-16 19:12:20,586:INFO:K Neighbors Classifier Imported successfully
2024-11-16 19:12:20,586:INFO:Starting cross validation
2024-11-16 19:12:20,586:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-16 19:12:20,675:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,677:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,678:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,679:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,680:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,680:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,682:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,683:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,685:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,691:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,693:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,694:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,695:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,697:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,698:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,699:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,700:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,702:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,702:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,704:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,706:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,707:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,710:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,712:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,732:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,732:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,734:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,734:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,737:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,737:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,748:INFO:Calculating mean and std
2024-11-16 19:12:20,749:INFO:Creating metrics dataframe
2024-11-16 19:12:20,750:INFO:Uploading results into container
2024-11-16 19:12:20,751:INFO:Uploading model into container now
2024-11-16 19:12:20,751:INFO:_master_model_container: 2
2024-11-16 19:12:20,751:INFO:_display_container: 2
2024-11-16 19:12:20,751:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-11-16 19:12:20,751:INFO:create_model() successfully completed......................................
2024-11-16 19:12:20,793:INFO:SubProcess create_model() end ==================================
2024-11-16 19:12:20,793:INFO:Creating metrics dataframe
2024-11-16 19:12:20,794:INFO:Initializing Naive Bayes
2024-11-16 19:12:20,794:INFO:Total runtime is 0.05549219846725464 minutes
2024-11-16 19:12:20,794:INFO:SubProcess create_model() called ==================================
2024-11-16 19:12:20,795:INFO:Initializing create_model()
2024-11-16 19:12:20,795:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11ed4fac0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1077e7250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-16 19:12:20,795:INFO:Checking exceptions
2024-11-16 19:12:20,795:INFO:Importing libraries
2024-11-16 19:12:20,795:INFO:Copying training dataset
2024-11-16 19:12:20,796:INFO:Defining folds
2024-11-16 19:12:20,796:INFO:Declaring metric variables
2024-11-16 19:12:20,796:INFO:Importing untrained model
2024-11-16 19:12:20,796:INFO:Naive Bayes Imported successfully
2024-11-16 19:12:20,796:INFO:Starting cross validation
2024-11-16 19:12:20,796:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-16 19:12:20,811:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,813:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,815:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,818:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,820:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,822:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,822:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,825:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,825:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,828:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,831:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,833:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,833:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,833:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,835:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,837:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,837:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,841:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,843:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,843:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,843:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,845:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,845:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,849:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,850:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,851:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,852:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,853:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,854:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,854:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,862:INFO:Calculating mean and std
2024-11-16 19:12:20,863:INFO:Creating metrics dataframe
2024-11-16 19:12:20,864:INFO:Uploading results into container
2024-11-16 19:12:20,864:INFO:Uploading model into container now
2024-11-16 19:12:20,865:INFO:_master_model_container: 3
2024-11-16 19:12:20,865:INFO:_display_container: 2
2024-11-16 19:12:20,865:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-11-16 19:12:20,865:INFO:create_model() successfully completed......................................
2024-11-16 19:12:20,903:INFO:SubProcess create_model() end ==================================
2024-11-16 19:12:20,903:INFO:Creating metrics dataframe
2024-11-16 19:12:20,904:INFO:Initializing Decision Tree Classifier
2024-11-16 19:12:20,904:INFO:Total runtime is 0.05732444922129313 minutes
2024-11-16 19:12:20,904:INFO:SubProcess create_model() called ==================================
2024-11-16 19:12:20,905:INFO:Initializing create_model()
2024-11-16 19:12:20,905:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11ed4fac0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1077e7250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-16 19:12:20,905:INFO:Checking exceptions
2024-11-16 19:12:20,905:INFO:Importing libraries
2024-11-16 19:12:20,905:INFO:Copying training dataset
2024-11-16 19:12:20,906:INFO:Defining folds
2024-11-16 19:12:20,906:INFO:Declaring metric variables
2024-11-16 19:12:20,906:INFO:Importing untrained model
2024-11-16 19:12:20,906:INFO:Decision Tree Classifier Imported successfully
2024-11-16 19:12:20,906:INFO:Starting cross validation
2024-11-16 19:12:20,907:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-16 19:12:20,951:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,951:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,951:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,951:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,953:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,953:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,953:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,954:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,955:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,955:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,955:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,955:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,955:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,955:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,956:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,956:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,957:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,958:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,959:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,960:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,960:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,963:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,964:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,965:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,972:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,973:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,973:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,975:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,975:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,977:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,985:INFO:Calculating mean and std
2024-11-16 19:12:20,986:INFO:Creating metrics dataframe
2024-11-16 19:12:20,987:INFO:Uploading results into container
2024-11-16 19:12:20,987:INFO:Uploading model into container now
2024-11-16 19:12:20,987:INFO:_master_model_container: 4
2024-11-16 19:12:20,987:INFO:_display_container: 2
2024-11-16 19:12:20,987:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-11-16 19:12:20,987:INFO:create_model() successfully completed......................................
2024-11-16 19:12:21,028:INFO:SubProcess create_model() end ==================================
2024-11-16 19:12:21,028:INFO:Creating metrics dataframe
2024-11-16 19:12:21,029:INFO:Initializing SVM - Linear Kernel
2024-11-16 19:12:21,029:INFO:Total runtime is 0.05939968427022298 minutes
2024-11-16 19:12:21,029:INFO:SubProcess create_model() called ==================================
2024-11-16 19:12:21,029:INFO:Initializing create_model()
2024-11-16 19:12:21,029:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11ed4fac0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1077e7250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-16 19:12:21,029:INFO:Checking exceptions
2024-11-16 19:12:21,029:INFO:Importing libraries
2024-11-16 19:12:21,029:INFO:Copying training dataset
2024-11-16 19:12:21,030:INFO:Defining folds
2024-11-16 19:12:21,030:INFO:Declaring metric variables
2024-11-16 19:12:21,030:INFO:Importing untrained model
2024-11-16 19:12:21,031:INFO:SVM - Linear Kernel Imported successfully
2024-11-16 19:12:21,031:INFO:Starting cross validation
2024-11-16 19:12:21,031:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-16 19:12:21,073:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,073:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,075:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,076:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,076:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,077:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,077:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-16 19:12:21,077:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-16 19:12:21,078:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,078:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,079:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-16 19:12:21,079:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,079:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,080:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-16 19:12:21,081:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,080:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,082:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,086:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,089:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-16 19:12:21,090:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,091:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,094:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,094:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,095:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-16 19:12:21,096:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,096:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,097:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,097:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-16 19:12:21,099:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,099:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,100:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-16 19:12:21,101:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,109:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,111:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,112:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-16 19:12:21,113:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,113:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,115:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,115:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-16 19:12:21,116:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,125:INFO:Calculating mean and std
2024-11-16 19:12:21,125:INFO:Creating metrics dataframe
2024-11-16 19:12:21,126:INFO:Uploading results into container
2024-11-16 19:12:21,126:INFO:Uploading model into container now
2024-11-16 19:12:21,127:INFO:_master_model_container: 5
2024-11-16 19:12:21,127:INFO:_display_container: 2
2024-11-16 19:12:21,127:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-11-16 19:12:21,127:INFO:create_model() successfully completed......................................
2024-11-16 19:12:21,164:INFO:SubProcess create_model() end ==================================
2024-11-16 19:12:21,164:INFO:Creating metrics dataframe
2024-11-16 19:12:21,165:INFO:Initializing Ridge Classifier
2024-11-16 19:12:21,165:INFO:Total runtime is 0.06167118151982625 minutes
2024-11-16 19:12:21,165:INFO:SubProcess create_model() called ==================================
2024-11-16 19:12:21,165:INFO:Initializing create_model()
2024-11-16 19:12:21,165:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11ed4fac0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1077e7250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-16 19:12:21,165:INFO:Checking exceptions
2024-11-16 19:12:21,165:INFO:Importing libraries
2024-11-16 19:12:21,165:INFO:Copying training dataset
2024-11-16 19:12:21,167:INFO:Defining folds
2024-11-16 19:12:21,167:INFO:Declaring metric variables
2024-11-16 19:12:21,167:INFO:Importing untrained model
2024-11-16 19:12:21,167:INFO:Ridge Classifier Imported successfully
2024-11-16 19:12:21,167:INFO:Starting cross validation
2024-11-16 19:12:21,167:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-16 19:12:21,217:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,217:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,217:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,219:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,219:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,220:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,220:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,221:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,221:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,221:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,221:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,222:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,222:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,222:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,223:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,223:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,225:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,225:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,225:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,226:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,227:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,227:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,229:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,229:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,238:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,239:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,240:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,241:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,242:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,242:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,247:INFO:Calculating mean and std
2024-11-16 19:12:21,247:INFO:Creating metrics dataframe
2024-11-16 19:12:21,248:INFO:Uploading results into container
2024-11-16 19:12:21,248:INFO:Uploading model into container now
2024-11-16 19:12:21,248:INFO:_master_model_container: 6
2024-11-16 19:12:21,249:INFO:_display_container: 2
2024-11-16 19:12:21,249:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2024-11-16 19:12:21,249:INFO:create_model() successfully completed......................................
2024-11-16 19:12:21,284:INFO:SubProcess create_model() end ==================================
2024-11-16 19:12:21,284:INFO:Creating metrics dataframe
2024-11-16 19:12:21,285:INFO:Initializing Random Forest Classifier
2024-11-16 19:12:21,285:INFO:Total runtime is 0.06367031335830688 minutes
2024-11-16 19:12:21,285:INFO:SubProcess create_model() called ==================================
2024-11-16 19:12:21,285:INFO:Initializing create_model()
2024-11-16 19:12:21,285:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11ed4fac0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1077e7250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-16 19:12:21,285:INFO:Checking exceptions
2024-11-16 19:12:21,285:INFO:Importing libraries
2024-11-16 19:12:21,285:INFO:Copying training dataset
2024-11-16 19:12:21,287:INFO:Defining folds
2024-11-16 19:12:21,287:INFO:Declaring metric variables
2024-11-16 19:12:21,287:INFO:Importing untrained model
2024-11-16 19:12:21,287:INFO:Random Forest Classifier Imported successfully
2024-11-16 19:12:21,287:INFO:Starting cross validation
2024-11-16 19:12:21,287:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-16 19:12:21,622:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,622:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,623:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,624:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,624:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,625:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,626:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,626:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,626:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,627:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,628:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,629:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,631:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,633:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,634:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,635:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,635:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,637:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,706:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,708:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,709:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,725:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,727:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,729:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,787:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,788:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,789:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,791:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,791:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,792:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,803:INFO:Calculating mean and std
2024-11-16 19:12:21,803:INFO:Creating metrics dataframe
2024-11-16 19:12:21,804:INFO:Uploading results into container
2024-11-16 19:12:21,804:INFO:Uploading model into container now
2024-11-16 19:12:21,805:INFO:_master_model_container: 7
2024-11-16 19:12:21,805:INFO:_display_container: 2
2024-11-16 19:12:21,805:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-11-16 19:12:21,805:INFO:create_model() successfully completed......................................
2024-11-16 19:12:21,843:INFO:SubProcess create_model() end ==================================
2024-11-16 19:12:21,843:INFO:Creating metrics dataframe
2024-11-16 19:12:21,845:INFO:Initializing Quadratic Discriminant Analysis
2024-11-16 19:12:21,845:INFO:Total runtime is 0.07299471696217855 minutes
2024-11-16 19:12:21,845:INFO:SubProcess create_model() called ==================================
2024-11-16 19:12:21,845:INFO:Initializing create_model()
2024-11-16 19:12:21,845:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11ed4fac0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1077e7250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-16 19:12:21,845:INFO:Checking exceptions
2024-11-16 19:12:21,845:INFO:Importing libraries
2024-11-16 19:12:21,845:INFO:Copying training dataset
2024-11-16 19:12:21,846:INFO:Defining folds
2024-11-16 19:12:21,846:INFO:Declaring metric variables
2024-11-16 19:12:21,846:INFO:Importing untrained model
2024-11-16 19:12:21,846:INFO:Quadratic Discriminant Analysis Imported successfully
2024-11-16 19:12:21,846:INFO:Starting cross validation
2024-11-16 19:12:21,847:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-16 19:12:21,873:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-16 19:12:21,873:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-16 19:12:21,873:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-16 19:12:21,873:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-16 19:12:21,873:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-16 19:12:21,877:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,878:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,878:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,878:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,879:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,880:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,880:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,880:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,881:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,881:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,882:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,883:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,884:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,886:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,886:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,886:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-16 19:12:21,889:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-16 19:12:21,890:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,891:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-16 19:12:21,892:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-16 19:12:21,892:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,893:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,894:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,895:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-16 19:12:21,895:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,897:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,897:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,898:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,899:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,899:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,901:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,901:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,901:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,902:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,903:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,913:INFO:Calculating mean and std
2024-11-16 19:12:21,914:INFO:Creating metrics dataframe
2024-11-16 19:12:21,915:INFO:Uploading results into container
2024-11-16 19:12:21,915:INFO:Uploading model into container now
2024-11-16 19:12:21,915:INFO:_master_model_container: 8
2024-11-16 19:12:21,915:INFO:_display_container: 2
2024-11-16 19:12:21,916:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-11-16 19:12:21,916:INFO:create_model() successfully completed......................................
2024-11-16 19:12:21,951:INFO:SubProcess create_model() end ==================================
2024-11-16 19:12:21,951:INFO:Creating metrics dataframe
2024-11-16 19:12:21,952:INFO:Initializing Ada Boost Classifier
2024-11-16 19:12:21,952:INFO:Total runtime is 0.07478618224461873 minutes
2024-11-16 19:12:21,952:INFO:SubProcess create_model() called ==================================
2024-11-16 19:12:21,952:INFO:Initializing create_model()
2024-11-16 19:12:21,952:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11ed4fac0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1077e7250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-16 19:12:21,952:INFO:Checking exceptions
2024-11-16 19:12:21,952:INFO:Importing libraries
2024-11-16 19:12:21,952:INFO:Copying training dataset
2024-11-16 19:12:21,953:INFO:Defining folds
2024-11-16 19:12:21,953:INFO:Declaring metric variables
2024-11-16 19:12:21,954:INFO:Importing untrained model
2024-11-16 19:12:21,954:INFO:Ada Boost Classifier Imported successfully
2024-11-16 19:12:21,954:INFO:Starting cross validation
2024-11-16 19:12:21,954:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-16 19:12:21,967:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-16 19:12:21,967:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-16 19:12:21,968:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-16 19:12:21,971:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-16 19:12:21,981:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-16 19:12:21,992:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-16 19:12:21,992:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-16 19:12:21,994:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-16 19:12:22,073:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,074:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,076:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,077:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,079:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,080:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,086:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,088:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,090:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,090:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-16 19:12:22,093:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,095:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,097:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,097:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-16 19:12:22,100:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,102:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,102:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,103:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,104:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,105:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,107:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,109:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,111:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,114:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,116:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,117:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,170:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,172:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,174:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,179:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,181:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,183:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,187:INFO:Calculating mean and std
2024-11-16 19:12:22,188:INFO:Creating metrics dataframe
2024-11-16 19:12:22,189:INFO:Uploading results into container
2024-11-16 19:12:22,189:INFO:Uploading model into container now
2024-11-16 19:12:22,189:INFO:_master_model_container: 9
2024-11-16 19:12:22,189:INFO:_display_container: 2
2024-11-16 19:12:22,189:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2024-11-16 19:12:22,189:INFO:create_model() successfully completed......................................
2024-11-16 19:12:22,228:INFO:SubProcess create_model() end ==================================
2024-11-16 19:12:22,228:INFO:Creating metrics dataframe
2024-11-16 19:12:22,229:INFO:Initializing Gradient Boosting Classifier
2024-11-16 19:12:22,229:INFO:Total runtime is 0.07940203348795573 minutes
2024-11-16 19:12:22,229:INFO:SubProcess create_model() called ==================================
2024-11-16 19:12:22,229:INFO:Initializing create_model()
2024-11-16 19:12:22,229:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11ed4fac0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1077e7250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-16 19:12:22,229:INFO:Checking exceptions
2024-11-16 19:12:22,229:INFO:Importing libraries
2024-11-16 19:12:22,229:INFO:Copying training dataset
2024-11-16 19:12:22,230:INFO:Defining folds
2024-11-16 19:12:22,230:INFO:Declaring metric variables
2024-11-16 19:12:22,231:INFO:Importing untrained model
2024-11-16 19:12:22,231:INFO:Gradient Boosting Classifier Imported successfully
2024-11-16 19:12:22,231:INFO:Starting cross validation
2024-11-16 19:12:22,231:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-16 19:12:22,521:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,525:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,527:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,542:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,543:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,545:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,558:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,558:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,562:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,563:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,564:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,566:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,572:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,574:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,576:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,583:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,585:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,587:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,587:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,588:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,591:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,649:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,651:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,652:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,754:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,756:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,757:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,767:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,769:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,770:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,779:INFO:Calculating mean and std
2024-11-16 19:12:22,780:INFO:Creating metrics dataframe
2024-11-16 19:12:22,781:INFO:Uploading results into container
2024-11-16 19:12:22,781:INFO:Uploading model into container now
2024-11-16 19:12:22,782:INFO:_master_model_container: 10
2024-11-16 19:12:22,782:INFO:_display_container: 2
2024-11-16 19:12:22,782:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-11-16 19:12:22,782:INFO:create_model() successfully completed......................................
2024-11-16 19:12:22,817:INFO:SubProcess create_model() end ==================================
2024-11-16 19:12:22,817:INFO:Creating metrics dataframe
2024-11-16 19:12:22,818:INFO:Initializing Linear Discriminant Analysis
2024-11-16 19:12:22,818:INFO:Total runtime is 0.0892182985941569 minutes
2024-11-16 19:12:22,818:INFO:SubProcess create_model() called ==================================
2024-11-16 19:12:22,818:INFO:Initializing create_model()
2024-11-16 19:12:22,818:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11ed4fac0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1077e7250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-16 19:12:22,818:INFO:Checking exceptions
2024-11-16 19:12:22,818:INFO:Importing libraries
2024-11-16 19:12:22,818:INFO:Copying training dataset
2024-11-16 19:12:22,819:INFO:Defining folds
2024-11-16 19:12:22,819:INFO:Declaring metric variables
2024-11-16 19:12:22,819:INFO:Importing untrained model
2024-11-16 19:12:22,820:INFO:Linear Discriminant Analysis Imported successfully
2024-11-16 19:12:22,820:INFO:Starting cross validation
2024-11-16 19:12:22,820:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-16 19:12:22,840:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,841:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,842:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,843:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,843:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,845:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,845:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,845:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,848:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,851:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,851:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,853:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,855:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,856:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,858:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,858:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,859:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,860:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,860:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,861:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,862:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,862:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,864:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,864:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,865:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,866:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,868:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,868:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,870:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,872:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,886:INFO:Calculating mean and std
2024-11-16 19:12:22,887:INFO:Creating metrics dataframe
2024-11-16 19:12:22,888:INFO:Uploading results into container
2024-11-16 19:12:22,888:INFO:Uploading model into container now
2024-11-16 19:12:22,888:INFO:_master_model_container: 11
2024-11-16 19:12:22,889:INFO:_display_container: 2
2024-11-16 19:12:22,889:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-11-16 19:12:22,889:INFO:create_model() successfully completed......................................
2024-11-16 19:12:22,925:INFO:SubProcess create_model() end ==================================
2024-11-16 19:12:22,925:INFO:Creating metrics dataframe
2024-11-16 19:12:22,926:INFO:Initializing Extra Trees Classifier
2024-11-16 19:12:22,926:INFO:Total runtime is 0.0910267472267151 minutes
2024-11-16 19:12:22,927:INFO:SubProcess create_model() called ==================================
2024-11-16 19:12:22,927:INFO:Initializing create_model()
2024-11-16 19:12:22,927:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11ed4fac0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1077e7250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-16 19:12:22,927:INFO:Checking exceptions
2024-11-16 19:12:22,927:INFO:Importing libraries
2024-11-16 19:12:22,927:INFO:Copying training dataset
2024-11-16 19:12:22,928:INFO:Defining folds
2024-11-16 19:12:22,928:INFO:Declaring metric variables
2024-11-16 19:12:22,928:INFO:Importing untrained model
2024-11-16 19:12:22,928:INFO:Extra Trees Classifier Imported successfully
2024-11-16 19:12:22,928:INFO:Starting cross validation
2024-11-16 19:12:22,929:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-16 19:12:23,161:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:23,163:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:23,164:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:23,164:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:23,165:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:23,165:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:23,166:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:23,166:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:23,166:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:23,167:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:23,168:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:23,169:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:23,171:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:23,173:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:23,175:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:23,190:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:23,192:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:23,194:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:23,194:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:23,196:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:23,198:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:23,201:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:23,202:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:23,204:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:23,279:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:23,279:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:23,281:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:23,281:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:23,283:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:23,283:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:23,298:INFO:Calculating mean and std
2024-11-16 19:12:23,299:INFO:Creating metrics dataframe
2024-11-16 19:12:23,300:INFO:Uploading results into container
2024-11-16 19:12:23,300:INFO:Uploading model into container now
2024-11-16 19:12:23,300:INFO:_master_model_container: 12
2024-11-16 19:12:23,300:INFO:_display_container: 2
2024-11-16 19:12:23,301:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-11-16 19:12:23,301:INFO:create_model() successfully completed......................................
2024-11-16 19:12:23,341:INFO:SubProcess create_model() end ==================================
2024-11-16 19:12:23,341:INFO:Creating metrics dataframe
2024-11-16 19:12:23,342:INFO:Initializing Light Gradient Boosting Machine
2024-11-16 19:12:23,342:INFO:Total runtime is 0.09795267979303997 minutes
2024-11-16 19:12:23,342:INFO:SubProcess create_model() called ==================================
2024-11-16 19:12:23,342:INFO:Initializing create_model()
2024-11-16 19:12:23,342:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11ed4fac0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1077e7250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-16 19:12:23,342:INFO:Checking exceptions
2024-11-16 19:12:23,342:INFO:Importing libraries
2024-11-16 19:12:23,342:INFO:Copying training dataset
2024-11-16 19:12:23,343:INFO:Defining folds
2024-11-16 19:12:23,344:INFO:Declaring metric variables
2024-11-16 19:12:23,344:INFO:Importing untrained model
2024-11-16 19:12:23,344:INFO:Light Gradient Boosting Machine Imported successfully
2024-11-16 19:12:23,344:INFO:Starting cross validation
2024-11-16 19:12:23,344:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-16 19:12:24,946:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:24,948:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:24,950:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,006:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,007:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,009:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,023:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,026:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,027:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,028:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,029:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,032:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,054:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,058:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,060:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,103:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,104:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,106:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,156:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,159:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,161:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,171:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,173:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,174:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,656:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,658:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,661:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,768:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,770:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,772:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,780:INFO:Calculating mean and std
2024-11-16 19:12:25,781:INFO:Creating metrics dataframe
2024-11-16 19:12:25,788:INFO:Uploading results into container
2024-11-16 19:12:25,788:INFO:Uploading model into container now
2024-11-16 19:12:25,788:INFO:_master_model_container: 13
2024-11-16 19:12:25,788:INFO:_display_container: 2
2024-11-16 19:12:25,789:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-11-16 19:12:25,789:INFO:create_model() successfully completed......................................
2024-11-16 19:12:25,876:INFO:SubProcess create_model() end ==================================
2024-11-16 19:12:25,876:INFO:Creating metrics dataframe
2024-11-16 19:12:25,877:INFO:Initializing Dummy Classifier
2024-11-16 19:12:25,877:INFO:Total runtime is 0.1402042309443156 minutes
2024-11-16 19:12:25,877:INFO:SubProcess create_model() called ==================================
2024-11-16 19:12:25,877:INFO:Initializing create_model()
2024-11-16 19:12:25,877:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11ed4fac0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1077e7250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-16 19:12:25,877:INFO:Checking exceptions
2024-11-16 19:12:25,877:INFO:Importing libraries
2024-11-16 19:12:25,877:INFO:Copying training dataset
2024-11-16 19:12:25,879:INFO:Defining folds
2024-11-16 19:12:25,879:INFO:Declaring metric variables
2024-11-16 19:12:25,879:INFO:Importing untrained model
2024-11-16 19:12:25,879:INFO:Dummy Classifier Imported successfully
2024-11-16 19:12:25,879:INFO:Starting cross validation
2024-11-16 19:12:25,879:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-16 19:12:25,897:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,898:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,899:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,900:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-16 19:12:25,900:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,901:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-16 19:12:25,902:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,902:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,909:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,912:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,915:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-16 19:12:25,917:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,917:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,919:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,920:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,920:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-16 19:12:25,921:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,922:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,922:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,923:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-16 19:12:25,923:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,924:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,925:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-16 19:12:25,926:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,930:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,931:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,932:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,933:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,933:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-16 19:12:25,934:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-16 19:12:25,934:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,935:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,935:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,936:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,937:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,938:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,938:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-16 19:12:25,939:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-16 19:12:25,939:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,939:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,944:INFO:Calculating mean and std
2024-11-16 19:12:25,945:INFO:Creating metrics dataframe
2024-11-16 19:12:25,946:INFO:Uploading results into container
2024-11-16 19:12:25,946:INFO:Uploading model into container now
2024-11-16 19:12:25,947:INFO:_master_model_container: 14
2024-11-16 19:12:25,947:INFO:_display_container: 2
2024-11-16 19:12:25,947:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2024-11-16 19:12:25,947:INFO:create_model() successfully completed......................................
2024-11-16 19:12:25,983:INFO:SubProcess create_model() end ==================================
2024-11-16 19:12:25,983:INFO:Creating metrics dataframe
2024-11-16 19:12:25,986:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2024-11-16 19:12:25,987:INFO:Initializing create_model()
2024-11-16 19:12:25,987:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11ed4fac0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-16 19:12:25,987:INFO:Checking exceptions
2024-11-16 19:12:25,987:INFO:Importing libraries
2024-11-16 19:12:25,987:INFO:Copying training dataset
2024-11-16 19:12:25,988:INFO:Defining folds
2024-11-16 19:12:25,988:INFO:Declaring metric variables
2024-11-16 19:12:25,988:INFO:Importing untrained model
2024-11-16 19:12:25,988:INFO:Declaring custom model
2024-11-16 19:12:25,989:INFO:Logistic Regression Imported successfully
2024-11-16 19:12:25,989:INFO:Cross validation set to False
2024-11-16 19:12:25,989:INFO:Fitting Model
2024-11-16 19:12:26,028:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-11-16 19:12:26,028:INFO:create_model() successfully completed......................................
2024-11-16 19:12:26,106:INFO:_master_model_container: 14
2024-11-16 19:12:26,106:INFO:_display_container: 2
2024-11-16 19:12:26,106:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-11-16 19:12:26,107:INFO:compare_models() successfully completed......................................
2024-11-16 19:12:26,117:INFO:Initializing finalize_model()
2024-11-16 19:12:26,117:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11ed4fac0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-11-16 19:12:26,118:INFO:Finalizing LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-11-16 19:12:26,120:INFO:Initializing create_model()
2024-11-16 19:12:26,120:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11ed4fac0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-11-16 19:12:26,120:INFO:Checking exceptions
2024-11-16 19:12:26,121:INFO:Importing libraries
2024-11-16 19:12:26,121:INFO:Copying training dataset
2024-11-16 19:12:26,121:INFO:Defining folds
2024-11-16 19:12:26,121:INFO:Declaring metric variables
2024-11-16 19:12:26,121:INFO:Importing untrained model
2024-11-16 19:12:26,121:INFO:Declaring custom model
2024-11-16 19:12:26,122:INFO:Logistic Regression Imported successfully
2024-11-16 19:12:26,123:INFO:Cross validation set to False
2024-11-16 19:12:26,123:INFO:Fitting Model
2024-11-16 19:12:26,159:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Timestamp', 'Raw_EMG',
                                             'Independent_Component'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=F...
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=123,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2024-11-16 19:12:26,159:INFO:create_model() successfully completed......................................
2024-11-16 19:12:26,208:INFO:_master_model_container: 14
2024-11-16 19:12:26,208:INFO:_display_container: 2
2024-11-16 19:12:26,209:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Timestamp', 'Raw_EMG',
                                             'Independent_Component'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=F...
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=123,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2024-11-16 19:12:26,210:INFO:finalize_model() successfully completed......................................
2024-11-16 19:12:26,282:INFO:Initializing evaluate_model()
2024-11-16 19:12:26,282:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11ed4fac0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Timestamp', 'Raw_EMG',
                                             'Independent_Component'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=F...
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=123,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-11-16 19:12:26,297:INFO:Initializing plot_model()
2024-11-16 19:12:26,300:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Timestamp', 'Raw_EMG',
                                             'Independent_Component'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=F...
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=123,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x11ed4fac0>, system=True)
2024-11-16 19:12:26,300:INFO:Checking exceptions
2024-11-16 19:12:26,301:INFO:Preloading libraries
2024-11-16 19:12:26,301:INFO:Copying training dataset
2024-11-16 19:12:26,301:INFO:Plot type: pipeline
2024-11-16 19:12:26,391:INFO:Visual Rendered Successfully
2024-11-16 19:12:26,432:INFO:plot_model() successfully completed......................................
2024-11-16 19:12:26,439:INFO:Initializing save_model()
2024-11-16 19:12:26,440:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Timestamp', 'Raw_EMG',
                                             'Independent_Component'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=F...
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=123,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), model_name=nbest, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/0j/8s23v_h569nfcs43k8n8y9pc0000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Timestamp', 'Raw_EMG',
                                             'Independent_Component'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-11-16 19:12:26,440:INFO:Adding model into prep_pipe
2024-11-16 19:12:26,440:WARNING:Only Model saved as it was a pipeline.
2024-11-16 19:12:26,441:INFO:nbest.pkl saved in current working directory
2024-11-16 19:12:26,443:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Timestamp', 'Raw_EMG',
                                             'Independent_Component'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=F...
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=123,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2024-11-16 19:12:26,443:INFO:save_model() successfully completed......................................
2024-11-16 19:12:36,753:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-16 19:12:36,753:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-16 19:12:36,753:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-16 19:12:36,753:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-16 19:12:37,191:INFO:Initializing load_model()
2024-11-16 19:12:37,191:INFO:load_model(model_name=nbest, platform=None, authentication=None, verbose=True)
2024-11-16 19:12:44,352:INFO:Initializing load_model()
2024-11-16 19:12:44,353:INFO:load_model(model_name=nbest, platform=None, authentication=None, verbose=True)
2024-11-16 19:13:10,332:INFO:Initializing load_model()
2024-11-16 19:13:10,334:INFO:load_model(model_name=nbest, platform=None, authentication=None, verbose=True)
2024-11-18 15:22:29,215:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-18 15:22:29,215:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-18 15:22:29,215:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-18 15:22:29,215:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-18 15:22:29,764:INFO:PyCaret ClassificationExperiment
2024-11-18 15:22:29,764:INFO:Logging name: clf-default-name
2024-11-18 15:22:29,764:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-11-18 15:22:29,764:INFO:version 3.3.2
2024-11-18 15:22:29,764:INFO:Initializing setup()
2024-11-18 15:22:29,764:INFO:self.USI: d0c7
2024-11-18 15:22:29,764:INFO:self._variable_keys: {'gpu_param', 'gpu_n_jobs_param', '_available_plots', 'fold_shuffle_param', 'logging_param', 'target_param', 'n_jobs_param', 'y_train', 'y_test', 'html_param', 'X', 'exp_id', 'exp_name_log', 'X_train', 'fold_generator', 'USI', 'is_multiclass', 'log_plots_param', 'fix_imbalance', 'seed', 'X_test', 'data', 'pipeline', 'memory', 'fold_groups_param', 'idx', '_ml_usecase', 'y'}
2024-11-18 15:22:29,764:INFO:Checking environment
2024-11-18 15:22:29,764:INFO:python_version: 3.9.20
2024-11-18 15:22:29,764:INFO:python_build: ('main', 'Oct  3 2024 02:24:59')
2024-11-18 15:22:29,764:INFO:machine: arm64
2024-11-18 15:22:29,764:INFO:platform: macOS-15.2-arm64-arm-64bit
2024-11-18 15:22:29,764:INFO:Memory: svmem(total=8589934592, available=1371275264, percent=84.0, used=2817884160, free=57704448, active=1327448064, inactive=1237549056, wired=1490436096)
2024-11-18 15:22:29,764:INFO:Physical Core: 8
2024-11-18 15:22:29,764:INFO:Logical Core: 8
2024-11-18 15:22:29,764:INFO:Checking libraries
2024-11-18 15:22:29,764:INFO:System:
2024-11-18 15:22:29,764:INFO:    python: 3.9.20 (main, Oct  3 2024, 02:24:59)  [Clang 14.0.6 ]
2024-11-18 15:22:29,764:INFO:executable: /opt/anaconda3/envs/batey/bin/python
2024-11-18 15:22:29,764:INFO:   machine: macOS-15.2-arm64-arm-64bit
2024-11-18 15:22:29,764:INFO:PyCaret required dependencies:
2024-11-18 15:22:29,796:INFO:                 pip: 24.2
2024-11-18 15:22:29,796:INFO:          setuptools: 75.1.0
2024-11-18 15:22:29,796:INFO:             pycaret: 3.3.2
2024-11-18 15:22:29,796:INFO:             IPython: 8.18.1
2024-11-18 15:22:29,796:INFO:          ipywidgets: 8.1.5
2024-11-18 15:22:29,796:INFO:                tqdm: 4.66.6
2024-11-18 15:22:29,796:INFO:               numpy: 1.26.4
2024-11-18 15:22:29,796:INFO:              pandas: 2.1.4
2024-11-18 15:22:29,796:INFO:              jinja2: 3.1.4
2024-11-18 15:22:29,796:INFO:               scipy: 1.11.4
2024-11-18 15:22:29,796:INFO:              joblib: 1.3.2
2024-11-18 15:22:29,796:INFO:             sklearn: 1.4.2
2024-11-18 15:22:29,796:INFO:                pyod: 2.0.2
2024-11-18 15:22:29,796:INFO:            imblearn: 0.12.4
2024-11-18 15:22:29,796:INFO:   category_encoders: 2.6.4
2024-11-18 15:22:29,796:INFO:            lightgbm: 4.5.0
2024-11-18 15:22:29,796:INFO:               numba: 0.60.0
2024-11-18 15:22:29,796:INFO:            requests: 2.32.3
2024-11-18 15:22:29,796:INFO:          matplotlib: 3.7.5
2024-11-18 15:22:29,796:INFO:          scikitplot: 0.3.7
2024-11-18 15:22:29,796:INFO:         yellowbrick: 1.5
2024-11-18 15:22:29,796:INFO:              plotly: 5.24.1
2024-11-18 15:22:29,796:INFO:    plotly-resampler: Not installed
2024-11-18 15:22:29,796:INFO:             kaleido: 0.2.1
2024-11-18 15:22:29,796:INFO:           schemdraw: 0.15
2024-11-18 15:22:29,796:INFO:         statsmodels: 0.14.4
2024-11-18 15:22:29,797:INFO:              sktime: 0.26.0
2024-11-18 15:22:29,797:INFO:               tbats: 1.1.3
2024-11-18 15:22:29,797:INFO:            pmdarima: 2.0.4
2024-11-18 15:22:29,797:INFO:              psutil: 6.1.0
2024-11-18 15:22:29,797:INFO:          markupsafe: 3.0.2
2024-11-18 15:22:29,797:INFO:             pickle5: Not installed
2024-11-18 15:22:29,797:INFO:         cloudpickle: 3.1.0
2024-11-18 15:22:29,797:INFO:         deprecation: 2.1.0
2024-11-18 15:22:29,797:INFO:              xxhash: 3.5.0
2024-11-18 15:22:29,797:INFO:           wurlitzer: 3.1.1
2024-11-18 15:22:29,797:INFO:PyCaret optional dependencies:
2024-11-18 15:22:29,802:INFO:                shap: Not installed
2024-11-18 15:22:29,802:INFO:           interpret: Not installed
2024-11-18 15:22:29,802:INFO:                umap: Not installed
2024-11-18 15:22:29,802:INFO:     ydata_profiling: Not installed
2024-11-18 15:22:29,802:INFO:  explainerdashboard: Not installed
2024-11-18 15:22:29,802:INFO:             autoviz: Not installed
2024-11-18 15:22:29,802:INFO:           fairlearn: Not installed
2024-11-18 15:22:29,802:INFO:          deepchecks: Not installed
2024-11-18 15:22:29,802:INFO:             xgboost: Not installed
2024-11-18 15:22:29,802:INFO:            catboost: Not installed
2024-11-18 15:22:29,802:INFO:              kmodes: Not installed
2024-11-18 15:22:29,802:INFO:             mlxtend: Not installed
2024-11-18 15:22:29,802:INFO:       statsforecast: Not installed
2024-11-18 15:22:29,802:INFO:        tune_sklearn: Not installed
2024-11-18 15:22:29,802:INFO:                 ray: Not installed
2024-11-18 15:22:29,802:INFO:            hyperopt: Not installed
2024-11-18 15:22:29,802:INFO:              optuna: Not installed
2024-11-18 15:22:29,802:INFO:               skopt: Not installed
2024-11-18 15:22:29,802:INFO:              mlflow: Not installed
2024-11-18 15:22:29,802:INFO:              gradio: Not installed
2024-11-18 15:22:29,802:INFO:             fastapi: Not installed
2024-11-18 15:22:29,802:INFO:             uvicorn: Not installed
2024-11-18 15:22:29,802:INFO:              m2cgen: Not installed
2024-11-18 15:22:29,802:INFO:           evidently: Not installed
2024-11-18 15:22:29,802:INFO:               fugue: Not installed
2024-11-18 15:22:29,802:INFO:           streamlit: Not installed
2024-11-18 15:22:29,802:INFO:             prophet: Not installed
2024-11-18 15:22:29,802:INFO:None
2024-11-18 15:22:29,802:INFO:Set up data.
2024-11-18 15:22:29,808:INFO:Set up folding strategy.
2024-11-18 15:22:29,808:INFO:Set up train/test split.
2024-11-18 15:22:29,822:INFO:Set up index.
2024-11-18 15:22:29,822:INFO:Assigning column types.
2024-11-18 15:22:29,824:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-11-18 15:22:29,840:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-11-18 15:22:29,841:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-18 15:22:29,854:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-18 15:22:29,854:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-18 15:22:29,870:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-11-18 15:22:29,870:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-18 15:22:29,880:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-18 15:22:29,881:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-18 15:22:29,881:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-11-18 15:22:29,897:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-18 15:22:29,907:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-18 15:22:29,907:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-18 15:22:29,924:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-18 15:22:29,934:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-18 15:22:29,934:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-18 15:22:29,935:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-11-18 15:22:29,961:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-18 15:22:29,961:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-18 15:22:29,988:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-18 15:22:29,988:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-18 15:22:29,990:INFO:Preparing preprocessing pipeline...
2024-11-18 15:22:29,991:INFO:Set up label encoding.
2024-11-18 15:22:29,991:INFO:Set up simple imputation.
2024-11-18 15:22:30,033:INFO:Finished creating preprocessing pipeline.
2024-11-18 15:22:30,036:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/0j/8s23v_h569nfcs43k8n8y9pc0000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Timestamp', 'Raw_EMG',
                                             'Independent_Component'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2024-11-18 15:22:30,036:INFO:Creating final display dataframe.
2024-11-18 15:22:30,059:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target             Label
2                   Target type            Binary
3                Target mapping    GO: 0, STOP: 1
4           Original data shape         (5722, 4)
5        Transformed data shape         (5722, 4)
6   Transformed train set shape         (4005, 4)
7    Transformed test set shape         (1717, 4)
8              Numeric features                 3
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13               Fold Generator   StratifiedKFold
14                  Fold Number                10
15                     CPU Jobs                -1
16                      Use GPU             False
17               Log Experiment             False
18              Experiment Name  clf-default-name
19                          USI              d0c7
2024-11-18 15:22:30,086:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-18 15:22:30,086:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-18 15:22:30,113:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-18 15:22:30,113:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-18 15:22:30,114:INFO:setup() successfully completed in 0.35s...............
2024-11-18 15:22:30,135:INFO:Initializing compare_models()
2024-11-18 15:22:30,135:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11ad27ac0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x11ad27ac0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-11-18 15:22:30,135:INFO:Checking exceptions
2024-11-18 15:22:30,136:INFO:Preparing display monitor
2024-11-18 15:22:30,153:INFO:Initializing Logistic Regression
2024-11-18 15:22:30,153:INFO:Total runtime is 2.5113423665364583e-06 minutes
2024-11-18 15:22:30,153:INFO:SubProcess create_model() called ==================================
2024-11-18 15:22:30,154:INFO:Initializing create_model()
2024-11-18 15:22:30,154:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11ad27ac0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x15864eee0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-18 15:22:30,154:INFO:Checking exceptions
2024-11-18 15:22:30,154:INFO:Importing libraries
2024-11-18 15:22:30,154:INFO:Copying training dataset
2024-11-18 15:22:30,155:INFO:Defining folds
2024-11-18 15:22:30,155:INFO:Declaring metric variables
2024-11-18 15:22:30,155:INFO:Importing untrained model
2024-11-18 15:22:30,156:INFO:Logistic Regression Imported successfully
2024-11-18 15:22:30,156:INFO:Starting cross validation
2024-11-18 15:22:30,156:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-18 15:22:32,808:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:32,810:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:32,811:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:32,812:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:32,813:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:32,817:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:32,843:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:32,843:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:32,845:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:32,846:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:32,847:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:32,849:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:32,854:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:32,856:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:32,857:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:32,869:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:32,871:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:32,871:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:32,873:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:32,873:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:32,874:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:32,875:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:32,876:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:32,878:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:32,885:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:32,887:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:32,889:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:32,901:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:32,903:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:32,905:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:32,917:INFO:Calculating mean and std
2024-11-18 15:22:32,931:INFO:Creating metrics dataframe
2024-11-18 15:22:32,934:INFO:Uploading results into container
2024-11-18 15:22:32,934:INFO:Uploading model into container now
2024-11-18 15:22:32,935:INFO:_master_model_container: 1
2024-11-18 15:22:32,935:INFO:_display_container: 2
2024-11-18 15:22:32,935:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-11-18 15:22:32,935:INFO:create_model() successfully completed......................................
2024-11-18 15:22:33,006:INFO:SubProcess create_model() end ==================================
2024-11-18 15:22:33,006:INFO:Creating metrics dataframe
2024-11-18 15:22:33,007:INFO:Initializing K Neighbors Classifier
2024-11-18 15:22:33,007:INFO:Total runtime is 0.04756121635437011 minutes
2024-11-18 15:22:33,007:INFO:SubProcess create_model() called ==================================
2024-11-18 15:22:33,007:INFO:Initializing create_model()
2024-11-18 15:22:33,007:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11ad27ac0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x15864eee0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-18 15:22:33,007:INFO:Checking exceptions
2024-11-18 15:22:33,007:INFO:Importing libraries
2024-11-18 15:22:33,007:INFO:Copying training dataset
2024-11-18 15:22:33,008:INFO:Defining folds
2024-11-18 15:22:33,008:INFO:Declaring metric variables
2024-11-18 15:22:33,008:INFO:Importing untrained model
2024-11-18 15:22:33,008:INFO:K Neighbors Classifier Imported successfully
2024-11-18 15:22:33,008:INFO:Starting cross validation
2024-11-18 15:22:33,009:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-18 15:22:33,062:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,063:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,064:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,064:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,066:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,066:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,067:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,069:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,070:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,071:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,072:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,073:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,079:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,081:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,082:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,082:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,083:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,084:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,085:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,086:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,088:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,098:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,100:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,101:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,111:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,112:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,113:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,113:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,114:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,115:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,122:INFO:Calculating mean and std
2024-11-18 15:22:33,123:INFO:Creating metrics dataframe
2024-11-18 15:22:33,124:INFO:Uploading results into container
2024-11-18 15:22:33,124:INFO:Uploading model into container now
2024-11-18 15:22:33,124:INFO:_master_model_container: 2
2024-11-18 15:22:33,125:INFO:_display_container: 2
2024-11-18 15:22:33,125:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-11-18 15:22:33,125:INFO:create_model() successfully completed......................................
2024-11-18 15:22:33,158:INFO:SubProcess create_model() end ==================================
2024-11-18 15:22:33,158:INFO:Creating metrics dataframe
2024-11-18 15:22:33,159:INFO:Initializing Naive Bayes
2024-11-18 15:22:33,159:INFO:Total runtime is 0.050102313359578446 minutes
2024-11-18 15:22:33,159:INFO:SubProcess create_model() called ==================================
2024-11-18 15:22:33,159:INFO:Initializing create_model()
2024-11-18 15:22:33,159:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11ad27ac0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x15864eee0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-18 15:22:33,159:INFO:Checking exceptions
2024-11-18 15:22:33,159:INFO:Importing libraries
2024-11-18 15:22:33,159:INFO:Copying training dataset
2024-11-18 15:22:33,160:INFO:Defining folds
2024-11-18 15:22:33,160:INFO:Declaring metric variables
2024-11-18 15:22:33,160:INFO:Importing untrained model
2024-11-18 15:22:33,161:INFO:Naive Bayes Imported successfully
2024-11-18 15:22:33,161:INFO:Starting cross validation
2024-11-18 15:22:33,161:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-18 15:22:33,175:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,177:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,177:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,177:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,178:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,178:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,179:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,179:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,179:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,180:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,181:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,181:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,188:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,189:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,190:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,190:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,191:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,191:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,192:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,192:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,193:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,193:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,195:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,195:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,196:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,198:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,199:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,199:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,201:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,202:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,212:INFO:Calculating mean and std
2024-11-18 15:22:33,212:INFO:Creating metrics dataframe
2024-11-18 15:22:33,213:INFO:Uploading results into container
2024-11-18 15:22:33,213:INFO:Uploading model into container now
2024-11-18 15:22:33,214:INFO:_master_model_container: 3
2024-11-18 15:22:33,214:INFO:_display_container: 2
2024-11-18 15:22:33,214:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-11-18 15:22:33,214:INFO:create_model() successfully completed......................................
2024-11-18 15:22:33,246:INFO:SubProcess create_model() end ==================================
2024-11-18 15:22:33,246:INFO:Creating metrics dataframe
2024-11-18 15:22:33,247:INFO:Initializing Decision Tree Classifier
2024-11-18 15:22:33,247:INFO:Total runtime is 0.05156772931416829 minutes
2024-11-18 15:22:33,247:INFO:SubProcess create_model() called ==================================
2024-11-18 15:22:33,247:INFO:Initializing create_model()
2024-11-18 15:22:33,247:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11ad27ac0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x15864eee0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-18 15:22:33,247:INFO:Checking exceptions
2024-11-18 15:22:33,247:INFO:Importing libraries
2024-11-18 15:22:33,247:INFO:Copying training dataset
2024-11-18 15:22:33,249:INFO:Defining folds
2024-11-18 15:22:33,249:INFO:Declaring metric variables
2024-11-18 15:22:33,249:INFO:Importing untrained model
2024-11-18 15:22:33,249:INFO:Decision Tree Classifier Imported successfully
2024-11-18 15:22:33,249:INFO:Starting cross validation
2024-11-18 15:22:33,250:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-18 15:22:33,273:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,275:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,276:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,276:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,277:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,277:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,279:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,281:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,282:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,283:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,283:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,284:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,285:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,286:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,287:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,287:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,288:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,290:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,291:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,293:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,295:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,296:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,298:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,299:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,300:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,300:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,300:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,302:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,302:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,303:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,313:INFO:Calculating mean and std
2024-11-18 15:22:33,313:INFO:Creating metrics dataframe
2024-11-18 15:22:33,314:INFO:Uploading results into container
2024-11-18 15:22:33,314:INFO:Uploading model into container now
2024-11-18 15:22:33,314:INFO:_master_model_container: 4
2024-11-18 15:22:33,314:INFO:_display_container: 2
2024-11-18 15:22:33,315:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-11-18 15:22:33,315:INFO:create_model() successfully completed......................................
2024-11-18 15:22:33,347:INFO:SubProcess create_model() end ==================================
2024-11-18 15:22:33,347:INFO:Creating metrics dataframe
2024-11-18 15:22:33,348:INFO:Initializing SVM - Linear Kernel
2024-11-18 15:22:33,348:INFO:Total runtime is 0.05325529972712198 minutes
2024-11-18 15:22:33,348:INFO:SubProcess create_model() called ==================================
2024-11-18 15:22:33,348:INFO:Initializing create_model()
2024-11-18 15:22:33,348:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11ad27ac0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x15864eee0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-18 15:22:33,348:INFO:Checking exceptions
2024-11-18 15:22:33,348:INFO:Importing libraries
2024-11-18 15:22:33,348:INFO:Copying training dataset
2024-11-18 15:22:33,350:INFO:Defining folds
2024-11-18 15:22:33,350:INFO:Declaring metric variables
2024-11-18 15:22:33,350:INFO:Importing untrained model
2024-11-18 15:22:33,350:INFO:SVM - Linear Kernel Imported successfully
2024-11-18 15:22:33,351:INFO:Starting cross validation
2024-11-18 15:22:33,351:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-18 15:22:33,380:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,384:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,385:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,385:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,386:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-18 15:22:33,387:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,387:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,387:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,388:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,390:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,391:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-18 15:22:33,392:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,392:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,395:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-18 15:22:33,396:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,398:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,400:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,402:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,402:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,402:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-18 15:22:33,404:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,404:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,404:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,405:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-18 15:22:33,405:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-18 15:22:33,405:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,405:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,408:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,410:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,412:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,413:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,415:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,416:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-18 15:22:33,416:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,421:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,422:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,423:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-18 15:22:33,424:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,432:INFO:Calculating mean and std
2024-11-18 15:22:33,432:INFO:Creating metrics dataframe
2024-11-18 15:22:33,433:INFO:Uploading results into container
2024-11-18 15:22:33,433:INFO:Uploading model into container now
2024-11-18 15:22:33,433:INFO:_master_model_container: 5
2024-11-18 15:22:33,433:INFO:_display_container: 2
2024-11-18 15:22:33,433:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-11-18 15:22:33,433:INFO:create_model() successfully completed......................................
2024-11-18 15:22:33,465:INFO:SubProcess create_model() end ==================================
2024-11-18 15:22:33,466:INFO:Creating metrics dataframe
2024-11-18 15:22:33,467:INFO:Initializing Ridge Classifier
2024-11-18 15:22:33,467:INFO:Total runtime is 0.055227065086364734 minutes
2024-11-18 15:22:33,467:INFO:SubProcess create_model() called ==================================
2024-11-18 15:22:33,467:INFO:Initializing create_model()
2024-11-18 15:22:33,467:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11ad27ac0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x15864eee0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-18 15:22:33,467:INFO:Checking exceptions
2024-11-18 15:22:33,467:INFO:Importing libraries
2024-11-18 15:22:33,467:INFO:Copying training dataset
2024-11-18 15:22:33,468:INFO:Defining folds
2024-11-18 15:22:33,468:INFO:Declaring metric variables
2024-11-18 15:22:33,468:INFO:Importing untrained model
2024-11-18 15:22:33,469:INFO:Ridge Classifier Imported successfully
2024-11-18 15:22:33,469:INFO:Starting cross validation
2024-11-18 15:22:33,469:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-18 15:22:33,491:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,491:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,492:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,492:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,493:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,493:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,493:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,493:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,495:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,495:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,495:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,495:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,499:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,500:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,501:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,501:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,503:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,504:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,504:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,504:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,506:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,507:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,508:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,509:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,509:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,510:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,511:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,512:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,513:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,515:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,520:INFO:Calculating mean and std
2024-11-18 15:22:33,520:INFO:Creating metrics dataframe
2024-11-18 15:22:33,521:INFO:Uploading results into container
2024-11-18 15:22:33,521:INFO:Uploading model into container now
2024-11-18 15:22:33,521:INFO:_master_model_container: 6
2024-11-18 15:22:33,521:INFO:_display_container: 2
2024-11-18 15:22:33,521:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2024-11-18 15:22:33,521:INFO:create_model() successfully completed......................................
2024-11-18 15:22:33,555:INFO:SubProcess create_model() end ==================================
2024-11-18 15:22:33,555:INFO:Creating metrics dataframe
2024-11-18 15:22:33,556:INFO:Initializing Random Forest Classifier
2024-11-18 15:22:33,556:INFO:Total runtime is 0.05672250191370645 minutes
2024-11-18 15:22:33,556:INFO:SubProcess create_model() called ==================================
2024-11-18 15:22:33,556:INFO:Initializing create_model()
2024-11-18 15:22:33,556:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11ad27ac0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x15864eee0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-18 15:22:33,556:INFO:Checking exceptions
2024-11-18 15:22:33,557:INFO:Importing libraries
2024-11-18 15:22:33,557:INFO:Copying training dataset
2024-11-18 15:22:33,558:INFO:Defining folds
2024-11-18 15:22:33,558:INFO:Declaring metric variables
2024-11-18 15:22:33,558:INFO:Importing untrained model
2024-11-18 15:22:33,558:INFO:Random Forest Classifier Imported successfully
2024-11-18 15:22:33,558:INFO:Starting cross validation
2024-11-18 15:22:33,558:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-18 15:22:33,886:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,888:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,890:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,893:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,895:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,896:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,911:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,912:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,913:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,914:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,914:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,914:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,914:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,916:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,916:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,917:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,918:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,919:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,921:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,921:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,923:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,977:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,980:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:33,981:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:34,060:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:34,060:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:34,062:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:34,062:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:34,063:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:34,064:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:34,074:INFO:Calculating mean and std
2024-11-18 15:22:34,075:INFO:Creating metrics dataframe
2024-11-18 15:22:34,075:INFO:Uploading results into container
2024-11-18 15:22:34,076:INFO:Uploading model into container now
2024-11-18 15:22:34,076:INFO:_master_model_container: 7
2024-11-18 15:22:34,076:INFO:_display_container: 2
2024-11-18 15:22:34,076:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-11-18 15:22:34,076:INFO:create_model() successfully completed......................................
2024-11-18 15:22:34,109:INFO:SubProcess create_model() end ==================================
2024-11-18 15:22:34,110:INFO:Creating metrics dataframe
2024-11-18 15:22:34,111:INFO:Initializing Quadratic Discriminant Analysis
2024-11-18 15:22:34,111:INFO:Total runtime is 0.06596059799194334 minutes
2024-11-18 15:22:34,111:INFO:SubProcess create_model() called ==================================
2024-11-18 15:22:34,111:INFO:Initializing create_model()
2024-11-18 15:22:34,111:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11ad27ac0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x15864eee0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-18 15:22:34,111:INFO:Checking exceptions
2024-11-18 15:22:34,111:INFO:Importing libraries
2024-11-18 15:22:34,111:INFO:Copying training dataset
2024-11-18 15:22:34,112:INFO:Defining folds
2024-11-18 15:22:34,112:INFO:Declaring metric variables
2024-11-18 15:22:34,112:INFO:Importing untrained model
2024-11-18 15:22:34,112:INFO:Quadratic Discriminant Analysis Imported successfully
2024-11-18 15:22:34,112:INFO:Starting cross validation
2024-11-18 15:22:34,112:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-18 15:22:34,125:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-18 15:22:34,127:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-18 15:22:34,129:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:34,131:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:34,131:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-18 15:22:34,131:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:34,132:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:34,133:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:34,133:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-18 15:22:34,134:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:34,135:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:34,137:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:34,137:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:34,138:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:34,139:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-18 15:22:34,139:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:34,139:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-18 15:22:34,140:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:34,143:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:34,143:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:34,144:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-18 15:22:34,144:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:34,144:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-18 15:22:34,145:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:34,146:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:34,146:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:34,147:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-18 15:22:34,148:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:34,148:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:34,150:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:34,150:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:34,151:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-18 15:22:34,152:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:34,152:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:34,153:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:34,155:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:34,156:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:34,156:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:34,157:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:34,159:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:34,165:INFO:Calculating mean and std
2024-11-18 15:22:34,165:INFO:Creating metrics dataframe
2024-11-18 15:22:34,166:INFO:Uploading results into container
2024-11-18 15:22:34,166:INFO:Uploading model into container now
2024-11-18 15:22:34,166:INFO:_master_model_container: 8
2024-11-18 15:22:34,166:INFO:_display_container: 2
2024-11-18 15:22:34,167:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-11-18 15:22:34,167:INFO:create_model() successfully completed......................................
2024-11-18 15:22:34,199:INFO:SubProcess create_model() end ==================================
2024-11-18 15:22:34,199:INFO:Creating metrics dataframe
2024-11-18 15:22:34,200:INFO:Initializing Ada Boost Classifier
2024-11-18 15:22:34,200:INFO:Total runtime is 0.06745361487070718 minutes
2024-11-18 15:22:34,200:INFO:SubProcess create_model() called ==================================
2024-11-18 15:22:34,200:INFO:Initializing create_model()
2024-11-18 15:22:34,200:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11ad27ac0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x15864eee0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-18 15:22:34,200:INFO:Checking exceptions
2024-11-18 15:22:34,200:INFO:Importing libraries
2024-11-18 15:22:34,200:INFO:Copying training dataset
2024-11-18 15:22:34,202:INFO:Defining folds
2024-11-18 15:22:34,202:INFO:Declaring metric variables
2024-11-18 15:22:34,202:INFO:Importing untrained model
2024-11-18 15:22:34,202:INFO:Ada Boost Classifier Imported successfully
2024-11-18 15:22:34,202:INFO:Starting cross validation
2024-11-18 15:22:34,203:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-18 15:22:34,213:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-18 15:22:34,214:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-18 15:22:34,215:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-18 15:22:34,218:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-18 15:22:34,230:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-18 15:22:34,230:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-18 15:22:34,238:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-18 15:22:34,252:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-18 15:22:34,314:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:34,316:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:34,318:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:34,324:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:34,326:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:34,328:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:34,329:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-18 15:22:34,330:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:34,332:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:34,333:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:34,337:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:34,339:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:34,339:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:34,341:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:34,343:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:34,343:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:34,344:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:34,345:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:34,345:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-18 15:22:34,345:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:34,347:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:34,347:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:34,348:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:34,353:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:34,355:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:34,357:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:34,407:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:34,408:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:34,410:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:34,422:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:34,424:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:34,426:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:34,430:INFO:Calculating mean and std
2024-11-18 15:22:34,430:INFO:Creating metrics dataframe
2024-11-18 15:22:34,430:INFO:Uploading results into container
2024-11-18 15:22:34,431:INFO:Uploading model into container now
2024-11-18 15:22:34,431:INFO:_master_model_container: 9
2024-11-18 15:22:34,431:INFO:_display_container: 2
2024-11-18 15:22:34,431:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2024-11-18 15:22:34,431:INFO:create_model() successfully completed......................................
2024-11-18 15:22:34,463:INFO:SubProcess create_model() end ==================================
2024-11-18 15:22:34,463:INFO:Creating metrics dataframe
2024-11-18 15:22:34,464:INFO:Initializing Gradient Boosting Classifier
2024-11-18 15:22:34,464:INFO:Total runtime is 0.07185211181640624 minutes
2024-11-18 15:22:34,464:INFO:SubProcess create_model() called ==================================
2024-11-18 15:22:34,464:INFO:Initializing create_model()
2024-11-18 15:22:34,464:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11ad27ac0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x15864eee0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-18 15:22:34,464:INFO:Checking exceptions
2024-11-18 15:22:34,464:INFO:Importing libraries
2024-11-18 15:22:34,464:INFO:Copying training dataset
2024-11-18 15:22:34,466:INFO:Defining folds
2024-11-18 15:22:34,466:INFO:Declaring metric variables
2024-11-18 15:22:34,466:INFO:Importing untrained model
2024-11-18 15:22:34,466:INFO:Gradient Boosting Classifier Imported successfully
2024-11-18 15:22:34,467:INFO:Starting cross validation
2024-11-18 15:22:34,467:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-18 15:22:34,755:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:34,757:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:34,758:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:34,802:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:34,804:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:34,806:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:34,807:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:34,808:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:34,808:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:34,808:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:34,810:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:34,813:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:34,814:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:34,814:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:34,815:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:34,818:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:34,822:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:34,824:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:34,830:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:34,832:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:34,834:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:34,860:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:34,861:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:34,863:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:35,026:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:35,027:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:35,029:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:35,045:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:35,046:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:35,048:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:35,058:INFO:Calculating mean and std
2024-11-18 15:22:35,058:INFO:Creating metrics dataframe
2024-11-18 15:22:35,059:INFO:Uploading results into container
2024-11-18 15:22:35,060:INFO:Uploading model into container now
2024-11-18 15:22:35,060:INFO:_master_model_container: 10
2024-11-18 15:22:35,060:INFO:_display_container: 2
2024-11-18 15:22:35,060:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-11-18 15:22:35,060:INFO:create_model() successfully completed......................................
2024-11-18 15:22:35,092:INFO:SubProcess create_model() end ==================================
2024-11-18 15:22:35,092:INFO:Creating metrics dataframe
2024-11-18 15:22:35,094:INFO:Initializing Linear Discriminant Analysis
2024-11-18 15:22:35,094:INFO:Total runtime is 0.08234463135401407 minutes
2024-11-18 15:22:35,094:INFO:SubProcess create_model() called ==================================
2024-11-18 15:22:35,094:INFO:Initializing create_model()
2024-11-18 15:22:35,094:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11ad27ac0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x15864eee0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-18 15:22:35,094:INFO:Checking exceptions
2024-11-18 15:22:35,094:INFO:Importing libraries
2024-11-18 15:22:35,094:INFO:Copying training dataset
2024-11-18 15:22:35,095:INFO:Defining folds
2024-11-18 15:22:35,095:INFO:Declaring metric variables
2024-11-18 15:22:35,095:INFO:Importing untrained model
2024-11-18 15:22:35,095:INFO:Linear Discriminant Analysis Imported successfully
2024-11-18 15:22:35,095:INFO:Starting cross validation
2024-11-18 15:22:35,096:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-18 15:22:35,110:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:35,111:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:35,112:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:35,112:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:35,114:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:35,114:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:35,116:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:35,118:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:35,120:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:35,122:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:35,124:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:35,125:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:35,126:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:35,127:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:35,129:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:35,129:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:35,129:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:35,131:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:35,131:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:35,132:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:35,133:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:35,133:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:35,133:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:35,135:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:35,140:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:35,141:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:35,142:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:35,143:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:35,143:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:35,145:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:35,150:INFO:Calculating mean and std
2024-11-18 15:22:35,150:INFO:Creating metrics dataframe
2024-11-18 15:22:35,151:INFO:Uploading results into container
2024-11-18 15:22:35,151:INFO:Uploading model into container now
2024-11-18 15:22:35,151:INFO:_master_model_container: 11
2024-11-18 15:22:35,151:INFO:_display_container: 2
2024-11-18 15:22:35,151:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-11-18 15:22:35,151:INFO:create_model() successfully completed......................................
2024-11-18 15:22:35,184:INFO:SubProcess create_model() end ==================================
2024-11-18 15:22:35,184:INFO:Creating metrics dataframe
2024-11-18 15:22:35,185:INFO:Initializing Extra Trees Classifier
2024-11-18 15:22:35,185:INFO:Total runtime is 0.08386916716893512 minutes
2024-11-18 15:22:35,185:INFO:SubProcess create_model() called ==================================
2024-11-18 15:22:35,185:INFO:Initializing create_model()
2024-11-18 15:22:35,185:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11ad27ac0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x15864eee0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-18 15:22:35,185:INFO:Checking exceptions
2024-11-18 15:22:35,185:INFO:Importing libraries
2024-11-18 15:22:35,185:INFO:Copying training dataset
2024-11-18 15:22:35,187:INFO:Defining folds
2024-11-18 15:22:35,187:INFO:Declaring metric variables
2024-11-18 15:22:35,187:INFO:Importing untrained model
2024-11-18 15:22:35,187:INFO:Extra Trees Classifier Imported successfully
2024-11-18 15:22:35,187:INFO:Starting cross validation
2024-11-18 15:22:35,188:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-18 15:22:35,393:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:35,393:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:35,398:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:35,398:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:35,402:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:35,403:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:35,404:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:35,404:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:35,405:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:35,410:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:35,410:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:35,411:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:35,411:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:35,411:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:35,412:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:35,413:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:35,413:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:35,414:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:35,414:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:35,416:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:35,416:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:35,420:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:35,422:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:35,423:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:35,507:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:35,509:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:35,510:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:35,513:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:35,515:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:35,516:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:35,520:INFO:Calculating mean and std
2024-11-18 15:22:35,520:INFO:Creating metrics dataframe
2024-11-18 15:22:35,521:INFO:Uploading results into container
2024-11-18 15:22:35,521:INFO:Uploading model into container now
2024-11-18 15:22:35,521:INFO:_master_model_container: 12
2024-11-18 15:22:35,521:INFO:_display_container: 2
2024-11-18 15:22:35,522:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-11-18 15:22:35,522:INFO:create_model() successfully completed......................................
2024-11-18 15:22:35,555:INFO:SubProcess create_model() end ==================================
2024-11-18 15:22:35,555:INFO:Creating metrics dataframe
2024-11-18 15:22:35,556:INFO:Initializing Light Gradient Boosting Machine
2024-11-18 15:22:35,556:INFO:Total runtime is 0.09004726409912107 minutes
2024-11-18 15:22:35,556:INFO:SubProcess create_model() called ==================================
2024-11-18 15:22:35,556:INFO:Initializing create_model()
2024-11-18 15:22:35,556:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11ad27ac0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x15864eee0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-18 15:22:35,556:INFO:Checking exceptions
2024-11-18 15:22:35,556:INFO:Importing libraries
2024-11-18 15:22:35,556:INFO:Copying training dataset
2024-11-18 15:22:35,557:INFO:Defining folds
2024-11-18 15:22:35,557:INFO:Declaring metric variables
2024-11-18 15:22:35,557:INFO:Importing untrained model
2024-11-18 15:22:35,557:INFO:Light Gradient Boosting Machine Imported successfully
2024-11-18 15:22:35,557:INFO:Starting cross validation
2024-11-18 15:22:35,558:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-18 15:22:37,259:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:37,260:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:37,262:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:37,292:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:37,294:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:37,296:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:37,327:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:37,329:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:37,331:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:37,358:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:37,360:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:37,361:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:37,366:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:37,368:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:37,369:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:37,370:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:37,371:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:37,372:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:37,393:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:37,395:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:37,398:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:37,419:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:37,421:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:37,422:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:37,804:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:37,805:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:37,807:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:37,811:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:37,812:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:37,814:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:37,820:INFO:Calculating mean and std
2024-11-18 15:22:37,820:INFO:Creating metrics dataframe
2024-11-18 15:22:37,821:INFO:Uploading results into container
2024-11-18 15:22:37,822:INFO:Uploading model into container now
2024-11-18 15:22:37,822:INFO:_master_model_container: 13
2024-11-18 15:22:37,822:INFO:_display_container: 2
2024-11-18 15:22:37,822:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-11-18 15:22:37,822:INFO:create_model() successfully completed......................................
2024-11-18 15:22:37,860:INFO:SubProcess create_model() end ==================================
2024-11-18 15:22:37,860:INFO:Creating metrics dataframe
2024-11-18 15:22:37,861:INFO:Initializing Dummy Classifier
2024-11-18 15:22:37,861:INFO:Total runtime is 0.1284687836964925 minutes
2024-11-18 15:22:37,861:INFO:SubProcess create_model() called ==================================
2024-11-18 15:22:37,861:INFO:Initializing create_model()
2024-11-18 15:22:37,861:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11ad27ac0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x15864eee0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-18 15:22:37,861:INFO:Checking exceptions
2024-11-18 15:22:37,861:INFO:Importing libraries
2024-11-18 15:22:37,861:INFO:Copying training dataset
2024-11-18 15:22:37,863:INFO:Defining folds
2024-11-18 15:22:37,863:INFO:Declaring metric variables
2024-11-18 15:22:37,863:INFO:Importing untrained model
2024-11-18 15:22:37,863:INFO:Dummy Classifier Imported successfully
2024-11-18 15:22:37,863:INFO:Starting cross validation
2024-11-18 15:22:37,863:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-18 15:22:37,875:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:37,876:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:37,877:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:37,877:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:37,878:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-18 15:22:37,878:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-18 15:22:37,878:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:37,879:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:37,880:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:37,881:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:37,882:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-18 15:22:37,883:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:37,885:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:37,886:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:37,887:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-18 15:22:37,888:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:37,888:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:37,888:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:37,890:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:37,890:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:37,891:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-18 15:22:37,891:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-18 15:22:37,892:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:37,892:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:37,894:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:37,896:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:37,896:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:37,897:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-18 15:22:37,897:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:37,897:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:37,898:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-18 15:22:37,899:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:37,900:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:37,900:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:37,902:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:37,902:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:37,903:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-18 15:22:37,903:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-18 15:22:37,903:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:37,904:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:22:37,918:INFO:Calculating mean and std
2024-11-18 15:22:37,918:INFO:Creating metrics dataframe
2024-11-18 15:22:37,919:INFO:Uploading results into container
2024-11-18 15:22:37,919:INFO:Uploading model into container now
2024-11-18 15:22:37,919:INFO:_master_model_container: 14
2024-11-18 15:22:37,919:INFO:_display_container: 2
2024-11-18 15:22:37,919:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2024-11-18 15:22:37,919:INFO:create_model() successfully completed......................................
2024-11-18 15:22:37,952:INFO:SubProcess create_model() end ==================================
2024-11-18 15:22:37,952:INFO:Creating metrics dataframe
2024-11-18 15:22:37,956:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2024-11-18 15:22:37,956:INFO:Initializing create_model()
2024-11-18 15:22:37,956:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11ad27ac0>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-18 15:22:37,956:INFO:Checking exceptions
2024-11-18 15:22:37,957:INFO:Importing libraries
2024-11-18 15:22:37,957:INFO:Copying training dataset
2024-11-18 15:22:37,958:INFO:Defining folds
2024-11-18 15:22:37,958:INFO:Declaring metric variables
2024-11-18 15:22:37,958:INFO:Importing untrained model
2024-11-18 15:22:37,958:INFO:Declaring custom model
2024-11-18 15:22:37,958:INFO:Quadratic Discriminant Analysis Imported successfully
2024-11-18 15:22:37,958:INFO:Cross validation set to False
2024-11-18 15:22:37,958:INFO:Fitting Model
2024-11-18 15:22:37,962:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-18 15:22:37,962:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-11-18 15:22:37,962:INFO:create_model() successfully completed......................................
2024-11-18 15:22:38,000:INFO:_master_model_container: 14
2024-11-18 15:22:38,000:INFO:_display_container: 2
2024-11-18 15:22:38,000:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-11-18 15:22:38,000:INFO:compare_models() successfully completed......................................
2024-11-18 15:22:38,007:INFO:Initializing finalize_model()
2024-11-18 15:22:38,007:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11ad27ac0>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-11-18 15:22:38,007:INFO:Finalizing QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-11-18 15:22:38,008:INFO:Initializing create_model()
2024-11-18 15:22:38,008:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11ad27ac0>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-11-18 15:22:38,008:INFO:Checking exceptions
2024-11-18 15:22:38,008:INFO:Importing libraries
2024-11-18 15:22:38,008:INFO:Copying training dataset
2024-11-18 15:22:38,008:INFO:Defining folds
2024-11-18 15:22:38,008:INFO:Declaring metric variables
2024-11-18 15:22:38,008:INFO:Importing untrained model
2024-11-18 15:22:38,008:INFO:Declaring custom model
2024-11-18 15:22:38,009:INFO:Quadratic Discriminant Analysis Imported successfully
2024-11-18 15:22:38,009:INFO:Cross validation set to False
2024-11-18 15:22:38,009:INFO:Fitting Model
2024-11-18 15:22:38,013:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-18 15:22:38,015:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Timestamp', 'Raw_EMG',
                                             'Independent_Component'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=F...
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('actual_estimator',
                 QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                                               store_covariance=False,
                                               tol=0.0001))],
         verbose=False)
2024-11-18 15:22:38,015:INFO:create_model() successfully completed......................................
2024-11-18 15:22:38,058:INFO:_master_model_container: 14
2024-11-18 15:22:38,058:INFO:_display_container: 2
2024-11-18 15:22:38,060:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Timestamp', 'Raw_EMG',
                                             'Independent_Component'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=F...
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('actual_estimator',
                 QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                                               store_covariance=False,
                                               tol=0.0001))],
         verbose=False)
2024-11-18 15:22:38,060:INFO:finalize_model() successfully completed......................................
2024-11-18 15:22:38,106:INFO:Initializing evaluate_model()
2024-11-18 15:22:38,106:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11ad27ac0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Timestamp', 'Raw_EMG',
                                             'Independent_Component'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=F...
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('actual_estimator',
                 QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                                               store_covariance=False,
                                               tol=0.0001))],
         verbose=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-11-18 15:22:38,112:INFO:Initializing plot_model()
2024-11-18 15:22:38,112:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Timestamp', 'Raw_EMG',
                                             'Independent_Component'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=F...
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('actual_estimator',
                 QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                                               store_covariance=False,
                                               tol=0.0001))],
         verbose=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x11ad27ac0>, system=True)
2024-11-18 15:22:38,112:INFO:Checking exceptions
2024-11-18 15:22:38,113:INFO:Preloading libraries
2024-11-18 15:22:38,113:INFO:Copying training dataset
2024-11-18 15:22:38,113:INFO:Plot type: pipeline
2024-11-18 15:22:38,204:INFO:Visual Rendered Successfully
2024-11-18 15:22:38,267:INFO:plot_model() successfully completed......................................
2024-11-18 15:22:38,288:INFO:Initializing save_model()
2024-11-18 15:22:38,288:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Timestamp', 'Raw_EMG',
                                             'Independent_Component'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=F...
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('actual_estimator',
                 QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                                               store_covariance=False,
                                               tol=0.0001))],
         verbose=False), model_name=nbest, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/0j/8s23v_h569nfcs43k8n8y9pc0000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Timestamp', 'Raw_EMG',
                                             'Independent_Component'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-11-18 15:22:38,289:INFO:Adding model into prep_pipe
2024-11-18 15:22:38,289:WARNING:Only Model saved as it was a pipeline.
2024-11-18 15:22:38,296:INFO:nbest.pkl saved in current working directory
2024-11-18 15:22:38,302:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Timestamp', 'Raw_EMG',
                                             'Independent_Component'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=F...
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('actual_estimator',
                 QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                                               store_covariance=False,
                                               tol=0.0001))],
         verbose=False)
2024-11-18 15:22:38,302:INFO:save_model() successfully completed......................................
2024-11-18 15:22:43,726:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-18 15:22:43,726:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-18 15:22:43,726:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-18 15:22:43,726:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-18 15:22:44,073:INFO:Initializing load_model()
2024-11-18 15:22:44,073:INFO:load_model(model_name=nbest, platform=None, authentication=None, verbose=True)
2024-11-18 15:23:00,040:INFO:Initializing load_model()
2024-11-18 15:23:00,041:INFO:load_model(model_name=nbest, platform=None, authentication=None, verbose=True)
2024-11-18 15:23:22,376:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-18 15:23:22,377:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-18 15:23:22,377:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-18 15:23:22,377:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-18 15:23:22,821:INFO:Initializing load_model()
2024-11-18 15:23:22,821:INFO:load_model(model_name=nbest, platform=None, authentication=None, verbose=True)
2024-11-18 15:25:42,155:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-18 15:25:42,156:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-18 15:25:42,156:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-18 15:25:42,156:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-18 15:25:42,441:INFO:PyCaret ClassificationExperiment
2024-11-18 15:25:42,442:INFO:Logging name: clf-default-name
2024-11-18 15:25:42,442:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-11-18 15:25:42,442:INFO:version 3.3.2
2024-11-18 15:25:42,442:INFO:Initializing setup()
2024-11-18 15:25:42,442:INFO:self.USI: c89c
2024-11-18 15:25:42,442:INFO:self._variable_keys: {'fold_groups_param', 'is_multiclass', 'idx', '_available_plots', 'html_param', 'exp_name_log', 'n_jobs_param', 'pipeline', 'USI', 'fix_imbalance', 'log_plots_param', 'gpu_param', 'X', 'gpu_n_jobs_param', 'y', 'data', 'fold_generator', 'target_param', 'X_train', 'fold_shuffle_param', '_ml_usecase', 'y_test', 'exp_id', 'y_train', 'logging_param', 'memory', 'seed', 'X_test'}
2024-11-18 15:25:42,442:INFO:Checking environment
2024-11-18 15:25:42,442:INFO:python_version: 3.9.20
2024-11-18 15:25:42,442:INFO:python_build: ('main', 'Oct  3 2024 02:24:59')
2024-11-18 15:25:42,442:INFO:machine: arm64
2024-11-18 15:25:42,442:INFO:platform: macOS-15.2-arm64-arm-64bit
2024-11-18 15:25:42,442:INFO:Memory: svmem(total=8589934592, available=1929248768, percent=77.5, used=3366289408, free=58277888, active=1885519872, inactive=1752498176, wired=1480769536)
2024-11-18 15:25:42,442:INFO:Physical Core: 8
2024-11-18 15:25:42,442:INFO:Logical Core: 8
2024-11-18 15:25:42,442:INFO:Checking libraries
2024-11-18 15:25:42,442:INFO:System:
2024-11-18 15:25:42,442:INFO:    python: 3.9.20 (main, Oct  3 2024, 02:24:59)  [Clang 14.0.6 ]
2024-11-18 15:25:42,442:INFO:executable: /opt/anaconda3/envs/batey/bin/python
2024-11-18 15:25:42,442:INFO:   machine: macOS-15.2-arm64-arm-64bit
2024-11-18 15:25:42,442:INFO:PyCaret required dependencies:
2024-11-18 15:25:42,459:INFO:                 pip: 24.2
2024-11-18 15:25:42,459:INFO:          setuptools: 75.1.0
2024-11-18 15:25:42,459:INFO:             pycaret: 3.3.2
2024-11-18 15:25:42,459:INFO:             IPython: 8.18.1
2024-11-18 15:25:42,459:INFO:          ipywidgets: 8.1.5
2024-11-18 15:25:42,459:INFO:                tqdm: 4.66.6
2024-11-18 15:25:42,459:INFO:               numpy: 1.26.4
2024-11-18 15:25:42,459:INFO:              pandas: 2.1.4
2024-11-18 15:25:42,459:INFO:              jinja2: 3.1.4
2024-11-18 15:25:42,459:INFO:               scipy: 1.11.4
2024-11-18 15:25:42,459:INFO:              joblib: 1.3.2
2024-11-18 15:25:42,459:INFO:             sklearn: 1.4.2
2024-11-18 15:25:42,459:INFO:                pyod: 2.0.2
2024-11-18 15:25:42,459:INFO:            imblearn: 0.12.4
2024-11-18 15:25:42,459:INFO:   category_encoders: 2.6.4
2024-11-18 15:25:42,459:INFO:            lightgbm: 4.5.0
2024-11-18 15:25:42,459:INFO:               numba: 0.60.0
2024-11-18 15:25:42,459:INFO:            requests: 2.32.3
2024-11-18 15:25:42,459:INFO:          matplotlib: 3.7.5
2024-11-18 15:25:42,459:INFO:          scikitplot: 0.3.7
2024-11-18 15:25:42,459:INFO:         yellowbrick: 1.5
2024-11-18 15:25:42,459:INFO:              plotly: 5.24.1
2024-11-18 15:25:42,459:INFO:    plotly-resampler: Not installed
2024-11-18 15:25:42,459:INFO:             kaleido: 0.2.1
2024-11-18 15:25:42,459:INFO:           schemdraw: 0.15
2024-11-18 15:25:42,459:INFO:         statsmodels: 0.14.4
2024-11-18 15:25:42,459:INFO:              sktime: 0.26.0
2024-11-18 15:25:42,459:INFO:               tbats: 1.1.3
2024-11-18 15:25:42,459:INFO:            pmdarima: 2.0.4
2024-11-18 15:25:42,459:INFO:              psutil: 6.1.0
2024-11-18 15:25:42,459:INFO:          markupsafe: 3.0.2
2024-11-18 15:25:42,459:INFO:             pickle5: Not installed
2024-11-18 15:25:42,459:INFO:         cloudpickle: 3.1.0
2024-11-18 15:25:42,459:INFO:         deprecation: 2.1.0
2024-11-18 15:25:42,459:INFO:              xxhash: 3.5.0
2024-11-18 15:25:42,459:INFO:           wurlitzer: 3.1.1
2024-11-18 15:25:42,459:INFO:PyCaret optional dependencies:
2024-11-18 15:25:42,464:INFO:                shap: Not installed
2024-11-18 15:25:42,464:INFO:           interpret: Not installed
2024-11-18 15:25:42,464:INFO:                umap: Not installed
2024-11-18 15:25:42,464:INFO:     ydata_profiling: Not installed
2024-11-18 15:25:42,464:INFO:  explainerdashboard: Not installed
2024-11-18 15:25:42,464:INFO:             autoviz: Not installed
2024-11-18 15:25:42,464:INFO:           fairlearn: Not installed
2024-11-18 15:25:42,464:INFO:          deepchecks: Not installed
2024-11-18 15:25:42,464:INFO:             xgboost: Not installed
2024-11-18 15:25:42,464:INFO:            catboost: Not installed
2024-11-18 15:25:42,465:INFO:              kmodes: Not installed
2024-11-18 15:25:42,465:INFO:             mlxtend: Not installed
2024-11-18 15:25:42,465:INFO:       statsforecast: Not installed
2024-11-18 15:25:42,465:INFO:        tune_sklearn: Not installed
2024-11-18 15:25:42,465:INFO:                 ray: Not installed
2024-11-18 15:25:42,465:INFO:            hyperopt: Not installed
2024-11-18 15:25:42,465:INFO:              optuna: Not installed
2024-11-18 15:25:42,465:INFO:               skopt: Not installed
2024-11-18 15:25:42,465:INFO:              mlflow: Not installed
2024-11-18 15:25:42,465:INFO:              gradio: Not installed
2024-11-18 15:25:42,465:INFO:             fastapi: Not installed
2024-11-18 15:25:42,465:INFO:             uvicorn: Not installed
2024-11-18 15:25:42,465:INFO:              m2cgen: Not installed
2024-11-18 15:25:42,465:INFO:           evidently: Not installed
2024-11-18 15:25:42,465:INFO:               fugue: Not installed
2024-11-18 15:25:42,465:INFO:           streamlit: Not installed
2024-11-18 15:25:42,465:INFO:             prophet: Not installed
2024-11-18 15:25:42,465:INFO:None
2024-11-18 15:25:42,465:INFO:Set up data.
2024-11-18 15:25:42,470:INFO:Set up folding strategy.
2024-11-18 15:25:42,470:INFO:Set up train/test split.
2024-11-18 15:25:42,477:INFO:Set up index.
2024-11-18 15:25:42,477:INFO:Assigning column types.
2024-11-18 15:25:42,478:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-11-18 15:25:42,495:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-11-18 15:25:42,496:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-18 15:25:42,510:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-18 15:25:42,510:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-18 15:25:42,527:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-11-18 15:25:42,527:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-18 15:25:42,538:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-18 15:25:42,538:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-18 15:25:42,538:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-11-18 15:25:42,555:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-18 15:25:42,565:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-18 15:25:42,565:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-18 15:25:42,582:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-18 15:25:42,592:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-18 15:25:42,592:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-18 15:25:42,592:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-11-18 15:25:42,619:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-18 15:25:42,619:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-18 15:25:42,646:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-18 15:25:42,646:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-18 15:25:42,647:INFO:Preparing preprocessing pipeline...
2024-11-18 15:25:42,648:INFO:Set up label encoding.
2024-11-18 15:25:42,648:INFO:Set up simple imputation.
2024-11-18 15:25:42,692:INFO:Finished creating preprocessing pipeline.
2024-11-18 15:25:42,694:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/0j/8s23v_h569nfcs43k8n8y9pc0000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Timestamp', 'Raw_EMG',
                                             'Independent_Component'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2024-11-18 15:25:42,694:INFO:Creating final display dataframe.
2024-11-18 15:25:42,717:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target             Label
2                   Target type            Binary
3                Target mapping    GO: 0, STOP: 1
4           Original data shape         (5253, 4)
5        Transformed data shape         (5253, 4)
6   Transformed train set shape         (3677, 4)
7    Transformed test set shape         (1576, 4)
8              Numeric features                 3
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13               Fold Generator   StratifiedKFold
14                  Fold Number                10
15                     CPU Jobs                -1
16                      Use GPU             False
17               Log Experiment             False
18              Experiment Name  clf-default-name
19                          USI              c89c
2024-11-18 15:25:42,745:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-18 15:25:42,745:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-18 15:25:42,773:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-18 15:25:42,773:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-18 15:25:42,773:INFO:setup() successfully completed in 0.33s...............
2024-11-18 15:25:42,794:INFO:Initializing compare_models()
2024-11-18 15:25:42,794:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11da87ac0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x11da87ac0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-11-18 15:25:42,794:INFO:Checking exceptions
2024-11-18 15:25:42,796:INFO:Preparing display monitor
2024-11-18 15:25:42,805:INFO:Initializing Logistic Regression
2024-11-18 15:25:42,805:INFO:Total runtime is 2.7020772298177085e-06 minutes
2024-11-18 15:25:42,805:INFO:SubProcess create_model() called ==================================
2024-11-18 15:25:42,805:INFO:Initializing create_model()
2024-11-18 15:25:42,805:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11da87ac0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x15bbcdb50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-18 15:25:42,806:INFO:Checking exceptions
2024-11-18 15:25:42,806:INFO:Importing libraries
2024-11-18 15:25:42,806:INFO:Copying training dataset
2024-11-18 15:25:42,807:INFO:Defining folds
2024-11-18 15:25:42,807:INFO:Declaring metric variables
2024-11-18 15:25:42,808:INFO:Importing untrained model
2024-11-18 15:25:42,808:INFO:Logistic Regression Imported successfully
2024-11-18 15:25:42,808:INFO:Starting cross validation
2024-11-18 15:25:42,808:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-18 15:25:45,241:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,243:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,245:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,258:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,260:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,261:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,275:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,277:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,280:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,282:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,284:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,286:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,309:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,310:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,314:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,314:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,316:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,317:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,322:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,323:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,325:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,326:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,328:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,330:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,336:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,338:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,340:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,365:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,366:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,368:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,379:INFO:Calculating mean and std
2024-11-18 15:25:45,380:INFO:Creating metrics dataframe
2024-11-18 15:25:45,383:INFO:Uploading results into container
2024-11-18 15:25:45,383:INFO:Uploading model into container now
2024-11-18 15:25:45,383:INFO:_master_model_container: 1
2024-11-18 15:25:45,383:INFO:_display_container: 2
2024-11-18 15:25:45,383:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-11-18 15:25:45,383:INFO:create_model() successfully completed......................................
2024-11-18 15:25:45,425:INFO:SubProcess create_model() end ==================================
2024-11-18 15:25:45,425:INFO:Creating metrics dataframe
2024-11-18 15:25:45,426:INFO:Initializing K Neighbors Classifier
2024-11-18 15:25:45,426:INFO:Total runtime is 0.04369091987609863 minutes
2024-11-18 15:25:45,426:INFO:SubProcess create_model() called ==================================
2024-11-18 15:25:45,426:INFO:Initializing create_model()
2024-11-18 15:25:45,426:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11da87ac0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x15bbcdb50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-18 15:25:45,426:INFO:Checking exceptions
2024-11-18 15:25:45,426:INFO:Importing libraries
2024-11-18 15:25:45,426:INFO:Copying training dataset
2024-11-18 15:25:45,428:INFO:Defining folds
2024-11-18 15:25:45,428:INFO:Declaring metric variables
2024-11-18 15:25:45,428:INFO:Importing untrained model
2024-11-18 15:25:45,428:INFO:K Neighbors Classifier Imported successfully
2024-11-18 15:25:45,428:INFO:Starting cross validation
2024-11-18 15:25:45,428:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-18 15:25:45,477:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,478:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,480:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,480:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,482:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,484:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,484:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,486:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,486:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,488:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,490:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,491:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,491:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,492:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,493:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,493:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,493:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,494:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,495:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,496:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,496:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,501:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,503:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,504:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,524:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,525:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,527:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,531:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,533:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,534:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,544:INFO:Calculating mean and std
2024-11-18 15:25:45,545:INFO:Creating metrics dataframe
2024-11-18 15:25:45,546:INFO:Uploading results into container
2024-11-18 15:25:45,546:INFO:Uploading model into container now
2024-11-18 15:25:45,546:INFO:_master_model_container: 2
2024-11-18 15:25:45,546:INFO:_display_container: 2
2024-11-18 15:25:45,547:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-11-18 15:25:45,547:INFO:create_model() successfully completed......................................
2024-11-18 15:25:45,579:INFO:SubProcess create_model() end ==================================
2024-11-18 15:25:45,579:INFO:Creating metrics dataframe
2024-11-18 15:25:45,580:INFO:Initializing Naive Bayes
2024-11-18 15:25:45,580:INFO:Total runtime is 0.046259315808614095 minutes
2024-11-18 15:25:45,580:INFO:SubProcess create_model() called ==================================
2024-11-18 15:25:45,581:INFO:Initializing create_model()
2024-11-18 15:25:45,581:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11da87ac0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x15bbcdb50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-18 15:25:45,581:INFO:Checking exceptions
2024-11-18 15:25:45,581:INFO:Importing libraries
2024-11-18 15:25:45,581:INFO:Copying training dataset
2024-11-18 15:25:45,582:INFO:Defining folds
2024-11-18 15:25:45,582:INFO:Declaring metric variables
2024-11-18 15:25:45,582:INFO:Importing untrained model
2024-11-18 15:25:45,582:INFO:Naive Bayes Imported successfully
2024-11-18 15:25:45,582:INFO:Starting cross validation
2024-11-18 15:25:45,582:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-18 15:25:45,596:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,598:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,598:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,600:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,601:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,602:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,603:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,604:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,604:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,605:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,606:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,607:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,608:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,609:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,611:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,613:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,615:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,616:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,617:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,617:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,618:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,620:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,620:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,620:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,621:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,622:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,622:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,623:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,623:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,625:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,633:INFO:Calculating mean and std
2024-11-18 15:25:45,633:INFO:Creating metrics dataframe
2024-11-18 15:25:45,634:INFO:Uploading results into container
2024-11-18 15:25:45,634:INFO:Uploading model into container now
2024-11-18 15:25:45,634:INFO:_master_model_container: 3
2024-11-18 15:25:45,634:INFO:_display_container: 2
2024-11-18 15:25:45,634:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-11-18 15:25:45,635:INFO:create_model() successfully completed......................................
2024-11-18 15:25:45,668:INFO:SubProcess create_model() end ==================================
2024-11-18 15:25:45,668:INFO:Creating metrics dataframe
2024-11-18 15:25:45,669:INFO:Initializing Decision Tree Classifier
2024-11-18 15:25:45,669:INFO:Total runtime is 0.047741464773813885 minutes
2024-11-18 15:25:45,669:INFO:SubProcess create_model() called ==================================
2024-11-18 15:25:45,669:INFO:Initializing create_model()
2024-11-18 15:25:45,669:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11da87ac0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x15bbcdb50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-18 15:25:45,669:INFO:Checking exceptions
2024-11-18 15:25:45,669:INFO:Importing libraries
2024-11-18 15:25:45,670:INFO:Copying training dataset
2024-11-18 15:25:45,671:INFO:Defining folds
2024-11-18 15:25:45,671:INFO:Declaring metric variables
2024-11-18 15:25:45,671:INFO:Importing untrained model
2024-11-18 15:25:45,671:INFO:Decision Tree Classifier Imported successfully
2024-11-18 15:25:45,672:INFO:Starting cross validation
2024-11-18 15:25:45,672:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-18 15:25:45,691:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,692:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,693:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,693:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,695:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,696:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,697:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,697:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,698:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,699:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,699:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,703:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,705:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,705:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,707:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,708:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,709:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,710:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,711:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,713:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,713:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,715:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,715:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,716:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,716:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,718:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,719:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,721:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,723:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,725:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,736:INFO:Calculating mean and std
2024-11-18 15:25:45,736:INFO:Creating metrics dataframe
2024-11-18 15:25:45,737:INFO:Uploading results into container
2024-11-18 15:25:45,737:INFO:Uploading model into container now
2024-11-18 15:25:45,737:INFO:_master_model_container: 4
2024-11-18 15:25:45,737:INFO:_display_container: 2
2024-11-18 15:25:45,738:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-11-18 15:25:45,738:INFO:create_model() successfully completed......................................
2024-11-18 15:25:45,772:INFO:SubProcess create_model() end ==================================
2024-11-18 15:25:45,772:INFO:Creating metrics dataframe
2024-11-18 15:25:45,773:INFO:Initializing SVM - Linear Kernel
2024-11-18 15:25:45,773:INFO:Total runtime is 0.04946518341700236 minutes
2024-11-18 15:25:45,773:INFO:SubProcess create_model() called ==================================
2024-11-18 15:25:45,773:INFO:Initializing create_model()
2024-11-18 15:25:45,773:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11da87ac0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x15bbcdb50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-18 15:25:45,773:INFO:Checking exceptions
2024-11-18 15:25:45,773:INFO:Importing libraries
2024-11-18 15:25:45,773:INFO:Copying training dataset
2024-11-18 15:25:45,774:INFO:Defining folds
2024-11-18 15:25:45,775:INFO:Declaring metric variables
2024-11-18 15:25:45,775:INFO:Importing untrained model
2024-11-18 15:25:45,775:INFO:SVM - Linear Kernel Imported successfully
2024-11-18 15:25:45,775:INFO:Starting cross validation
2024-11-18 15:25:45,776:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-18 15:25:45,813:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,817:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,817:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,818:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,819:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,819:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,820:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,820:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,821:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,832:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,834:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,835:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,836:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,836:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,838:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,838:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,843:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,844:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-18 15:25:45,847:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,847:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,849:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,850:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,851:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-18 15:25:45,851:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,852:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,852:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,853:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,853:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,854:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-18 15:25:45,855:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,856:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,857:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,858:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-18 15:25:45,859:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,869:INFO:Calculating mean and std
2024-11-18 15:25:45,869:INFO:Creating metrics dataframe
2024-11-18 15:25:45,870:INFO:Uploading results into container
2024-11-18 15:25:45,870:INFO:Uploading model into container now
2024-11-18 15:25:45,870:INFO:_master_model_container: 5
2024-11-18 15:25:45,870:INFO:_display_container: 2
2024-11-18 15:25:45,870:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-11-18 15:25:45,870:INFO:create_model() successfully completed......................................
2024-11-18 15:25:45,903:INFO:SubProcess create_model() end ==================================
2024-11-18 15:25:45,903:INFO:Creating metrics dataframe
2024-11-18 15:25:45,904:INFO:Initializing Ridge Classifier
2024-11-18 15:25:45,904:INFO:Total runtime is 0.05165911515553792 minutes
2024-11-18 15:25:45,904:INFO:SubProcess create_model() called ==================================
2024-11-18 15:25:45,905:INFO:Initializing create_model()
2024-11-18 15:25:45,905:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11da87ac0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x15bbcdb50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-18 15:25:45,905:INFO:Checking exceptions
2024-11-18 15:25:45,905:INFO:Importing libraries
2024-11-18 15:25:45,905:INFO:Copying training dataset
2024-11-18 15:25:45,906:INFO:Defining folds
2024-11-18 15:25:45,906:INFO:Declaring metric variables
2024-11-18 15:25:45,907:INFO:Importing untrained model
2024-11-18 15:25:45,907:INFO:Ridge Classifier Imported successfully
2024-11-18 15:25:45,907:INFO:Starting cross validation
2024-11-18 15:25:45,908:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-18 15:25:45,927:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,928:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,929:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,930:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,931:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,932:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,932:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,933:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,933:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,934:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,935:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,936:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,939:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,940:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,940:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,940:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,942:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,942:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,944:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,944:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,945:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,946:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,948:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,948:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,949:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,950:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,951:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,953:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,954:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,956:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:45,960:INFO:Calculating mean and std
2024-11-18 15:25:45,960:INFO:Creating metrics dataframe
2024-11-18 15:25:45,961:INFO:Uploading results into container
2024-11-18 15:25:45,961:INFO:Uploading model into container now
2024-11-18 15:25:45,961:INFO:_master_model_container: 6
2024-11-18 15:25:45,961:INFO:_display_container: 2
2024-11-18 15:25:45,961:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2024-11-18 15:25:45,961:INFO:create_model() successfully completed......................................
2024-11-18 15:25:45,999:INFO:SubProcess create_model() end ==================================
2024-11-18 15:25:45,999:INFO:Creating metrics dataframe
2024-11-18 15:25:46,001:INFO:Initializing Random Forest Classifier
2024-11-18 15:25:46,001:INFO:Total runtime is 0.053265166282653806 minutes
2024-11-18 15:25:46,001:INFO:SubProcess create_model() called ==================================
2024-11-18 15:25:46,001:INFO:Initializing create_model()
2024-11-18 15:25:46,001:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11da87ac0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x15bbcdb50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-18 15:25:46,001:INFO:Checking exceptions
2024-11-18 15:25:46,001:INFO:Importing libraries
2024-11-18 15:25:46,001:INFO:Copying training dataset
2024-11-18 15:25:46,002:INFO:Defining folds
2024-11-18 15:25:46,002:INFO:Declaring metric variables
2024-11-18 15:25:46,002:INFO:Importing untrained model
2024-11-18 15:25:46,002:INFO:Random Forest Classifier Imported successfully
2024-11-18 15:25:46,002:INFO:Starting cross validation
2024-11-18 15:25:46,003:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-18 15:25:46,302:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:46,302:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:46,303:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:46,303:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:46,305:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:46,305:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:46,310:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:46,317:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:46,318:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:46,319:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:46,320:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:46,323:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:46,324:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:46,326:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:46,328:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:46,342:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:46,344:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:46,345:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:46,346:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:46,347:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:46,349:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:46,382:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:46,385:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:46,387:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:46,459:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:46,461:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:46,463:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:46,467:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:46,469:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:46,470:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:46,477:INFO:Calculating mean and std
2024-11-18 15:25:46,477:INFO:Creating metrics dataframe
2024-11-18 15:25:46,478:INFO:Uploading results into container
2024-11-18 15:25:46,478:INFO:Uploading model into container now
2024-11-18 15:25:46,479:INFO:_master_model_container: 7
2024-11-18 15:25:46,479:INFO:_display_container: 2
2024-11-18 15:25:46,479:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-11-18 15:25:46,479:INFO:create_model() successfully completed......................................
2024-11-18 15:25:46,512:INFO:SubProcess create_model() end ==================================
2024-11-18 15:25:46,512:INFO:Creating metrics dataframe
2024-11-18 15:25:46,513:INFO:Initializing Quadratic Discriminant Analysis
2024-11-18 15:25:46,513:INFO:Total runtime is 0.06180226802825928 minutes
2024-11-18 15:25:46,513:INFO:SubProcess create_model() called ==================================
2024-11-18 15:25:46,513:INFO:Initializing create_model()
2024-11-18 15:25:46,513:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11da87ac0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x15bbcdb50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-18 15:25:46,513:INFO:Checking exceptions
2024-11-18 15:25:46,513:INFO:Importing libraries
2024-11-18 15:25:46,513:INFO:Copying training dataset
2024-11-18 15:25:46,515:INFO:Defining folds
2024-11-18 15:25:46,515:INFO:Declaring metric variables
2024-11-18 15:25:46,515:INFO:Importing untrained model
2024-11-18 15:25:46,515:INFO:Quadratic Discriminant Analysis Imported successfully
2024-11-18 15:25:46,515:INFO:Starting cross validation
2024-11-18 15:25:46,515:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-18 15:25:46,526:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-18 15:25:46,526:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-18 15:25:46,530:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:46,530:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:46,531:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:46,532:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:46,533:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-18 15:25:46,533:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:46,534:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:46,537:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:46,538:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-18 15:25:46,539:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:46,540:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-18 15:25:46,541:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-18 15:25:46,541:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:46,542:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:46,544:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:46,544:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:46,545:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:46,545:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-18 15:25:46,546:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-18 15:25:46,546:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:46,547:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:46,548:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:46,549:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:46,550:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:46,551:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-18 15:25:46,551:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:46,551:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:46,552:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:46,552:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-18 15:25:46,553:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:46,553:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:46,555:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:46,555:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:46,556:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:46,556:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:46,557:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:46,558:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:46,559:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:46,568:INFO:Calculating mean and std
2024-11-18 15:25:46,568:INFO:Creating metrics dataframe
2024-11-18 15:25:46,569:INFO:Uploading results into container
2024-11-18 15:25:46,569:INFO:Uploading model into container now
2024-11-18 15:25:46,569:INFO:_master_model_container: 8
2024-11-18 15:25:46,569:INFO:_display_container: 2
2024-11-18 15:25:46,569:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-11-18 15:25:46,569:INFO:create_model() successfully completed......................................
2024-11-18 15:25:46,602:INFO:SubProcess create_model() end ==================================
2024-11-18 15:25:46,602:INFO:Creating metrics dataframe
2024-11-18 15:25:46,603:INFO:Initializing Ada Boost Classifier
2024-11-18 15:25:46,603:INFO:Total runtime is 0.0633054494857788 minutes
2024-11-18 15:25:46,603:INFO:SubProcess create_model() called ==================================
2024-11-18 15:25:46,603:INFO:Initializing create_model()
2024-11-18 15:25:46,603:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11da87ac0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x15bbcdb50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-18 15:25:46,603:INFO:Checking exceptions
2024-11-18 15:25:46,603:INFO:Importing libraries
2024-11-18 15:25:46,603:INFO:Copying training dataset
2024-11-18 15:25:46,605:INFO:Defining folds
2024-11-18 15:25:46,605:INFO:Declaring metric variables
2024-11-18 15:25:46,605:INFO:Importing untrained model
2024-11-18 15:25:46,605:INFO:Ada Boost Classifier Imported successfully
2024-11-18 15:25:46,605:INFO:Starting cross validation
2024-11-18 15:25:46,606:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-18 15:25:46,615:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-18 15:25:46,616:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-18 15:25:46,620:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-18 15:25:46,620:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-18 15:25:46,631:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-18 15:25:46,636:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-18 15:25:46,644:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-18 15:25:46,651:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-18 15:25:46,715:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:46,716:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:46,718:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:46,728:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:46,729:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:46,731:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:46,731:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:46,731:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-18 15:25:46,732:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:46,734:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:46,735:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:46,736:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:46,737:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:46,739:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-18 15:25:46,740:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:46,741:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:46,745:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:46,746:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:46,747:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:46,749:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:46,751:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:46,753:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:46,753:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:46,754:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:46,754:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:46,756:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:46,809:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:46,810:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:46,812:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:46,814:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:46,816:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:46,817:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:46,823:INFO:Calculating mean and std
2024-11-18 15:25:46,823:INFO:Creating metrics dataframe
2024-11-18 15:25:46,824:INFO:Uploading results into container
2024-11-18 15:25:46,824:INFO:Uploading model into container now
2024-11-18 15:25:46,824:INFO:_master_model_container: 9
2024-11-18 15:25:46,824:INFO:_display_container: 2
2024-11-18 15:25:46,825:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2024-11-18 15:25:46,825:INFO:create_model() successfully completed......................................
2024-11-18 15:25:46,858:INFO:SubProcess create_model() end ==================================
2024-11-18 15:25:46,858:INFO:Creating metrics dataframe
2024-11-18 15:25:46,859:INFO:Initializing Gradient Boosting Classifier
2024-11-18 15:25:46,859:INFO:Total runtime is 0.06757529973983764 minutes
2024-11-18 15:25:46,859:INFO:SubProcess create_model() called ==================================
2024-11-18 15:25:46,859:INFO:Initializing create_model()
2024-11-18 15:25:46,860:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11da87ac0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x15bbcdb50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-18 15:25:46,860:INFO:Checking exceptions
2024-11-18 15:25:46,860:INFO:Importing libraries
2024-11-18 15:25:46,860:INFO:Copying training dataset
2024-11-18 15:25:46,861:INFO:Defining folds
2024-11-18 15:25:46,861:INFO:Declaring metric variables
2024-11-18 15:25:46,861:INFO:Importing untrained model
2024-11-18 15:25:46,861:INFO:Gradient Boosting Classifier Imported successfully
2024-11-18 15:25:46,861:INFO:Starting cross validation
2024-11-18 15:25:46,862:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-18 15:25:47,166:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:47,167:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:47,169:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:47,176:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:47,178:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:47,179:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:47,187:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:47,190:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:47,191:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:47,192:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:47,194:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:47,196:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:47,197:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:47,198:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:47,199:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:47,199:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:47,201:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:47,201:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:47,204:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:47,205:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:47,207:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:47,220:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:47,221:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:47,223:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:47,394:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:47,396:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:47,397:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:47,413:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:47,414:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:47,416:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:47,425:INFO:Calculating mean and std
2024-11-18 15:25:47,425:INFO:Creating metrics dataframe
2024-11-18 15:25:47,426:INFO:Uploading results into container
2024-11-18 15:25:47,426:INFO:Uploading model into container now
2024-11-18 15:25:47,426:INFO:_master_model_container: 10
2024-11-18 15:25:47,427:INFO:_display_container: 2
2024-11-18 15:25:47,427:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-11-18 15:25:47,427:INFO:create_model() successfully completed......................................
2024-11-18 15:25:47,459:INFO:SubProcess create_model() end ==================================
2024-11-18 15:25:47,459:INFO:Creating metrics dataframe
2024-11-18 15:25:47,460:INFO:Initializing Linear Discriminant Analysis
2024-11-18 15:25:47,460:INFO:Total runtime is 0.07758441766103108 minutes
2024-11-18 15:25:47,460:INFO:SubProcess create_model() called ==================================
2024-11-18 15:25:47,460:INFO:Initializing create_model()
2024-11-18 15:25:47,460:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11da87ac0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x15bbcdb50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-18 15:25:47,460:INFO:Checking exceptions
2024-11-18 15:25:47,460:INFO:Importing libraries
2024-11-18 15:25:47,460:INFO:Copying training dataset
2024-11-18 15:25:47,461:INFO:Defining folds
2024-11-18 15:25:47,461:INFO:Declaring metric variables
2024-11-18 15:25:47,461:INFO:Importing untrained model
2024-11-18 15:25:47,461:INFO:Linear Discriminant Analysis Imported successfully
2024-11-18 15:25:47,462:INFO:Starting cross validation
2024-11-18 15:25:47,462:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-18 15:25:47,476:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:47,477:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:47,478:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:47,479:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:47,479:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:47,480:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:47,481:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:47,482:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:47,484:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:47,485:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:47,487:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:47,489:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:47,489:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:47,491:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:47,492:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:47,493:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:47,494:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:47,494:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:47,494:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:47,494:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:47,495:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:47,495:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:47,497:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:47,498:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:47,498:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:47,499:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:47,501:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:47,503:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:47,505:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:47,507:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:47,512:INFO:Calculating mean and std
2024-11-18 15:25:47,512:INFO:Creating metrics dataframe
2024-11-18 15:25:47,513:INFO:Uploading results into container
2024-11-18 15:25:47,513:INFO:Uploading model into container now
2024-11-18 15:25:47,513:INFO:_master_model_container: 11
2024-11-18 15:25:47,514:INFO:_display_container: 2
2024-11-18 15:25:47,514:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-11-18 15:25:47,514:INFO:create_model() successfully completed......................................
2024-11-18 15:25:47,547:INFO:SubProcess create_model() end ==================================
2024-11-18 15:25:47,547:INFO:Creating metrics dataframe
2024-11-18 15:25:47,548:INFO:Initializing Extra Trees Classifier
2024-11-18 15:25:47,548:INFO:Total runtime is 0.07905110120773315 minutes
2024-11-18 15:25:47,548:INFO:SubProcess create_model() called ==================================
2024-11-18 15:25:47,548:INFO:Initializing create_model()
2024-11-18 15:25:47,548:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11da87ac0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x15bbcdb50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-18 15:25:47,548:INFO:Checking exceptions
2024-11-18 15:25:47,548:INFO:Importing libraries
2024-11-18 15:25:47,548:INFO:Copying training dataset
2024-11-18 15:25:47,550:INFO:Defining folds
2024-11-18 15:25:47,550:INFO:Declaring metric variables
2024-11-18 15:25:47,550:INFO:Importing untrained model
2024-11-18 15:25:47,550:INFO:Extra Trees Classifier Imported successfully
2024-11-18 15:25:47,550:INFO:Starting cross validation
2024-11-18 15:25:47,551:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-18 15:25:47,738:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:47,738:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:47,753:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:47,760:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:47,762:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:47,763:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:47,764:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:47,767:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:47,767:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:47,773:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:47,773:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:47,777:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:47,778:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:47,780:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:47,780:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:47,781:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:47,783:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:47,783:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:47,784:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:47,785:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:47,787:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:47,845:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:47,848:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:47,850:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:47,889:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:47,891:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:47,892:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:47,895:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:47,897:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:47,898:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:47,912:INFO:Calculating mean and std
2024-11-18 15:25:47,912:INFO:Creating metrics dataframe
2024-11-18 15:25:47,913:INFO:Uploading results into container
2024-11-18 15:25:47,913:INFO:Uploading model into container now
2024-11-18 15:25:47,914:INFO:_master_model_container: 12
2024-11-18 15:25:47,914:INFO:_display_container: 2
2024-11-18 15:25:47,914:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-11-18 15:25:47,914:INFO:create_model() successfully completed......................................
2024-11-18 15:25:47,949:INFO:SubProcess create_model() end ==================================
2024-11-18 15:25:47,950:INFO:Creating metrics dataframe
2024-11-18 15:25:47,951:INFO:Initializing Light Gradient Boosting Machine
2024-11-18 15:25:47,951:INFO:Total runtime is 0.08576338291168212 minutes
2024-11-18 15:25:47,951:INFO:SubProcess create_model() called ==================================
2024-11-18 15:25:47,951:INFO:Initializing create_model()
2024-11-18 15:25:47,951:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11da87ac0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x15bbcdb50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-18 15:25:47,951:INFO:Checking exceptions
2024-11-18 15:25:47,951:INFO:Importing libraries
2024-11-18 15:25:47,951:INFO:Copying training dataset
2024-11-18 15:25:47,952:INFO:Defining folds
2024-11-18 15:25:47,952:INFO:Declaring metric variables
2024-11-18 15:25:47,952:INFO:Importing untrained model
2024-11-18 15:25:47,952:INFO:Light Gradient Boosting Machine Imported successfully
2024-11-18 15:25:47,952:INFO:Starting cross validation
2024-11-18 15:25:47,953:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-18 15:25:49,794:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:49,795:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:49,797:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:49,804:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:49,810:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:49,817:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:49,821:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:49,822:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:49,827:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:50,013:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:50,018:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:50,044:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:50,045:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:50,048:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:50,055:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:50,055:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:50,058:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:50,060:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:50,060:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:50,064:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:50,068:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:50,095:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:50,097:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:50,099:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:50,411:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:50,413:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:50,414:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:50,419:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:50,421:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:50,422:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:50,432:INFO:Calculating mean and std
2024-11-18 15:25:50,433:INFO:Creating metrics dataframe
2024-11-18 15:25:50,434:INFO:Uploading results into container
2024-11-18 15:25:50,434:INFO:Uploading model into container now
2024-11-18 15:25:50,435:INFO:_master_model_container: 13
2024-11-18 15:25:50,435:INFO:_display_container: 2
2024-11-18 15:25:50,435:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-11-18 15:25:50,435:INFO:create_model() successfully completed......................................
2024-11-18 15:25:50,471:INFO:SubProcess create_model() end ==================================
2024-11-18 15:25:50,471:INFO:Creating metrics dataframe
2024-11-18 15:25:50,472:INFO:Initializing Dummy Classifier
2024-11-18 15:25:50,472:INFO:Total runtime is 0.12779313723246255 minutes
2024-11-18 15:25:50,472:INFO:SubProcess create_model() called ==================================
2024-11-18 15:25:50,473:INFO:Initializing create_model()
2024-11-18 15:25:50,473:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11da87ac0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x15bbcdb50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-18 15:25:50,473:INFO:Checking exceptions
2024-11-18 15:25:50,473:INFO:Importing libraries
2024-11-18 15:25:50,473:INFO:Copying training dataset
2024-11-18 15:25:50,474:INFO:Defining folds
2024-11-18 15:25:50,474:INFO:Declaring metric variables
2024-11-18 15:25:50,474:INFO:Importing untrained model
2024-11-18 15:25:50,474:INFO:Dummy Classifier Imported successfully
2024-11-18 15:25:50,474:INFO:Starting cross validation
2024-11-18 15:25:50,474:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-18 15:25:50,486:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:50,488:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:50,488:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:50,489:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-18 15:25:50,489:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:50,490:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:50,490:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-18 15:25:50,491:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:50,492:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:50,493:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:50,494:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-18 15:25:50,495:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:50,498:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:50,499:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:50,500:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:50,500:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:50,501:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-18 15:25:50,501:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:50,501:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-18 15:25:50,501:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:50,502:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:50,502:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:50,503:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-18 15:25:50,503:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:50,504:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:50,505:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:50,506:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-18 15:25:50,506:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:50,508:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:50,509:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:50,509:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:50,510:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-18 15:25:50,511:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:50,511:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:50,512:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-18 15:25:50,513:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:50,513:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:50,515:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:50,515:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-18 15:25:50,516:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 15:25:50,528:INFO:Calculating mean and std
2024-11-18 15:25:50,528:INFO:Creating metrics dataframe
2024-11-18 15:25:50,529:INFO:Uploading results into container
2024-11-18 15:25:50,529:INFO:Uploading model into container now
2024-11-18 15:25:50,530:INFO:_master_model_container: 14
2024-11-18 15:25:50,530:INFO:_display_container: 2
2024-11-18 15:25:50,530:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2024-11-18 15:25:50,530:INFO:create_model() successfully completed......................................
2024-11-18 15:25:50,563:INFO:SubProcess create_model() end ==================================
2024-11-18 15:25:50,563:INFO:Creating metrics dataframe
2024-11-18 15:25:50,566:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2024-11-18 15:25:50,567:INFO:Initializing create_model()
2024-11-18 15:25:50,567:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11da87ac0>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-18 15:25:50,567:INFO:Checking exceptions
2024-11-18 15:25:50,567:INFO:Importing libraries
2024-11-18 15:25:50,567:INFO:Copying training dataset
2024-11-18 15:25:50,568:INFO:Defining folds
2024-11-18 15:25:50,568:INFO:Declaring metric variables
2024-11-18 15:25:50,568:INFO:Importing untrained model
2024-11-18 15:25:50,568:INFO:Declaring custom model
2024-11-18 15:25:50,568:INFO:Quadratic Discriminant Analysis Imported successfully
2024-11-18 15:25:50,569:INFO:Cross validation set to False
2024-11-18 15:25:50,569:INFO:Fitting Model
2024-11-18 15:25:50,572:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-18 15:25:50,573:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-11-18 15:25:50,573:INFO:create_model() successfully completed......................................
2024-11-18 15:25:50,607:INFO:_master_model_container: 14
2024-11-18 15:25:50,607:INFO:_display_container: 2
2024-11-18 15:25:50,607:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-11-18 15:25:50,608:INFO:compare_models() successfully completed......................................
2024-11-18 15:25:50,611:INFO:Initializing finalize_model()
2024-11-18 15:25:50,611:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11da87ac0>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-11-18 15:25:50,611:INFO:Finalizing QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-11-18 15:25:50,612:INFO:Initializing create_model()
2024-11-18 15:25:50,612:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11da87ac0>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-11-18 15:25:50,612:INFO:Checking exceptions
2024-11-18 15:25:50,613:INFO:Importing libraries
2024-11-18 15:25:50,613:INFO:Copying training dataset
2024-11-18 15:25:50,613:INFO:Defining folds
2024-11-18 15:25:50,613:INFO:Declaring metric variables
2024-11-18 15:25:50,613:INFO:Importing untrained model
2024-11-18 15:25:50,613:INFO:Declaring custom model
2024-11-18 15:25:50,613:INFO:Quadratic Discriminant Analysis Imported successfully
2024-11-18 15:25:50,613:INFO:Cross validation set to False
2024-11-18 15:25:50,613:INFO:Fitting Model
2024-11-18 15:25:50,616:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-18 15:25:50,618:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Timestamp', 'Raw_EMG',
                                             'Independent_Component'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=F...
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('actual_estimator',
                 QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                                               store_covariance=False,
                                               tol=0.0001))],
         verbose=False)
2024-11-18 15:25:50,618:INFO:create_model() successfully completed......................................
2024-11-18 15:25:50,649:INFO:_master_model_container: 14
2024-11-18 15:25:50,649:INFO:_display_container: 2
2024-11-18 15:25:50,651:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Timestamp', 'Raw_EMG',
                                             'Independent_Component'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=F...
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('actual_estimator',
                 QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                                               store_covariance=False,
                                               tol=0.0001))],
         verbose=False)
2024-11-18 15:25:50,651:INFO:finalize_model() successfully completed......................................
2024-11-18 15:25:50,684:INFO:Initializing evaluate_model()
2024-11-18 15:25:50,684:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11da87ac0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Timestamp', 'Raw_EMG',
                                             'Independent_Component'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=F...
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('actual_estimator',
                 QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                                               store_covariance=False,
                                               tol=0.0001))],
         verbose=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-11-18 15:25:50,690:INFO:Initializing plot_model()
2024-11-18 15:25:50,690:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Timestamp', 'Raw_EMG',
                                             'Independent_Component'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=F...
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('actual_estimator',
                 QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                                               store_covariance=False,
                                               tol=0.0001))],
         verbose=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x11da87ac0>, system=True)
2024-11-18 15:25:50,690:INFO:Checking exceptions
2024-11-18 15:25:50,691:INFO:Preloading libraries
2024-11-18 15:25:50,691:INFO:Copying training dataset
2024-11-18 15:25:50,691:INFO:Plot type: pipeline
2024-11-18 15:25:50,772:INFO:Visual Rendered Successfully
2024-11-18 15:25:50,831:INFO:plot_model() successfully completed......................................
2024-11-18 15:25:50,859:INFO:Initializing save_model()
2024-11-18 15:25:50,859:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Timestamp', 'Raw_EMG',
                                             'Independent_Component'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=F...
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('actual_estimator',
                 QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                                               store_covariance=False,
                                               tol=0.0001))],
         verbose=False), model_name=nbest, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/0j/8s23v_h569nfcs43k8n8y9pc0000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Timestamp', 'Raw_EMG',
                                             'Independent_Component'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-11-18 15:25:50,859:INFO:Adding model into prep_pipe
2024-11-18 15:25:50,859:WARNING:Only Model saved as it was a pipeline.
2024-11-18 15:25:50,862:INFO:nbest.pkl saved in current working directory
2024-11-18 15:25:50,868:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Timestamp', 'Raw_EMG',
                                             'Independent_Component'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=F...
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('actual_estimator',
                 QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                                               store_covariance=False,
                                               tol=0.0001))],
         verbose=False)
2024-11-18 15:25:50,868:INFO:save_model() successfully completed......................................
2024-11-18 15:26:24,390:INFO:Initializing load_model()
2024-11-18 15:26:24,392:INFO:load_model(model_name=nbest, platform=None, authentication=None, verbose=True)
2024-11-18 15:28:48,251:INFO:Initializing load_model()
2024-11-18 15:28:48,253:INFO:load_model(model_name=nbest, platform=None, authentication=None, verbose=True)
2024-11-18 16:17:59,250:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-18 16:17:59,251:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-18 16:17:59,251:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-18 16:17:59,251:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-18 16:17:59,563:INFO:PyCaret ClassificationExperiment
2024-11-18 16:17:59,563:INFO:Logging name: clf-default-name
2024-11-18 16:17:59,563:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-11-18 16:17:59,563:INFO:version 3.3.2
2024-11-18 16:17:59,563:INFO:Initializing setup()
2024-11-18 16:17:59,563:INFO:self.USI: 735b
2024-11-18 16:17:59,563:INFO:self._variable_keys: {'seed', 'X', 'y', 'n_jobs_param', 'pipeline', 'data', 'exp_name_log', 'fold_shuffle_param', 'idx', 'target_param', 'html_param', 'is_multiclass', 'exp_id', 'fold_generator', '_available_plots', 'fold_groups_param', 'y_test', 'X_test', 'y_train', '_ml_usecase', 'fix_imbalance', 'gpu_n_jobs_param', 'X_train', 'memory', 'gpu_param', 'USI', 'log_plots_param', 'logging_param'}
2024-11-18 16:17:59,563:INFO:Checking environment
2024-11-18 16:17:59,563:INFO:python_version: 3.9.20
2024-11-18 16:17:59,563:INFO:python_build: ('main', 'Oct  3 2024 02:24:59')
2024-11-18 16:17:59,563:INFO:machine: arm64
2024-11-18 16:17:59,563:INFO:platform: macOS-15.2-arm64-arm-64bit
2024-11-18 16:17:59,563:INFO:Memory: svmem(total=8589934592, available=1883947008, percent=78.1, used=3214688256, free=58097664, active=1844051968, inactive=1726005248, wired=1370636288)
2024-11-18 16:17:59,563:INFO:Physical Core: 8
2024-11-18 16:17:59,563:INFO:Logical Core: 8
2024-11-18 16:17:59,563:INFO:Checking libraries
2024-11-18 16:17:59,563:INFO:System:
2024-11-18 16:17:59,563:INFO:    python: 3.9.20 (main, Oct  3 2024, 02:24:59)  [Clang 14.0.6 ]
2024-11-18 16:17:59,563:INFO:executable: /opt/anaconda3/envs/batey/bin/python
2024-11-18 16:17:59,563:INFO:   machine: macOS-15.2-arm64-arm-64bit
2024-11-18 16:17:59,563:INFO:PyCaret required dependencies:
2024-11-18 16:17:59,580:INFO:                 pip: 24.2
2024-11-18 16:17:59,580:INFO:          setuptools: 75.1.0
2024-11-18 16:17:59,580:INFO:             pycaret: 3.3.2
2024-11-18 16:17:59,580:INFO:             IPython: 8.18.1
2024-11-18 16:17:59,580:INFO:          ipywidgets: 8.1.5
2024-11-18 16:17:59,580:INFO:                tqdm: 4.66.6
2024-11-18 16:17:59,580:INFO:               numpy: 1.26.4
2024-11-18 16:17:59,580:INFO:              pandas: 2.1.4
2024-11-18 16:17:59,580:INFO:              jinja2: 3.1.4
2024-11-18 16:17:59,580:INFO:               scipy: 1.11.4
2024-11-18 16:17:59,580:INFO:              joblib: 1.3.2
2024-11-18 16:17:59,580:INFO:             sklearn: 1.4.2
2024-11-18 16:17:59,580:INFO:                pyod: 2.0.2
2024-11-18 16:17:59,580:INFO:            imblearn: 0.12.4
2024-11-18 16:17:59,580:INFO:   category_encoders: 2.6.4
2024-11-18 16:17:59,580:INFO:            lightgbm: 4.5.0
2024-11-18 16:17:59,580:INFO:               numba: 0.60.0
2024-11-18 16:17:59,580:INFO:            requests: 2.32.3
2024-11-18 16:17:59,580:INFO:          matplotlib: 3.7.5
2024-11-18 16:17:59,580:INFO:          scikitplot: 0.3.7
2024-11-18 16:17:59,580:INFO:         yellowbrick: 1.5
2024-11-18 16:17:59,580:INFO:              plotly: 5.24.1
2024-11-18 16:17:59,580:INFO:    plotly-resampler: Not installed
2024-11-18 16:17:59,581:INFO:             kaleido: 0.2.1
2024-11-18 16:17:59,581:INFO:           schemdraw: 0.15
2024-11-18 16:17:59,581:INFO:         statsmodels: 0.14.4
2024-11-18 16:17:59,581:INFO:              sktime: 0.26.0
2024-11-18 16:17:59,581:INFO:               tbats: 1.1.3
2024-11-18 16:17:59,581:INFO:            pmdarima: 2.0.4
2024-11-18 16:17:59,581:INFO:              psutil: 6.1.0
2024-11-18 16:17:59,581:INFO:          markupsafe: 3.0.2
2024-11-18 16:17:59,581:INFO:             pickle5: Not installed
2024-11-18 16:17:59,581:INFO:         cloudpickle: 3.1.0
2024-11-18 16:17:59,581:INFO:         deprecation: 2.1.0
2024-11-18 16:17:59,581:INFO:              xxhash: 3.5.0
2024-11-18 16:17:59,581:INFO:           wurlitzer: 3.1.1
2024-11-18 16:17:59,581:INFO:PyCaret optional dependencies:
2024-11-18 16:17:59,587:INFO:                shap: Not installed
2024-11-18 16:17:59,587:INFO:           interpret: Not installed
2024-11-18 16:17:59,587:INFO:                umap: Not installed
2024-11-18 16:17:59,587:INFO:     ydata_profiling: Not installed
2024-11-18 16:17:59,587:INFO:  explainerdashboard: Not installed
2024-11-18 16:17:59,587:INFO:             autoviz: Not installed
2024-11-18 16:17:59,587:INFO:           fairlearn: Not installed
2024-11-18 16:17:59,587:INFO:          deepchecks: Not installed
2024-11-18 16:17:59,587:INFO:             xgboost: Not installed
2024-11-18 16:17:59,587:INFO:            catboost: Not installed
2024-11-18 16:17:59,587:INFO:              kmodes: Not installed
2024-11-18 16:17:59,587:INFO:             mlxtend: Not installed
2024-11-18 16:17:59,587:INFO:       statsforecast: Not installed
2024-11-18 16:17:59,587:INFO:        tune_sklearn: Not installed
2024-11-18 16:17:59,587:INFO:                 ray: Not installed
2024-11-18 16:17:59,587:INFO:            hyperopt: Not installed
2024-11-18 16:17:59,587:INFO:              optuna: Not installed
2024-11-18 16:17:59,587:INFO:               skopt: Not installed
2024-11-18 16:17:59,587:INFO:              mlflow: Not installed
2024-11-18 16:17:59,587:INFO:              gradio: Not installed
2024-11-18 16:17:59,587:INFO:             fastapi: Not installed
2024-11-18 16:17:59,587:INFO:             uvicorn: Not installed
2024-11-18 16:17:59,587:INFO:              m2cgen: Not installed
2024-11-18 16:17:59,587:INFO:           evidently: Not installed
2024-11-18 16:17:59,587:INFO:               fugue: Not installed
2024-11-18 16:17:59,587:INFO:           streamlit: Not installed
2024-11-18 16:17:59,587:INFO:             prophet: Not installed
2024-11-18 16:17:59,587:INFO:None
2024-11-18 16:17:59,587:INFO:Set up data.
2024-11-18 16:17:59,594:INFO:Set up folding strategy.
2024-11-18 16:17:59,594:INFO:Set up train/test split.
2024-11-18 16:17:59,608:INFO:Set up index.
2024-11-18 16:17:59,608:INFO:Assigning column types.
2024-11-18 16:17:59,609:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-11-18 16:17:59,625:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-11-18 16:17:59,627:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-18 16:17:59,640:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-18 16:17:59,641:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-18 16:17:59,657:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-11-18 16:17:59,658:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-18 16:17:59,668:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-18 16:17:59,668:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-18 16:17:59,669:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-11-18 16:17:59,685:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-18 16:17:59,695:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-18 16:17:59,695:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-18 16:17:59,713:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-18 16:17:59,723:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-18 16:17:59,724:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-18 16:17:59,724:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-11-18 16:17:59,750:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-18 16:17:59,750:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-18 16:17:59,776:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-18 16:17:59,776:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-18 16:17:59,777:INFO:Preparing preprocessing pipeline...
2024-11-18 16:17:59,778:INFO:Set up label encoding.
2024-11-18 16:17:59,778:INFO:Set up simple imputation.
2024-11-18 16:17:59,820:INFO:Finished creating preprocessing pipeline.
2024-11-18 16:17:59,822:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/0j/8s23v_h569nfcs43k8n8y9pc0000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Timestamp', 'Raw_EMG',
                                             'Independent_Component'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2024-11-18 16:17:59,822:INFO:Creating final display dataframe.
2024-11-18 16:17:59,844:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target             Label
2                   Target type            Binary
3                Target mapping    GO: 0, STOP: 1
4           Original data shape         (5437, 4)
5        Transformed data shape         (5437, 4)
6   Transformed train set shape         (3805, 4)
7    Transformed test set shape         (1632, 4)
8              Numeric features                 3
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13               Fold Generator   StratifiedKFold
14                  Fold Number                10
15                     CPU Jobs                -1
16                      Use GPU             False
17               Log Experiment             False
18              Experiment Name  clf-default-name
19                          USI              735b
2024-11-18 16:17:59,871:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-18 16:17:59,871:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-18 16:17:59,897:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-18 16:17:59,897:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-18 16:17:59,898:INFO:setup() successfully completed in 0.34s...............
2024-11-18 16:17:59,917:INFO:Initializing compare_models()
2024-11-18 16:17:59,917:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11fa87ac0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x11fa87ac0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-11-18 16:17:59,917:INFO:Checking exceptions
2024-11-18 16:17:59,918:INFO:Preparing display monitor
2024-11-18 16:17:59,936:INFO:Initializing Logistic Regression
2024-11-18 16:17:59,937:INFO:Total runtime is 2.7179718017578126e-06 minutes
2024-11-18 16:17:59,937:INFO:SubProcess create_model() called ==================================
2024-11-18 16:17:59,937:INFO:Initializing create_model()
2024-11-18 16:17:59,937:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11fa87ac0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1554d49d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-18 16:17:59,937:INFO:Checking exceptions
2024-11-18 16:17:59,937:INFO:Importing libraries
2024-11-18 16:17:59,937:INFO:Copying training dataset
2024-11-18 16:17:59,939:INFO:Defining folds
2024-11-18 16:17:59,939:INFO:Declaring metric variables
2024-11-18 16:17:59,939:INFO:Importing untrained model
2024-11-18 16:17:59,939:INFO:Logistic Regression Imported successfully
2024-11-18 16:17:59,939:INFO:Starting cross validation
2024-11-18 16:17:59,940:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-18 16:18:02,442:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,444:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,446:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,453:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,455:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,455:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,456:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,457:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,458:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,466:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,468:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,470:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,488:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,490:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,490:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,492:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,492:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,494:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,513:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,515:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,517:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,540:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,541:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,543:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,545:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,546:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,548:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,578:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,579:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,581:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,597:INFO:Calculating mean and std
2024-11-18 16:18:02,599:INFO:Creating metrics dataframe
2024-11-18 16:18:02,601:INFO:Uploading results into container
2024-11-18 16:18:02,602:INFO:Uploading model into container now
2024-11-18 16:18:02,602:INFO:_master_model_container: 1
2024-11-18 16:18:02,602:INFO:_display_container: 2
2024-11-18 16:18:02,602:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-11-18 16:18:02,602:INFO:create_model() successfully completed......................................
2024-11-18 16:18:02,645:INFO:SubProcess create_model() end ==================================
2024-11-18 16:18:02,645:INFO:Creating metrics dataframe
2024-11-18 16:18:02,646:INFO:Initializing K Neighbors Classifier
2024-11-18 16:18:02,646:INFO:Total runtime is 0.04515993595123291 minutes
2024-11-18 16:18:02,646:INFO:SubProcess create_model() called ==================================
2024-11-18 16:18:02,646:INFO:Initializing create_model()
2024-11-18 16:18:02,646:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11fa87ac0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1554d49d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-18 16:18:02,646:INFO:Checking exceptions
2024-11-18 16:18:02,646:INFO:Importing libraries
2024-11-18 16:18:02,646:INFO:Copying training dataset
2024-11-18 16:18:02,647:INFO:Defining folds
2024-11-18 16:18:02,647:INFO:Declaring metric variables
2024-11-18 16:18:02,648:INFO:Importing untrained model
2024-11-18 16:18:02,648:INFO:K Neighbors Classifier Imported successfully
2024-11-18 16:18:02,648:INFO:Starting cross validation
2024-11-18 16:18:02,648:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-18 16:18:02,702:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,702:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,704:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,704:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,706:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,706:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,707:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,708:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,709:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,709:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,711:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,711:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,715:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,715:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,716:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,716:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,717:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,718:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,718:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,718:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,719:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,730:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,732:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,733:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,749:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,750:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,752:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,752:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,753:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,755:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,759:INFO:Calculating mean and std
2024-11-18 16:18:02,759:INFO:Creating metrics dataframe
2024-11-18 16:18:02,760:INFO:Uploading results into container
2024-11-18 16:18:02,761:INFO:Uploading model into container now
2024-11-18 16:18:02,761:INFO:_master_model_container: 2
2024-11-18 16:18:02,761:INFO:_display_container: 2
2024-11-18 16:18:02,761:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-11-18 16:18:02,761:INFO:create_model() successfully completed......................................
2024-11-18 16:18:02,793:INFO:SubProcess create_model() end ==================================
2024-11-18 16:18:02,793:INFO:Creating metrics dataframe
2024-11-18 16:18:02,794:INFO:Initializing Naive Bayes
2024-11-18 16:18:02,794:INFO:Total runtime is 0.047632253170013426 minutes
2024-11-18 16:18:02,794:INFO:SubProcess create_model() called ==================================
2024-11-18 16:18:02,795:INFO:Initializing create_model()
2024-11-18 16:18:02,795:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11fa87ac0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1554d49d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-18 16:18:02,795:INFO:Checking exceptions
2024-11-18 16:18:02,795:INFO:Importing libraries
2024-11-18 16:18:02,795:INFO:Copying training dataset
2024-11-18 16:18:02,796:INFO:Defining folds
2024-11-18 16:18:02,796:INFO:Declaring metric variables
2024-11-18 16:18:02,796:INFO:Importing untrained model
2024-11-18 16:18:02,796:INFO:Naive Bayes Imported successfully
2024-11-18 16:18:02,796:INFO:Starting cross validation
2024-11-18 16:18:02,796:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-18 16:18:02,810:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,811:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,812:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,812:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,812:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-18 16:18:02,813:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-18 16:18:02,813:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,814:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,819:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,820:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,821:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-18 16:18:02,822:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,822:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,824:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,826:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-18 16:18:02,827:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,828:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,829:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,830:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,831:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,831:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,832:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-18 16:18:02,832:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,832:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,833:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,834:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,835:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,835:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,836:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,837:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,837:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,838:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-18 16:18:02,838:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,839:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,840:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,842:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,850:INFO:Calculating mean and std
2024-11-18 16:18:02,850:INFO:Creating metrics dataframe
2024-11-18 16:18:02,851:INFO:Uploading results into container
2024-11-18 16:18:02,851:INFO:Uploading model into container now
2024-11-18 16:18:02,851:INFO:_master_model_container: 3
2024-11-18 16:18:02,851:INFO:_display_container: 2
2024-11-18 16:18:02,851:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-11-18 16:18:02,851:INFO:create_model() successfully completed......................................
2024-11-18 16:18:02,883:INFO:SubProcess create_model() end ==================================
2024-11-18 16:18:02,883:INFO:Creating metrics dataframe
2024-11-18 16:18:02,884:INFO:Initializing Decision Tree Classifier
2024-11-18 16:18:02,884:INFO:Total runtime is 0.049131155014038086 minutes
2024-11-18 16:18:02,884:INFO:SubProcess create_model() called ==================================
2024-11-18 16:18:02,884:INFO:Initializing create_model()
2024-11-18 16:18:02,885:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11fa87ac0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1554d49d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-18 16:18:02,885:INFO:Checking exceptions
2024-11-18 16:18:02,885:INFO:Importing libraries
2024-11-18 16:18:02,885:INFO:Copying training dataset
2024-11-18 16:18:02,886:INFO:Defining folds
2024-11-18 16:18:02,886:INFO:Declaring metric variables
2024-11-18 16:18:02,886:INFO:Importing untrained model
2024-11-18 16:18:02,886:INFO:Decision Tree Classifier Imported successfully
2024-11-18 16:18:02,887:INFO:Starting cross validation
2024-11-18 16:18:02,887:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-18 16:18:02,904:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,906:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,906:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,907:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,908:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,909:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,909:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,911:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,911:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,913:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,913:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,913:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,914:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,915:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,916:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,921:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,922:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,924:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,925:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,926:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,926:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,926:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,927:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,927:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,927:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,928:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,928:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,929:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,929:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,929:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,942:INFO:Calculating mean and std
2024-11-18 16:18:02,942:INFO:Creating metrics dataframe
2024-11-18 16:18:02,943:INFO:Uploading results into container
2024-11-18 16:18:02,943:INFO:Uploading model into container now
2024-11-18 16:18:02,943:INFO:_master_model_container: 4
2024-11-18 16:18:02,943:INFO:_display_container: 2
2024-11-18 16:18:02,943:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-11-18 16:18:02,943:INFO:create_model() successfully completed......................................
2024-11-18 16:18:02,976:INFO:SubProcess create_model() end ==================================
2024-11-18 16:18:02,976:INFO:Creating metrics dataframe
2024-11-18 16:18:02,977:INFO:Initializing SVM - Linear Kernel
2024-11-18 16:18:02,977:INFO:Total runtime is 0.05067065159479777 minutes
2024-11-18 16:18:02,977:INFO:SubProcess create_model() called ==================================
2024-11-18 16:18:02,977:INFO:Initializing create_model()
2024-11-18 16:18:02,977:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11fa87ac0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1554d49d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-18 16:18:02,977:INFO:Checking exceptions
2024-11-18 16:18:02,977:INFO:Importing libraries
2024-11-18 16:18:02,977:INFO:Copying training dataset
2024-11-18 16:18:02,978:INFO:Defining folds
2024-11-18 16:18:02,978:INFO:Declaring metric variables
2024-11-18 16:18:02,978:INFO:Importing untrained model
2024-11-18 16:18:02,978:INFO:SVM - Linear Kernel Imported successfully
2024-11-18 16:18:02,978:INFO:Starting cross validation
2024-11-18 16:18:02,979:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-18 16:18:02,996:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,997:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:02,999:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,001:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,002:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,003:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,004:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,004:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,005:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,012:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,013:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,015:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,017:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,018:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,019:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,020:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,020:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,021:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-18 16:18:03,021:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,023:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,025:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,026:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,028:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,030:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,031:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,032:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,033:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,033:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,034:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,035:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,036:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,047:INFO:Calculating mean and std
2024-11-18 16:18:03,047:INFO:Creating metrics dataframe
2024-11-18 16:18:03,048:INFO:Uploading results into container
2024-11-18 16:18:03,048:INFO:Uploading model into container now
2024-11-18 16:18:03,048:INFO:_master_model_container: 5
2024-11-18 16:18:03,049:INFO:_display_container: 2
2024-11-18 16:18:03,049:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-11-18 16:18:03,049:INFO:create_model() successfully completed......................................
2024-11-18 16:18:03,081:INFO:SubProcess create_model() end ==================================
2024-11-18 16:18:03,081:INFO:Creating metrics dataframe
2024-11-18 16:18:03,082:INFO:Initializing Ridge Classifier
2024-11-18 16:18:03,082:INFO:Total runtime is 0.0524256706237793 minutes
2024-11-18 16:18:03,082:INFO:SubProcess create_model() called ==================================
2024-11-18 16:18:03,082:INFO:Initializing create_model()
2024-11-18 16:18:03,082:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11fa87ac0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1554d49d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-18 16:18:03,082:INFO:Checking exceptions
2024-11-18 16:18:03,082:INFO:Importing libraries
2024-11-18 16:18:03,082:INFO:Copying training dataset
2024-11-18 16:18:03,083:INFO:Defining folds
2024-11-18 16:18:03,083:INFO:Declaring metric variables
2024-11-18 16:18:03,083:INFO:Importing untrained model
2024-11-18 16:18:03,084:INFO:Ridge Classifier Imported successfully
2024-11-18 16:18:03,084:INFO:Starting cross validation
2024-11-18 16:18:03,084:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-18 16:18:03,102:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,102:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,102:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,104:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,104:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,104:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,105:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,105:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,106:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,106:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,108:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,109:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,110:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,111:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,111:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,112:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,113:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,114:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,114:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,117:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,117:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,119:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,119:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,120:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,121:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,122:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,123:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,124:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,124:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,126:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,137:INFO:Calculating mean and std
2024-11-18 16:18:03,137:INFO:Creating metrics dataframe
2024-11-18 16:18:03,138:INFO:Uploading results into container
2024-11-18 16:18:03,138:INFO:Uploading model into container now
2024-11-18 16:18:03,138:INFO:_master_model_container: 6
2024-11-18 16:18:03,138:INFO:_display_container: 2
2024-11-18 16:18:03,138:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2024-11-18 16:18:03,138:INFO:create_model() successfully completed......................................
2024-11-18 16:18:03,170:INFO:SubProcess create_model() end ==================================
2024-11-18 16:18:03,170:INFO:Creating metrics dataframe
2024-11-18 16:18:03,171:INFO:Initializing Random Forest Classifier
2024-11-18 16:18:03,171:INFO:Total runtime is 0.05391730070114136 minutes
2024-11-18 16:18:03,172:INFO:SubProcess create_model() called ==================================
2024-11-18 16:18:03,172:INFO:Initializing create_model()
2024-11-18 16:18:03,172:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11fa87ac0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1554d49d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-18 16:18:03,172:INFO:Checking exceptions
2024-11-18 16:18:03,172:INFO:Importing libraries
2024-11-18 16:18:03,172:INFO:Copying training dataset
2024-11-18 16:18:03,173:INFO:Defining folds
2024-11-18 16:18:03,173:INFO:Declaring metric variables
2024-11-18 16:18:03,173:INFO:Importing untrained model
2024-11-18 16:18:03,174:INFO:Random Forest Classifier Imported successfully
2024-11-18 16:18:03,174:INFO:Starting cross validation
2024-11-18 16:18:03,174:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-18 16:18:03,418:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,420:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,421:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,422:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,422:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,423:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,433:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,436:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,436:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,437:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,438:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,440:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,441:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,442:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,443:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,443:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,444:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,444:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,445:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,446:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,447:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,447:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,449:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,451:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,561:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,563:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,564:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,564:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,566:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,567:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,571:INFO:Calculating mean and std
2024-11-18 16:18:03,571:INFO:Creating metrics dataframe
2024-11-18 16:18:03,572:INFO:Uploading results into container
2024-11-18 16:18:03,572:INFO:Uploading model into container now
2024-11-18 16:18:03,572:INFO:_master_model_container: 7
2024-11-18 16:18:03,572:INFO:_display_container: 2
2024-11-18 16:18:03,572:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-11-18 16:18:03,572:INFO:create_model() successfully completed......................................
2024-11-18 16:18:03,607:INFO:SubProcess create_model() end ==================================
2024-11-18 16:18:03,607:INFO:Creating metrics dataframe
2024-11-18 16:18:03,608:INFO:Initializing Quadratic Discriminant Analysis
2024-11-18 16:18:03,608:INFO:Total runtime is 0.06119308471679688 minutes
2024-11-18 16:18:03,608:INFO:SubProcess create_model() called ==================================
2024-11-18 16:18:03,608:INFO:Initializing create_model()
2024-11-18 16:18:03,608:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11fa87ac0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1554d49d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-18 16:18:03,608:INFO:Checking exceptions
2024-11-18 16:18:03,608:INFO:Importing libraries
2024-11-18 16:18:03,608:INFO:Copying training dataset
2024-11-18 16:18:03,610:INFO:Defining folds
2024-11-18 16:18:03,610:INFO:Declaring metric variables
2024-11-18 16:18:03,610:INFO:Importing untrained model
2024-11-18 16:18:03,610:INFO:Quadratic Discriminant Analysis Imported successfully
2024-11-18 16:18:03,610:INFO:Starting cross validation
2024-11-18 16:18:03,611:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-18 16:18:03,622:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-18 16:18:03,626:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-18 16:18:03,626:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,628:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,630:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,630:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-18 16:18:03,630:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,632:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,632:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-18 16:18:03,634:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,634:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,636:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,636:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-18 16:18:03,636:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,637:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,638:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,640:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,640:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,641:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-18 16:18:03,642:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,643:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-18 16:18:03,643:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-18 16:18:03,644:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,645:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,646:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,647:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,647:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,648:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-18 16:18:03,648:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,649:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,649:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,650:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,650:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,651:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-18 16:18:03,652:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,654:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,655:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,655:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,657:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,658:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,665:INFO:Calculating mean and std
2024-11-18 16:18:03,666:INFO:Creating metrics dataframe
2024-11-18 16:18:03,666:INFO:Uploading results into container
2024-11-18 16:18:03,666:INFO:Uploading model into container now
2024-11-18 16:18:03,667:INFO:_master_model_container: 8
2024-11-18 16:18:03,667:INFO:_display_container: 2
2024-11-18 16:18:03,667:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-11-18 16:18:03,667:INFO:create_model() successfully completed......................................
2024-11-18 16:18:03,699:INFO:SubProcess create_model() end ==================================
2024-11-18 16:18:03,700:INFO:Creating metrics dataframe
2024-11-18 16:18:03,700:INFO:Initializing Ada Boost Classifier
2024-11-18 16:18:03,701:INFO:Total runtime is 0.0627342700958252 minutes
2024-11-18 16:18:03,701:INFO:SubProcess create_model() called ==================================
2024-11-18 16:18:03,701:INFO:Initializing create_model()
2024-11-18 16:18:03,701:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11fa87ac0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1554d49d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-18 16:18:03,701:INFO:Checking exceptions
2024-11-18 16:18:03,701:INFO:Importing libraries
2024-11-18 16:18:03,701:INFO:Copying training dataset
2024-11-18 16:18:03,702:INFO:Defining folds
2024-11-18 16:18:03,702:INFO:Declaring metric variables
2024-11-18 16:18:03,702:INFO:Importing untrained model
2024-11-18 16:18:03,702:INFO:Ada Boost Classifier Imported successfully
2024-11-18 16:18:03,702:INFO:Starting cross validation
2024-11-18 16:18:03,702:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-18 16:18:03,712:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-18 16:18:03,713:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-18 16:18:03,718:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-18 16:18:03,718:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-18 16:18:03,724:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-18 16:18:03,735:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-18 16:18:03,737:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-18 16:18:03,742:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-18 16:18:03,816:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,819:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,819:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,821:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,823:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,824:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,824:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,825:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,827:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,829:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,830:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,831:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,832:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,833:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,834:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,837:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-18 16:18:03,838:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-18 16:18:03,845:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,847:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,850:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,851:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,853:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,856:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,857:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,859:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,861:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,917:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,919:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,919:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,920:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,921:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,922:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:03,931:INFO:Calculating mean and std
2024-11-18 16:18:03,932:INFO:Creating metrics dataframe
2024-11-18 16:18:03,933:INFO:Uploading results into container
2024-11-18 16:18:03,933:INFO:Uploading model into container now
2024-11-18 16:18:03,934:INFO:_master_model_container: 9
2024-11-18 16:18:03,934:INFO:_display_container: 2
2024-11-18 16:18:03,934:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2024-11-18 16:18:03,934:INFO:create_model() successfully completed......................................
2024-11-18 16:18:03,970:INFO:SubProcess create_model() end ==================================
2024-11-18 16:18:03,971:INFO:Creating metrics dataframe
2024-11-18 16:18:03,972:INFO:Initializing Gradient Boosting Classifier
2024-11-18 16:18:03,972:INFO:Total runtime is 0.06725240548451743 minutes
2024-11-18 16:18:03,972:INFO:SubProcess create_model() called ==================================
2024-11-18 16:18:03,972:INFO:Initializing create_model()
2024-11-18 16:18:03,972:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11fa87ac0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1554d49d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-18 16:18:03,972:INFO:Checking exceptions
2024-11-18 16:18:03,972:INFO:Importing libraries
2024-11-18 16:18:03,972:INFO:Copying training dataset
2024-11-18 16:18:03,973:INFO:Defining folds
2024-11-18 16:18:03,973:INFO:Declaring metric variables
2024-11-18 16:18:03,973:INFO:Importing untrained model
2024-11-18 16:18:03,973:INFO:Gradient Boosting Classifier Imported successfully
2024-11-18 16:18:03,973:INFO:Starting cross validation
2024-11-18 16:18:03,974:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-18 16:18:04,233:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:04,235:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:04,237:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:04,260:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:04,264:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:04,266:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:04,272:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:04,274:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:04,275:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:04,286:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:04,288:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:04,289:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:04,295:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:04,297:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:04,298:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:04,299:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:04,301:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:04,302:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:04,315:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:04,316:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:04,318:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:04,320:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:04,322:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:04,323:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:04,477:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:04,478:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:04,480:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:04,497:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:04,499:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:04,500:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:04,515:INFO:Calculating mean and std
2024-11-18 16:18:04,516:INFO:Creating metrics dataframe
2024-11-18 16:18:04,517:INFO:Uploading results into container
2024-11-18 16:18:04,517:INFO:Uploading model into container now
2024-11-18 16:18:04,517:INFO:_master_model_container: 10
2024-11-18 16:18:04,517:INFO:_display_container: 2
2024-11-18 16:18:04,518:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-11-18 16:18:04,518:INFO:create_model() successfully completed......................................
2024-11-18 16:18:04,550:INFO:SubProcess create_model() end ==================================
2024-11-18 16:18:04,550:INFO:Creating metrics dataframe
2024-11-18 16:18:04,551:INFO:Initializing Linear Discriminant Analysis
2024-11-18 16:18:04,551:INFO:Total runtime is 0.07691715161005658 minutes
2024-11-18 16:18:04,552:INFO:SubProcess create_model() called ==================================
2024-11-18 16:18:04,552:INFO:Initializing create_model()
2024-11-18 16:18:04,552:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11fa87ac0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1554d49d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-18 16:18:04,552:INFO:Checking exceptions
2024-11-18 16:18:04,552:INFO:Importing libraries
2024-11-18 16:18:04,552:INFO:Copying training dataset
2024-11-18 16:18:04,553:INFO:Defining folds
2024-11-18 16:18:04,553:INFO:Declaring metric variables
2024-11-18 16:18:04,553:INFO:Importing untrained model
2024-11-18 16:18:04,553:INFO:Linear Discriminant Analysis Imported successfully
2024-11-18 16:18:04,553:INFO:Starting cross validation
2024-11-18 16:18:04,553:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-18 16:18:04,567:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:04,569:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:04,570:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:04,571:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:04,572:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:04,574:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:04,579:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:04,579:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:04,580:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:04,581:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:04,581:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:04,582:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:04,583:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:04,583:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:04,583:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:04,584:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:04,585:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:04,588:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:04,589:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:04,591:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:04,592:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:04,593:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:04,594:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:04,594:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:04,596:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:04,596:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:04,598:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:04,598:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:04,600:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:04,601:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:04,607:INFO:Calculating mean and std
2024-11-18 16:18:04,608:INFO:Creating metrics dataframe
2024-11-18 16:18:04,608:INFO:Uploading results into container
2024-11-18 16:18:04,608:INFO:Uploading model into container now
2024-11-18 16:18:04,609:INFO:_master_model_container: 11
2024-11-18 16:18:04,609:INFO:_display_container: 2
2024-11-18 16:18:04,609:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-11-18 16:18:04,609:INFO:create_model() successfully completed......................................
2024-11-18 16:18:04,641:INFO:SubProcess create_model() end ==================================
2024-11-18 16:18:04,641:INFO:Creating metrics dataframe
2024-11-18 16:18:04,642:INFO:Initializing Extra Trees Classifier
2024-11-18 16:18:04,642:INFO:Total runtime is 0.07842539946238201 minutes
2024-11-18 16:18:04,642:INFO:SubProcess create_model() called ==================================
2024-11-18 16:18:04,642:INFO:Initializing create_model()
2024-11-18 16:18:04,642:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11fa87ac0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1554d49d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-18 16:18:04,642:INFO:Checking exceptions
2024-11-18 16:18:04,642:INFO:Importing libraries
2024-11-18 16:18:04,642:INFO:Copying training dataset
2024-11-18 16:18:04,644:INFO:Defining folds
2024-11-18 16:18:04,644:INFO:Declaring metric variables
2024-11-18 16:18:04,644:INFO:Importing untrained model
2024-11-18 16:18:04,644:INFO:Extra Trees Classifier Imported successfully
2024-11-18 16:18:04,644:INFO:Starting cross validation
2024-11-18 16:18:04,645:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-18 16:18:04,826:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:04,827:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:04,828:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:04,828:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:04,829:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:04,829:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:04,831:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:04,833:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:04,835:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:04,836:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:04,839:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:04,841:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:04,843:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:04,843:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:04,847:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:04,848:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:04,851:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:04,855:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:04,874:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:04,881:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:04,887:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:04,906:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:04,908:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:04,910:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:04,944:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:04,945:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:04,947:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:04,947:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:04,949:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:04,951:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:04,958:INFO:Calculating mean and std
2024-11-18 16:18:04,958:INFO:Creating metrics dataframe
2024-11-18 16:18:04,959:INFO:Uploading results into container
2024-11-18 16:18:04,959:INFO:Uploading model into container now
2024-11-18 16:18:04,959:INFO:_master_model_container: 12
2024-11-18 16:18:04,959:INFO:_display_container: 2
2024-11-18 16:18:04,960:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-11-18 16:18:04,960:INFO:create_model() successfully completed......................................
2024-11-18 16:18:04,992:INFO:SubProcess create_model() end ==================================
2024-11-18 16:18:04,992:INFO:Creating metrics dataframe
2024-11-18 16:18:04,993:INFO:Initializing Light Gradient Boosting Machine
2024-11-18 16:18:04,993:INFO:Total runtime is 0.08427164951960248 minutes
2024-11-18 16:18:04,993:INFO:SubProcess create_model() called ==================================
2024-11-18 16:18:04,993:INFO:Initializing create_model()
2024-11-18 16:18:04,993:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11fa87ac0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1554d49d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-18 16:18:04,993:INFO:Checking exceptions
2024-11-18 16:18:04,993:INFO:Importing libraries
2024-11-18 16:18:04,993:INFO:Copying training dataset
2024-11-18 16:18:04,994:INFO:Defining folds
2024-11-18 16:18:04,994:INFO:Declaring metric variables
2024-11-18 16:18:04,994:INFO:Importing untrained model
2024-11-18 16:18:04,994:INFO:Light Gradient Boosting Machine Imported successfully
2024-11-18 16:18:04,994:INFO:Starting cross validation
2024-11-18 16:18:04,995:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-18 16:18:05,926:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:05,928:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:05,929:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:05,987:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:05,991:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:05,996:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:06,106:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:06,107:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:06,109:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:06,128:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:06,130:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:06,131:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:06,137:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:06,138:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:06,140:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:06,167:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:06,168:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:06,170:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:06,180:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:06,181:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:06,183:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:06,191:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:06,194:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:06,196:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:06,419:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:06,421:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:06,423:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:06,451:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:06,452:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:06,454:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:06,461:INFO:Calculating mean and std
2024-11-18 16:18:06,462:INFO:Creating metrics dataframe
2024-11-18 16:18:06,463:INFO:Uploading results into container
2024-11-18 16:18:06,463:INFO:Uploading model into container now
2024-11-18 16:18:06,463:INFO:_master_model_container: 13
2024-11-18 16:18:06,463:INFO:_display_container: 2
2024-11-18 16:18:06,464:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-11-18 16:18:06,464:INFO:create_model() successfully completed......................................
2024-11-18 16:18:06,497:INFO:SubProcess create_model() end ==================================
2024-11-18 16:18:06,497:INFO:Creating metrics dataframe
2024-11-18 16:18:06,498:INFO:Initializing Dummy Classifier
2024-11-18 16:18:06,498:INFO:Total runtime is 0.1093598524729411 minutes
2024-11-18 16:18:06,498:INFO:SubProcess create_model() called ==================================
2024-11-18 16:18:06,498:INFO:Initializing create_model()
2024-11-18 16:18:06,498:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11fa87ac0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1554d49d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-18 16:18:06,498:INFO:Checking exceptions
2024-11-18 16:18:06,498:INFO:Importing libraries
2024-11-18 16:18:06,498:INFO:Copying training dataset
2024-11-18 16:18:06,499:INFO:Defining folds
2024-11-18 16:18:06,499:INFO:Declaring metric variables
2024-11-18 16:18:06,499:INFO:Importing untrained model
2024-11-18 16:18:06,500:INFO:Dummy Classifier Imported successfully
2024-11-18 16:18:06,500:INFO:Starting cross validation
2024-11-18 16:18:06,500:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-18 16:18:06,513:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:06,514:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:06,515:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-18 16:18:06,516:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:06,516:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:06,516:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:06,518:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:06,518:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:06,518:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-18 16:18:06,519:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:06,519:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-18 16:18:06,520:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:06,520:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:06,520:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:06,522:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:06,522:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:06,523:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-18 16:18:06,524:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:06,525:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-18 16:18:06,525:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:06,527:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:06,527:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:06,528:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:06,528:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-18 16:18:06,530:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:06,531:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:06,531:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:06,532:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:06,532:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:06,532:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-18 16:18:06,533:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:06,533:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:06,533:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-18 16:18:06,534:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:06,534:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:06,535:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:06,535:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-18 16:18:06,535:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-18 16:18:06,536:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:06,536:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-18 16:18:06,542:INFO:Calculating mean and std
2024-11-18 16:18:06,542:INFO:Creating metrics dataframe
2024-11-18 16:18:06,542:INFO:Uploading results into container
2024-11-18 16:18:06,543:INFO:Uploading model into container now
2024-11-18 16:18:06,543:INFO:_master_model_container: 14
2024-11-18 16:18:06,543:INFO:_display_container: 2
2024-11-18 16:18:06,543:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2024-11-18 16:18:06,543:INFO:create_model() successfully completed......................................
2024-11-18 16:18:06,575:INFO:SubProcess create_model() end ==================================
2024-11-18 16:18:06,575:INFO:Creating metrics dataframe
2024-11-18 16:18:06,578:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2024-11-18 16:18:06,579:INFO:Initializing create_model()
2024-11-18 16:18:06,579:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11fa87ac0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-18 16:18:06,579:INFO:Checking exceptions
2024-11-18 16:18:06,579:INFO:Importing libraries
2024-11-18 16:18:06,579:INFO:Copying training dataset
2024-11-18 16:18:06,581:INFO:Defining folds
2024-11-18 16:18:06,581:INFO:Declaring metric variables
2024-11-18 16:18:06,581:INFO:Importing untrained model
2024-11-18 16:18:06,581:INFO:Declaring custom model
2024-11-18 16:18:06,581:INFO:Decision Tree Classifier Imported successfully
2024-11-18 16:18:06,581:INFO:Cross validation set to False
2024-11-18 16:18:06,581:INFO:Fitting Model
2024-11-18 16:18:06,586:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-11-18 16:18:06,586:INFO:create_model() successfully completed......................................
2024-11-18 16:18:06,623:INFO:_master_model_container: 14
2024-11-18 16:18:06,623:INFO:_display_container: 2
2024-11-18 16:18:06,623:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-11-18 16:18:06,623:INFO:compare_models() successfully completed......................................
2024-11-18 16:18:06,627:INFO:Initializing finalize_model()
2024-11-18 16:18:06,627:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11fa87ac0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-11-18 16:18:06,628:INFO:Finalizing DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-11-18 16:18:06,629:INFO:Initializing create_model()
2024-11-18 16:18:06,629:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11fa87ac0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-11-18 16:18:06,629:INFO:Checking exceptions
2024-11-18 16:18:06,629:INFO:Importing libraries
2024-11-18 16:18:06,629:INFO:Copying training dataset
2024-11-18 16:18:06,629:INFO:Defining folds
2024-11-18 16:18:06,629:INFO:Declaring metric variables
2024-11-18 16:18:06,629:INFO:Importing untrained model
2024-11-18 16:18:06,629:INFO:Declaring custom model
2024-11-18 16:18:06,629:INFO:Decision Tree Classifier Imported successfully
2024-11-18 16:18:06,630:INFO:Cross validation set to False
2024-11-18 16:18:06,630:INFO:Fitting Model
2024-11-18 16:18:06,637:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Timestamp', 'Raw_EMG',
                                             'Independent_Component'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=F...
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=123,
                                        splitter='best'))],
         verbose=False)
2024-11-18 16:18:06,637:INFO:create_model() successfully completed......................................
2024-11-18 16:18:06,668:INFO:_master_model_container: 14
2024-11-18 16:18:06,668:INFO:_display_container: 2
2024-11-18 16:18:06,670:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Timestamp', 'Raw_EMG',
                                             'Independent_Component'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=F...
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=123,
                                        splitter='best'))],
         verbose=False)
2024-11-18 16:18:06,670:INFO:finalize_model() successfully completed......................................
2024-11-18 16:18:06,705:INFO:Initializing evaluate_model()
2024-11-18 16:18:06,706:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11fa87ac0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Timestamp', 'Raw_EMG',
                                             'Independent_Component'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=F...
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=123,
                                        splitter='best'))],
         verbose=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-11-18 16:18:06,712:INFO:Initializing plot_model()
2024-11-18 16:18:06,712:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Timestamp', 'Raw_EMG',
                                             'Independent_Component'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=F...
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=123,
                                        splitter='best'))],
         verbose=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x11fa87ac0>, system=True)
2024-11-18 16:18:06,712:INFO:Checking exceptions
2024-11-18 16:18:06,713:INFO:Preloading libraries
2024-11-18 16:18:06,714:INFO:Copying training dataset
2024-11-18 16:18:06,714:INFO:Plot type: pipeline
2024-11-18 16:18:06,818:INFO:Visual Rendered Successfully
2024-11-18 16:18:06,922:INFO:plot_model() successfully completed......................................
2024-11-18 16:18:06,944:INFO:Initializing save_model()
2024-11-18 16:18:06,944:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Timestamp', 'Raw_EMG',
                                             'Independent_Component'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=F...
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=123,
                                        splitter='best'))],
         verbose=False), model_name=nbest, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/0j/8s23v_h569nfcs43k8n8y9pc0000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Timestamp', 'Raw_EMG',
                                             'Independent_Component'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-11-18 16:18:06,944:INFO:Adding model into prep_pipe
2024-11-18 16:18:06,944:WARNING:Only Model saved as it was a pipeline.
2024-11-18 16:18:06,946:INFO:nbest.pkl saved in current working directory
2024-11-18 16:18:06,951:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Timestamp', 'Raw_EMG',
                                             'Independent_Component'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=F...
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=123,
                                        splitter='best'))],
         verbose=False)
2024-11-18 16:18:06,951:INFO:save_model() successfully completed......................................
2024-11-18 16:18:14,782:INFO:Initializing load_model()
2024-11-18 16:18:14,783:INFO:load_model(model_name=nbest, platform=None, authentication=None, verbose=True)
2024-11-18 16:20:02,463:INFO:Initializing load_model()
2024-11-18 16:20:02,464:INFO:load_model(model_name=nbest, platform=None, authentication=None, verbose=True)
2024-11-18 16:21:02,980:INFO:Initializing load_model()
2024-11-18 16:21:02,982:INFO:load_model(model_name=nbest, platform=None, authentication=None, verbose=True)
2024-11-18 16:22:40,864:INFO:Initializing load_model()
2024-11-18 16:22:40,864:INFO:load_model(model_name=nbest, platform=None, authentication=None, verbose=True)
2024-11-18 16:25:44,170:INFO:Initializing load_model()
2024-11-18 16:25:44,171:INFO:load_model(model_name=nbest, platform=None, authentication=None, verbose=True)
2024-11-18 16:26:10,589:INFO:Initializing load_model()
2024-11-18 16:26:10,591:INFO:load_model(model_name=nbest, platform=None, authentication=None, verbose=True)
2024-11-18 16:51:24,547:INFO:Initializing load_model()
2024-11-18 16:51:24,549:INFO:load_model(model_name=nbest, platform=None, authentication=None, verbose=True)
