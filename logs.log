2024-10-30 01:19:06,797:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-30 01:19:06,797:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-30 01:19:06,797:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-30 01:19:06,797:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-30 01:19:08,045:INFO:Initializing load_model()
2024-10-30 01:19:08,045:INFO:load_model(model_name=nbest, platform=None, authentication=None, verbose=True)
2024-11-16 18:47:47,553:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-16 18:47:47,553:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-16 18:47:47,553:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-16 18:47:47,553:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-16 18:47:48,781:INFO:Initializing load_model()
2024-11-16 18:47:48,782:INFO:load_model(model_name=nbest, platform=None, authentication=None, verbose=True)
2024-11-16 19:12:16,347:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-16 19:12:16,347:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-16 19:12:16,347:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-16 19:12:16,347:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-16 19:12:16,925:INFO:PyCaret ClassificationExperiment
2024-11-16 19:12:16,925:INFO:Logging name: clf-default-name
2024-11-16 19:12:16,925:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-11-16 19:12:16,925:INFO:version 3.3.2
2024-11-16 19:12:16,925:INFO:Initializing setup()
2024-11-16 19:12:16,925:INFO:self.USI: 3285
2024-11-16 19:12:16,925:INFO:self._variable_keys: {'_ml_usecase', 'exp_name_log', 'idx', 'fold_shuffle_param', 'pipeline', 'gpu_n_jobs_param', 'X_train', 'y_test', 'logging_param', 'memory', 'gpu_param', 'X', 'fix_imbalance', 'seed', 'X_test', 'is_multiclass', 'exp_id', 'html_param', 'n_jobs_param', 'data', 'USI', 'log_plots_param', 'fold_generator', 'y', 'target_param', 'y_train', 'fold_groups_param', '_available_plots'}
2024-11-16 19:12:16,925:INFO:Checking environment
2024-11-16 19:12:16,925:INFO:python_version: 3.9.20
2024-11-16 19:12:16,925:INFO:python_build: ('main', 'Oct  3 2024 02:24:59')
2024-11-16 19:12:16,925:INFO:machine: arm64
2024-11-16 19:12:16,925:INFO:platform: macOS-15.2-arm64-arm-64bit
2024-11-16 19:12:16,925:INFO:Memory: svmem(total=8589934592, available=1236942848, percent=85.6, used=3157540864, free=60866560, active=1189904384, inactive=1063157760, wired=1967636480)
2024-11-16 19:12:16,925:INFO:Physical Core: 8
2024-11-16 19:12:16,925:INFO:Logical Core: 8
2024-11-16 19:12:16,925:INFO:Checking libraries
2024-11-16 19:12:16,925:INFO:System:
2024-11-16 19:12:16,925:INFO:    python: 3.9.20 (main, Oct  3 2024, 02:24:59)  [Clang 14.0.6 ]
2024-11-16 19:12:16,925:INFO:executable: /opt/anaconda3/envs/batey/bin/python
2024-11-16 19:12:16,925:INFO:   machine: macOS-15.2-arm64-arm-64bit
2024-11-16 19:12:16,925:INFO:PyCaret required dependencies:
2024-11-16 19:12:17,081:INFO:                 pip: 24.2
2024-11-16 19:12:17,082:INFO:          setuptools: 75.1.0
2024-11-16 19:12:17,082:INFO:             pycaret: 3.3.2
2024-11-16 19:12:17,082:INFO:             IPython: 8.18.1
2024-11-16 19:12:17,082:INFO:          ipywidgets: 8.1.5
2024-11-16 19:12:17,082:INFO:                tqdm: 4.66.6
2024-11-16 19:12:17,082:INFO:               numpy: 1.26.4
2024-11-16 19:12:17,082:INFO:              pandas: 2.1.4
2024-11-16 19:12:17,082:INFO:              jinja2: 3.1.4
2024-11-16 19:12:17,082:INFO:               scipy: 1.11.4
2024-11-16 19:12:17,082:INFO:              joblib: 1.3.2
2024-11-16 19:12:17,082:INFO:             sklearn: 1.4.2
2024-11-16 19:12:17,082:INFO:                pyod: 2.0.2
2024-11-16 19:12:17,082:INFO:            imblearn: 0.12.4
2024-11-16 19:12:17,082:INFO:   category_encoders: 2.6.4
2024-11-16 19:12:17,082:INFO:            lightgbm: 4.5.0
2024-11-16 19:12:17,082:INFO:               numba: 0.60.0
2024-11-16 19:12:17,082:INFO:            requests: 2.32.3
2024-11-16 19:12:17,082:INFO:          matplotlib: 3.7.5
2024-11-16 19:12:17,082:INFO:          scikitplot: 0.3.7
2024-11-16 19:12:17,082:INFO:         yellowbrick: 1.5
2024-11-16 19:12:17,082:INFO:              plotly: 5.24.1
2024-11-16 19:12:17,082:INFO:    plotly-resampler: Not installed
2024-11-16 19:12:17,082:INFO:             kaleido: 0.2.1
2024-11-16 19:12:17,082:INFO:           schemdraw: 0.15
2024-11-16 19:12:17,082:INFO:         statsmodels: 0.14.4
2024-11-16 19:12:17,082:INFO:              sktime: 0.26.0
2024-11-16 19:12:17,082:INFO:               tbats: 1.1.3
2024-11-16 19:12:17,082:INFO:            pmdarima: 2.0.4
2024-11-16 19:12:17,082:INFO:              psutil: 6.1.0
2024-11-16 19:12:17,082:INFO:          markupsafe: 3.0.2
2024-11-16 19:12:17,082:INFO:             pickle5: Not installed
2024-11-16 19:12:17,082:INFO:         cloudpickle: 3.1.0
2024-11-16 19:12:17,082:INFO:         deprecation: 2.1.0
2024-11-16 19:12:17,082:INFO:              xxhash: 3.5.0
2024-11-16 19:12:17,082:INFO:           wurlitzer: 3.1.1
2024-11-16 19:12:17,082:INFO:PyCaret optional dependencies:
2024-11-16 19:12:17,088:INFO:                shap: Not installed
2024-11-16 19:12:17,088:INFO:           interpret: Not installed
2024-11-16 19:12:17,088:INFO:                umap: Not installed
2024-11-16 19:12:17,088:INFO:     ydata_profiling: Not installed
2024-11-16 19:12:17,088:INFO:  explainerdashboard: Not installed
2024-11-16 19:12:17,088:INFO:             autoviz: Not installed
2024-11-16 19:12:17,088:INFO:           fairlearn: Not installed
2024-11-16 19:12:17,088:INFO:          deepchecks: Not installed
2024-11-16 19:12:17,088:INFO:             xgboost: Not installed
2024-11-16 19:12:17,088:INFO:            catboost: Not installed
2024-11-16 19:12:17,088:INFO:              kmodes: Not installed
2024-11-16 19:12:17,088:INFO:             mlxtend: Not installed
2024-11-16 19:12:17,088:INFO:       statsforecast: Not installed
2024-11-16 19:12:17,088:INFO:        tune_sklearn: Not installed
2024-11-16 19:12:17,088:INFO:                 ray: Not installed
2024-11-16 19:12:17,088:INFO:            hyperopt: Not installed
2024-11-16 19:12:17,088:INFO:              optuna: Not installed
2024-11-16 19:12:17,088:INFO:               skopt: Not installed
2024-11-16 19:12:17,088:INFO:              mlflow: Not installed
2024-11-16 19:12:17,088:INFO:              gradio: Not installed
2024-11-16 19:12:17,088:INFO:             fastapi: Not installed
2024-11-16 19:12:17,088:INFO:             uvicorn: Not installed
2024-11-16 19:12:17,088:INFO:              m2cgen: Not installed
2024-11-16 19:12:17,088:INFO:           evidently: Not installed
2024-11-16 19:12:17,088:INFO:               fugue: Not installed
2024-11-16 19:12:17,088:INFO:           streamlit: Not installed
2024-11-16 19:12:17,088:INFO:             prophet: Not installed
2024-11-16 19:12:17,088:INFO:None
2024-11-16 19:12:17,089:INFO:Set up data.
2024-11-16 19:12:17,096:INFO:Set up folding strategy.
2024-11-16 19:12:17,096:INFO:Set up train/test split.
2024-11-16 19:12:17,114:INFO:Set up index.
2024-11-16 19:12:17,114:INFO:Assigning column types.
2024-11-16 19:12:17,116:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-11-16 19:12:17,135:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-11-16 19:12:17,136:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-16 19:12:17,150:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-16 19:12:17,150:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-16 19:12:17,167:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-11-16 19:12:17,167:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-16 19:12:17,177:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-16 19:12:17,177:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-16 19:12:17,177:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-11-16 19:12:17,194:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-16 19:12:17,204:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-16 19:12:17,204:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-16 19:12:17,220:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-16 19:12:17,230:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-16 19:12:17,230:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-16 19:12:17,230:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-11-16 19:12:17,257:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-16 19:12:17,257:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-16 19:12:17,284:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-16 19:12:17,284:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-16 19:12:17,285:INFO:Preparing preprocessing pipeline...
2024-11-16 19:12:17,287:INFO:Set up label encoding.
2024-11-16 19:12:17,287:INFO:Set up simple imputation.
2024-11-16 19:12:17,336:INFO:Finished creating preprocessing pipeline.
2024-11-16 19:12:17,338:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/0j/8s23v_h569nfcs43k8n8y9pc0000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Timestamp', 'Raw_EMG',
                                             'Independent_Component'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2024-11-16 19:12:17,338:INFO:Creating final display dataframe.
2024-11-16 19:12:17,361:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target             Label
2                   Target type            Binary
3                Target mapping    GO: 0, STOP: 1
4           Original data shape         (6072, 4)
5        Transformed data shape         (6072, 4)
6   Transformed train set shape         (4250, 4)
7    Transformed test set shape         (1822, 4)
8              Numeric features                 3
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13               Fold Generator   StratifiedKFold
14                  Fold Number                10
15                     CPU Jobs                -1
16                      Use GPU             False
17               Log Experiment             False
18              Experiment Name  clf-default-name
19                          USI              3285
2024-11-16 19:12:17,389:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-16 19:12:17,389:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-16 19:12:17,416:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-16 19:12:17,416:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-16 19:12:17,416:INFO:setup() successfully completed in 0.49s...............
2024-11-16 19:12:17,438:INFO:Initializing compare_models()
2024-11-16 19:12:17,438:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11ed4fac0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x11ed4fac0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-11-16 19:12:17,438:INFO:Checking exceptions
2024-11-16 19:12:17,439:INFO:Preparing display monitor
2024-11-16 19:12:17,465:INFO:Initializing Logistic Regression
2024-11-16 19:12:17,465:INFO:Total runtime is 3.6160151163736978e-06 minutes
2024-11-16 19:12:17,465:INFO:SubProcess create_model() called ==================================
2024-11-16 19:12:17,466:INFO:Initializing create_model()
2024-11-16 19:12:17,466:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11ed4fac0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1077e7250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-16 19:12:17,466:INFO:Checking exceptions
2024-11-16 19:12:17,466:INFO:Importing libraries
2024-11-16 19:12:17,466:INFO:Copying training dataset
2024-11-16 19:12:17,468:INFO:Defining folds
2024-11-16 19:12:17,468:INFO:Declaring metric variables
2024-11-16 19:12:17,468:INFO:Importing untrained model
2024-11-16 19:12:17,468:INFO:Logistic Regression Imported successfully
2024-11-16 19:12:17,468:INFO:Starting cross validation
2024-11-16 19:12:17,469:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-16 19:12:20,362:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,362:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,363:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,365:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,365:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,365:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,367:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,367:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,367:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,373:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,376:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,377:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,379:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,379:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,381:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,384:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,386:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,390:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,416:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,422:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,427:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,443:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,445:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,447:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,451:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,453:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,462:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,467:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,469:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,473:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,493:INFO:Calculating mean and std
2024-11-16 19:12:20,496:INFO:Creating metrics dataframe
2024-11-16 19:12:20,503:INFO:Uploading results into container
2024-11-16 19:12:20,503:INFO:Uploading model into container now
2024-11-16 19:12:20,505:INFO:_master_model_container: 1
2024-11-16 19:12:20,505:INFO:_display_container: 2
2024-11-16 19:12:20,506:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-11-16 19:12:20,506:INFO:create_model() successfully completed......................................
2024-11-16 19:12:20,581:INFO:SubProcess create_model() end ==================================
2024-11-16 19:12:20,581:INFO:Creating metrics dataframe
2024-11-16 19:12:20,583:INFO:Initializing K Neighbors Classifier
2024-11-16 19:12:20,583:INFO:Total runtime is 0.051969114939371744 minutes
2024-11-16 19:12:20,583:INFO:SubProcess create_model() called ==================================
2024-11-16 19:12:20,583:INFO:Initializing create_model()
2024-11-16 19:12:20,583:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11ed4fac0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1077e7250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-16 19:12:20,583:INFO:Checking exceptions
2024-11-16 19:12:20,583:INFO:Importing libraries
2024-11-16 19:12:20,584:INFO:Copying training dataset
2024-11-16 19:12:20,586:INFO:Defining folds
2024-11-16 19:12:20,586:INFO:Declaring metric variables
2024-11-16 19:12:20,586:INFO:Importing untrained model
2024-11-16 19:12:20,586:INFO:K Neighbors Classifier Imported successfully
2024-11-16 19:12:20,586:INFO:Starting cross validation
2024-11-16 19:12:20,586:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-16 19:12:20,675:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,677:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,678:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,679:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,680:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,680:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,682:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,683:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,685:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,691:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,693:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,694:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,695:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,697:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,698:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,699:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,700:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,702:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,702:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,704:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,706:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,707:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,710:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,712:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,732:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,732:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,734:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,734:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,737:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,737:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,748:INFO:Calculating mean and std
2024-11-16 19:12:20,749:INFO:Creating metrics dataframe
2024-11-16 19:12:20,750:INFO:Uploading results into container
2024-11-16 19:12:20,751:INFO:Uploading model into container now
2024-11-16 19:12:20,751:INFO:_master_model_container: 2
2024-11-16 19:12:20,751:INFO:_display_container: 2
2024-11-16 19:12:20,751:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-11-16 19:12:20,751:INFO:create_model() successfully completed......................................
2024-11-16 19:12:20,793:INFO:SubProcess create_model() end ==================================
2024-11-16 19:12:20,793:INFO:Creating metrics dataframe
2024-11-16 19:12:20,794:INFO:Initializing Naive Bayes
2024-11-16 19:12:20,794:INFO:Total runtime is 0.05549219846725464 minutes
2024-11-16 19:12:20,794:INFO:SubProcess create_model() called ==================================
2024-11-16 19:12:20,795:INFO:Initializing create_model()
2024-11-16 19:12:20,795:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11ed4fac0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1077e7250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-16 19:12:20,795:INFO:Checking exceptions
2024-11-16 19:12:20,795:INFO:Importing libraries
2024-11-16 19:12:20,795:INFO:Copying training dataset
2024-11-16 19:12:20,796:INFO:Defining folds
2024-11-16 19:12:20,796:INFO:Declaring metric variables
2024-11-16 19:12:20,796:INFO:Importing untrained model
2024-11-16 19:12:20,796:INFO:Naive Bayes Imported successfully
2024-11-16 19:12:20,796:INFO:Starting cross validation
2024-11-16 19:12:20,796:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-16 19:12:20,811:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,813:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,815:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,818:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,820:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,822:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,822:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,825:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,825:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,828:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,831:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,833:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,833:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,833:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,835:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,837:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,837:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,841:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,843:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,843:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,843:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,845:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,845:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,849:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,850:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,851:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,852:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,853:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,854:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,854:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,862:INFO:Calculating mean and std
2024-11-16 19:12:20,863:INFO:Creating metrics dataframe
2024-11-16 19:12:20,864:INFO:Uploading results into container
2024-11-16 19:12:20,864:INFO:Uploading model into container now
2024-11-16 19:12:20,865:INFO:_master_model_container: 3
2024-11-16 19:12:20,865:INFO:_display_container: 2
2024-11-16 19:12:20,865:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-11-16 19:12:20,865:INFO:create_model() successfully completed......................................
2024-11-16 19:12:20,903:INFO:SubProcess create_model() end ==================================
2024-11-16 19:12:20,903:INFO:Creating metrics dataframe
2024-11-16 19:12:20,904:INFO:Initializing Decision Tree Classifier
2024-11-16 19:12:20,904:INFO:Total runtime is 0.05732444922129313 minutes
2024-11-16 19:12:20,904:INFO:SubProcess create_model() called ==================================
2024-11-16 19:12:20,905:INFO:Initializing create_model()
2024-11-16 19:12:20,905:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11ed4fac0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1077e7250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-16 19:12:20,905:INFO:Checking exceptions
2024-11-16 19:12:20,905:INFO:Importing libraries
2024-11-16 19:12:20,905:INFO:Copying training dataset
2024-11-16 19:12:20,906:INFO:Defining folds
2024-11-16 19:12:20,906:INFO:Declaring metric variables
2024-11-16 19:12:20,906:INFO:Importing untrained model
2024-11-16 19:12:20,906:INFO:Decision Tree Classifier Imported successfully
2024-11-16 19:12:20,906:INFO:Starting cross validation
2024-11-16 19:12:20,907:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-16 19:12:20,951:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,951:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,951:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,951:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,953:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,953:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,953:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,954:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,955:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,955:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,955:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,955:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,955:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,955:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,956:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,956:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,957:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,958:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,959:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,960:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,960:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,963:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,964:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,965:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,972:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,973:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,973:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,975:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,975:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,977:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:20,985:INFO:Calculating mean and std
2024-11-16 19:12:20,986:INFO:Creating metrics dataframe
2024-11-16 19:12:20,987:INFO:Uploading results into container
2024-11-16 19:12:20,987:INFO:Uploading model into container now
2024-11-16 19:12:20,987:INFO:_master_model_container: 4
2024-11-16 19:12:20,987:INFO:_display_container: 2
2024-11-16 19:12:20,987:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-11-16 19:12:20,987:INFO:create_model() successfully completed......................................
2024-11-16 19:12:21,028:INFO:SubProcess create_model() end ==================================
2024-11-16 19:12:21,028:INFO:Creating metrics dataframe
2024-11-16 19:12:21,029:INFO:Initializing SVM - Linear Kernel
2024-11-16 19:12:21,029:INFO:Total runtime is 0.05939968427022298 minutes
2024-11-16 19:12:21,029:INFO:SubProcess create_model() called ==================================
2024-11-16 19:12:21,029:INFO:Initializing create_model()
2024-11-16 19:12:21,029:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11ed4fac0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1077e7250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-16 19:12:21,029:INFO:Checking exceptions
2024-11-16 19:12:21,029:INFO:Importing libraries
2024-11-16 19:12:21,029:INFO:Copying training dataset
2024-11-16 19:12:21,030:INFO:Defining folds
2024-11-16 19:12:21,030:INFO:Declaring metric variables
2024-11-16 19:12:21,030:INFO:Importing untrained model
2024-11-16 19:12:21,031:INFO:SVM - Linear Kernel Imported successfully
2024-11-16 19:12:21,031:INFO:Starting cross validation
2024-11-16 19:12:21,031:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-16 19:12:21,073:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,073:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,075:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,076:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,076:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,077:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,077:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-16 19:12:21,077:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-16 19:12:21,078:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,078:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,079:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-16 19:12:21,079:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,079:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,080:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-16 19:12:21,081:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,080:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,082:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,086:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,089:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-16 19:12:21,090:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,091:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,094:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,094:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,095:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-16 19:12:21,096:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,096:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,097:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,097:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-16 19:12:21,099:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,099:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,100:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-16 19:12:21,101:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,109:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,111:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,112:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-16 19:12:21,113:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,113:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,115:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,115:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-16 19:12:21,116:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,125:INFO:Calculating mean and std
2024-11-16 19:12:21,125:INFO:Creating metrics dataframe
2024-11-16 19:12:21,126:INFO:Uploading results into container
2024-11-16 19:12:21,126:INFO:Uploading model into container now
2024-11-16 19:12:21,127:INFO:_master_model_container: 5
2024-11-16 19:12:21,127:INFO:_display_container: 2
2024-11-16 19:12:21,127:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-11-16 19:12:21,127:INFO:create_model() successfully completed......................................
2024-11-16 19:12:21,164:INFO:SubProcess create_model() end ==================================
2024-11-16 19:12:21,164:INFO:Creating metrics dataframe
2024-11-16 19:12:21,165:INFO:Initializing Ridge Classifier
2024-11-16 19:12:21,165:INFO:Total runtime is 0.06167118151982625 minutes
2024-11-16 19:12:21,165:INFO:SubProcess create_model() called ==================================
2024-11-16 19:12:21,165:INFO:Initializing create_model()
2024-11-16 19:12:21,165:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11ed4fac0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1077e7250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-16 19:12:21,165:INFO:Checking exceptions
2024-11-16 19:12:21,165:INFO:Importing libraries
2024-11-16 19:12:21,165:INFO:Copying training dataset
2024-11-16 19:12:21,167:INFO:Defining folds
2024-11-16 19:12:21,167:INFO:Declaring metric variables
2024-11-16 19:12:21,167:INFO:Importing untrained model
2024-11-16 19:12:21,167:INFO:Ridge Classifier Imported successfully
2024-11-16 19:12:21,167:INFO:Starting cross validation
2024-11-16 19:12:21,167:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-16 19:12:21,217:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,217:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,217:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,219:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,219:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,220:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,220:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,221:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,221:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,221:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,221:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,222:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,222:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,222:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,223:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,223:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,225:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,225:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,225:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,226:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,227:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,227:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,229:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,229:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,238:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,239:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,240:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,241:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,242:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,242:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,247:INFO:Calculating mean and std
2024-11-16 19:12:21,247:INFO:Creating metrics dataframe
2024-11-16 19:12:21,248:INFO:Uploading results into container
2024-11-16 19:12:21,248:INFO:Uploading model into container now
2024-11-16 19:12:21,248:INFO:_master_model_container: 6
2024-11-16 19:12:21,249:INFO:_display_container: 2
2024-11-16 19:12:21,249:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2024-11-16 19:12:21,249:INFO:create_model() successfully completed......................................
2024-11-16 19:12:21,284:INFO:SubProcess create_model() end ==================================
2024-11-16 19:12:21,284:INFO:Creating metrics dataframe
2024-11-16 19:12:21,285:INFO:Initializing Random Forest Classifier
2024-11-16 19:12:21,285:INFO:Total runtime is 0.06367031335830688 minutes
2024-11-16 19:12:21,285:INFO:SubProcess create_model() called ==================================
2024-11-16 19:12:21,285:INFO:Initializing create_model()
2024-11-16 19:12:21,285:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11ed4fac0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1077e7250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-16 19:12:21,285:INFO:Checking exceptions
2024-11-16 19:12:21,285:INFO:Importing libraries
2024-11-16 19:12:21,285:INFO:Copying training dataset
2024-11-16 19:12:21,287:INFO:Defining folds
2024-11-16 19:12:21,287:INFO:Declaring metric variables
2024-11-16 19:12:21,287:INFO:Importing untrained model
2024-11-16 19:12:21,287:INFO:Random Forest Classifier Imported successfully
2024-11-16 19:12:21,287:INFO:Starting cross validation
2024-11-16 19:12:21,287:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-16 19:12:21,622:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,622:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,623:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,624:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,624:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,625:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,626:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,626:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,626:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,627:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,628:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,629:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,631:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,633:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,634:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,635:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,635:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,637:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,706:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,708:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,709:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,725:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,727:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,729:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,787:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,788:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,789:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,791:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,791:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,792:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,803:INFO:Calculating mean and std
2024-11-16 19:12:21,803:INFO:Creating metrics dataframe
2024-11-16 19:12:21,804:INFO:Uploading results into container
2024-11-16 19:12:21,804:INFO:Uploading model into container now
2024-11-16 19:12:21,805:INFO:_master_model_container: 7
2024-11-16 19:12:21,805:INFO:_display_container: 2
2024-11-16 19:12:21,805:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-11-16 19:12:21,805:INFO:create_model() successfully completed......................................
2024-11-16 19:12:21,843:INFO:SubProcess create_model() end ==================================
2024-11-16 19:12:21,843:INFO:Creating metrics dataframe
2024-11-16 19:12:21,845:INFO:Initializing Quadratic Discriminant Analysis
2024-11-16 19:12:21,845:INFO:Total runtime is 0.07299471696217855 minutes
2024-11-16 19:12:21,845:INFO:SubProcess create_model() called ==================================
2024-11-16 19:12:21,845:INFO:Initializing create_model()
2024-11-16 19:12:21,845:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11ed4fac0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1077e7250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-16 19:12:21,845:INFO:Checking exceptions
2024-11-16 19:12:21,845:INFO:Importing libraries
2024-11-16 19:12:21,845:INFO:Copying training dataset
2024-11-16 19:12:21,846:INFO:Defining folds
2024-11-16 19:12:21,846:INFO:Declaring metric variables
2024-11-16 19:12:21,846:INFO:Importing untrained model
2024-11-16 19:12:21,846:INFO:Quadratic Discriminant Analysis Imported successfully
2024-11-16 19:12:21,846:INFO:Starting cross validation
2024-11-16 19:12:21,847:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-16 19:12:21,873:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-16 19:12:21,873:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-16 19:12:21,873:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-16 19:12:21,873:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-16 19:12:21,873:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-16 19:12:21,877:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,878:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,878:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,878:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,879:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,880:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,880:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,880:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,881:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,881:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,882:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,883:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,884:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,886:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,886:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,886:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-16 19:12:21,889:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-16 19:12:21,890:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,891:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-16 19:12:21,892:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-16 19:12:21,892:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,893:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,894:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,895:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-16 19:12:21,895:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,897:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,897:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,898:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,899:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,899:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,901:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,901:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,901:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,902:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,903:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:21,913:INFO:Calculating mean and std
2024-11-16 19:12:21,914:INFO:Creating metrics dataframe
2024-11-16 19:12:21,915:INFO:Uploading results into container
2024-11-16 19:12:21,915:INFO:Uploading model into container now
2024-11-16 19:12:21,915:INFO:_master_model_container: 8
2024-11-16 19:12:21,915:INFO:_display_container: 2
2024-11-16 19:12:21,916:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-11-16 19:12:21,916:INFO:create_model() successfully completed......................................
2024-11-16 19:12:21,951:INFO:SubProcess create_model() end ==================================
2024-11-16 19:12:21,951:INFO:Creating metrics dataframe
2024-11-16 19:12:21,952:INFO:Initializing Ada Boost Classifier
2024-11-16 19:12:21,952:INFO:Total runtime is 0.07478618224461873 minutes
2024-11-16 19:12:21,952:INFO:SubProcess create_model() called ==================================
2024-11-16 19:12:21,952:INFO:Initializing create_model()
2024-11-16 19:12:21,952:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11ed4fac0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1077e7250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-16 19:12:21,952:INFO:Checking exceptions
2024-11-16 19:12:21,952:INFO:Importing libraries
2024-11-16 19:12:21,952:INFO:Copying training dataset
2024-11-16 19:12:21,953:INFO:Defining folds
2024-11-16 19:12:21,953:INFO:Declaring metric variables
2024-11-16 19:12:21,954:INFO:Importing untrained model
2024-11-16 19:12:21,954:INFO:Ada Boost Classifier Imported successfully
2024-11-16 19:12:21,954:INFO:Starting cross validation
2024-11-16 19:12:21,954:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-16 19:12:21,967:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-16 19:12:21,967:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-16 19:12:21,968:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-16 19:12:21,971:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-16 19:12:21,981:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-16 19:12:21,992:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-16 19:12:21,992:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-16 19:12:21,994:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-16 19:12:22,073:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,074:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,076:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,077:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,079:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,080:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,086:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,088:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,090:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,090:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-16 19:12:22,093:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,095:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,097:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,097:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-16 19:12:22,100:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,102:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,102:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,103:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,104:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,105:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,107:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,109:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,111:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,114:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,116:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,117:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,170:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,172:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,174:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,179:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,181:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,183:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,187:INFO:Calculating mean and std
2024-11-16 19:12:22,188:INFO:Creating metrics dataframe
2024-11-16 19:12:22,189:INFO:Uploading results into container
2024-11-16 19:12:22,189:INFO:Uploading model into container now
2024-11-16 19:12:22,189:INFO:_master_model_container: 9
2024-11-16 19:12:22,189:INFO:_display_container: 2
2024-11-16 19:12:22,189:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2024-11-16 19:12:22,189:INFO:create_model() successfully completed......................................
2024-11-16 19:12:22,228:INFO:SubProcess create_model() end ==================================
2024-11-16 19:12:22,228:INFO:Creating metrics dataframe
2024-11-16 19:12:22,229:INFO:Initializing Gradient Boosting Classifier
2024-11-16 19:12:22,229:INFO:Total runtime is 0.07940203348795573 minutes
2024-11-16 19:12:22,229:INFO:SubProcess create_model() called ==================================
2024-11-16 19:12:22,229:INFO:Initializing create_model()
2024-11-16 19:12:22,229:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11ed4fac0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1077e7250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-16 19:12:22,229:INFO:Checking exceptions
2024-11-16 19:12:22,229:INFO:Importing libraries
2024-11-16 19:12:22,229:INFO:Copying training dataset
2024-11-16 19:12:22,230:INFO:Defining folds
2024-11-16 19:12:22,230:INFO:Declaring metric variables
2024-11-16 19:12:22,231:INFO:Importing untrained model
2024-11-16 19:12:22,231:INFO:Gradient Boosting Classifier Imported successfully
2024-11-16 19:12:22,231:INFO:Starting cross validation
2024-11-16 19:12:22,231:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-16 19:12:22,521:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,525:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,527:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,542:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,543:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,545:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,558:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,558:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,562:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,563:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,564:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,566:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,572:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,574:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,576:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,583:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,585:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,587:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,587:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,588:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,591:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,649:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,651:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,652:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,754:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,756:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,757:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,767:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,769:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,770:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,779:INFO:Calculating mean and std
2024-11-16 19:12:22,780:INFO:Creating metrics dataframe
2024-11-16 19:12:22,781:INFO:Uploading results into container
2024-11-16 19:12:22,781:INFO:Uploading model into container now
2024-11-16 19:12:22,782:INFO:_master_model_container: 10
2024-11-16 19:12:22,782:INFO:_display_container: 2
2024-11-16 19:12:22,782:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-11-16 19:12:22,782:INFO:create_model() successfully completed......................................
2024-11-16 19:12:22,817:INFO:SubProcess create_model() end ==================================
2024-11-16 19:12:22,817:INFO:Creating metrics dataframe
2024-11-16 19:12:22,818:INFO:Initializing Linear Discriminant Analysis
2024-11-16 19:12:22,818:INFO:Total runtime is 0.0892182985941569 minutes
2024-11-16 19:12:22,818:INFO:SubProcess create_model() called ==================================
2024-11-16 19:12:22,818:INFO:Initializing create_model()
2024-11-16 19:12:22,818:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11ed4fac0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1077e7250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-16 19:12:22,818:INFO:Checking exceptions
2024-11-16 19:12:22,818:INFO:Importing libraries
2024-11-16 19:12:22,818:INFO:Copying training dataset
2024-11-16 19:12:22,819:INFO:Defining folds
2024-11-16 19:12:22,819:INFO:Declaring metric variables
2024-11-16 19:12:22,819:INFO:Importing untrained model
2024-11-16 19:12:22,820:INFO:Linear Discriminant Analysis Imported successfully
2024-11-16 19:12:22,820:INFO:Starting cross validation
2024-11-16 19:12:22,820:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-16 19:12:22,840:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,841:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,842:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,843:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,843:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,845:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,845:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,845:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,848:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,851:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,851:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,853:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,855:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,856:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,858:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,858:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,859:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,860:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,860:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,861:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,862:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,862:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,864:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,864:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,865:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,866:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,868:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,868:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,870:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,872:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:22,886:INFO:Calculating mean and std
2024-11-16 19:12:22,887:INFO:Creating metrics dataframe
2024-11-16 19:12:22,888:INFO:Uploading results into container
2024-11-16 19:12:22,888:INFO:Uploading model into container now
2024-11-16 19:12:22,888:INFO:_master_model_container: 11
2024-11-16 19:12:22,889:INFO:_display_container: 2
2024-11-16 19:12:22,889:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-11-16 19:12:22,889:INFO:create_model() successfully completed......................................
2024-11-16 19:12:22,925:INFO:SubProcess create_model() end ==================================
2024-11-16 19:12:22,925:INFO:Creating metrics dataframe
2024-11-16 19:12:22,926:INFO:Initializing Extra Trees Classifier
2024-11-16 19:12:22,926:INFO:Total runtime is 0.0910267472267151 minutes
2024-11-16 19:12:22,927:INFO:SubProcess create_model() called ==================================
2024-11-16 19:12:22,927:INFO:Initializing create_model()
2024-11-16 19:12:22,927:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11ed4fac0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1077e7250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-16 19:12:22,927:INFO:Checking exceptions
2024-11-16 19:12:22,927:INFO:Importing libraries
2024-11-16 19:12:22,927:INFO:Copying training dataset
2024-11-16 19:12:22,928:INFO:Defining folds
2024-11-16 19:12:22,928:INFO:Declaring metric variables
2024-11-16 19:12:22,928:INFO:Importing untrained model
2024-11-16 19:12:22,928:INFO:Extra Trees Classifier Imported successfully
2024-11-16 19:12:22,928:INFO:Starting cross validation
2024-11-16 19:12:22,929:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-16 19:12:23,161:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:23,163:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:23,164:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:23,164:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:23,165:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:23,165:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:23,166:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:23,166:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:23,166:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:23,167:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:23,168:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:23,169:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:23,171:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:23,173:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:23,175:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:23,190:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:23,192:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:23,194:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:23,194:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:23,196:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:23,198:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:23,201:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:23,202:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:23,204:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:23,279:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:23,279:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:23,281:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:23,281:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:23,283:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:23,283:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:23,298:INFO:Calculating mean and std
2024-11-16 19:12:23,299:INFO:Creating metrics dataframe
2024-11-16 19:12:23,300:INFO:Uploading results into container
2024-11-16 19:12:23,300:INFO:Uploading model into container now
2024-11-16 19:12:23,300:INFO:_master_model_container: 12
2024-11-16 19:12:23,300:INFO:_display_container: 2
2024-11-16 19:12:23,301:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-11-16 19:12:23,301:INFO:create_model() successfully completed......................................
2024-11-16 19:12:23,341:INFO:SubProcess create_model() end ==================================
2024-11-16 19:12:23,341:INFO:Creating metrics dataframe
2024-11-16 19:12:23,342:INFO:Initializing Light Gradient Boosting Machine
2024-11-16 19:12:23,342:INFO:Total runtime is 0.09795267979303997 minutes
2024-11-16 19:12:23,342:INFO:SubProcess create_model() called ==================================
2024-11-16 19:12:23,342:INFO:Initializing create_model()
2024-11-16 19:12:23,342:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11ed4fac0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1077e7250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-16 19:12:23,342:INFO:Checking exceptions
2024-11-16 19:12:23,342:INFO:Importing libraries
2024-11-16 19:12:23,342:INFO:Copying training dataset
2024-11-16 19:12:23,343:INFO:Defining folds
2024-11-16 19:12:23,344:INFO:Declaring metric variables
2024-11-16 19:12:23,344:INFO:Importing untrained model
2024-11-16 19:12:23,344:INFO:Light Gradient Boosting Machine Imported successfully
2024-11-16 19:12:23,344:INFO:Starting cross validation
2024-11-16 19:12:23,344:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-16 19:12:24,946:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:24,948:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:24,950:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,006:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,007:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,009:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,023:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,026:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,027:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,028:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,029:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,032:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,054:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,058:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,060:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,103:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,104:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,106:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,156:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,159:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,161:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,171:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,173:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,174:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,656:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,658:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,661:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,768:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,770:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,772:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,780:INFO:Calculating mean and std
2024-11-16 19:12:25,781:INFO:Creating metrics dataframe
2024-11-16 19:12:25,788:INFO:Uploading results into container
2024-11-16 19:12:25,788:INFO:Uploading model into container now
2024-11-16 19:12:25,788:INFO:_master_model_container: 13
2024-11-16 19:12:25,788:INFO:_display_container: 2
2024-11-16 19:12:25,789:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-11-16 19:12:25,789:INFO:create_model() successfully completed......................................
2024-11-16 19:12:25,876:INFO:SubProcess create_model() end ==================================
2024-11-16 19:12:25,876:INFO:Creating metrics dataframe
2024-11-16 19:12:25,877:INFO:Initializing Dummy Classifier
2024-11-16 19:12:25,877:INFO:Total runtime is 0.1402042309443156 minutes
2024-11-16 19:12:25,877:INFO:SubProcess create_model() called ==================================
2024-11-16 19:12:25,877:INFO:Initializing create_model()
2024-11-16 19:12:25,877:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11ed4fac0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1077e7250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-16 19:12:25,877:INFO:Checking exceptions
2024-11-16 19:12:25,877:INFO:Importing libraries
2024-11-16 19:12:25,877:INFO:Copying training dataset
2024-11-16 19:12:25,879:INFO:Defining folds
2024-11-16 19:12:25,879:INFO:Declaring metric variables
2024-11-16 19:12:25,879:INFO:Importing untrained model
2024-11-16 19:12:25,879:INFO:Dummy Classifier Imported successfully
2024-11-16 19:12:25,879:INFO:Starting cross validation
2024-11-16 19:12:25,879:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-16 19:12:25,897:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,898:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,899:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,900:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-16 19:12:25,900:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,901:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-16 19:12:25,902:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,902:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,909:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,912:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,915:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-16 19:12:25,917:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,917:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,919:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,920:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,920:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-16 19:12:25,921:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,922:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,922:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,923:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-16 19:12:25,923:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,924:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,925:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-16 19:12:25,926:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,930:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,931:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,932:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,933:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,933:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-16 19:12:25,934:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-16 19:12:25,934:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,935:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,935:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,936:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,937:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,938:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,938:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-16 19:12:25,939:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-16 19:12:25,939:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,939:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'STOP') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-16 19:12:25,944:INFO:Calculating mean and std
2024-11-16 19:12:25,945:INFO:Creating metrics dataframe
2024-11-16 19:12:25,946:INFO:Uploading results into container
2024-11-16 19:12:25,946:INFO:Uploading model into container now
2024-11-16 19:12:25,947:INFO:_master_model_container: 14
2024-11-16 19:12:25,947:INFO:_display_container: 2
2024-11-16 19:12:25,947:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2024-11-16 19:12:25,947:INFO:create_model() successfully completed......................................
2024-11-16 19:12:25,983:INFO:SubProcess create_model() end ==================================
2024-11-16 19:12:25,983:INFO:Creating metrics dataframe
2024-11-16 19:12:25,986:WARNING:/opt/anaconda3/envs/batey/lib/python3.9/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2024-11-16 19:12:25,987:INFO:Initializing create_model()
2024-11-16 19:12:25,987:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11ed4fac0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-16 19:12:25,987:INFO:Checking exceptions
2024-11-16 19:12:25,987:INFO:Importing libraries
2024-11-16 19:12:25,987:INFO:Copying training dataset
2024-11-16 19:12:25,988:INFO:Defining folds
2024-11-16 19:12:25,988:INFO:Declaring metric variables
2024-11-16 19:12:25,988:INFO:Importing untrained model
2024-11-16 19:12:25,988:INFO:Declaring custom model
2024-11-16 19:12:25,989:INFO:Logistic Regression Imported successfully
2024-11-16 19:12:25,989:INFO:Cross validation set to False
2024-11-16 19:12:25,989:INFO:Fitting Model
2024-11-16 19:12:26,028:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-11-16 19:12:26,028:INFO:create_model() successfully completed......................................
2024-11-16 19:12:26,106:INFO:_master_model_container: 14
2024-11-16 19:12:26,106:INFO:_display_container: 2
2024-11-16 19:12:26,106:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-11-16 19:12:26,107:INFO:compare_models() successfully completed......................................
2024-11-16 19:12:26,117:INFO:Initializing finalize_model()
2024-11-16 19:12:26,117:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11ed4fac0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-11-16 19:12:26,118:INFO:Finalizing LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-11-16 19:12:26,120:INFO:Initializing create_model()
2024-11-16 19:12:26,120:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11ed4fac0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-11-16 19:12:26,120:INFO:Checking exceptions
2024-11-16 19:12:26,121:INFO:Importing libraries
2024-11-16 19:12:26,121:INFO:Copying training dataset
2024-11-16 19:12:26,121:INFO:Defining folds
2024-11-16 19:12:26,121:INFO:Declaring metric variables
2024-11-16 19:12:26,121:INFO:Importing untrained model
2024-11-16 19:12:26,121:INFO:Declaring custom model
2024-11-16 19:12:26,122:INFO:Logistic Regression Imported successfully
2024-11-16 19:12:26,123:INFO:Cross validation set to False
2024-11-16 19:12:26,123:INFO:Fitting Model
2024-11-16 19:12:26,159:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Timestamp', 'Raw_EMG',
                                             'Independent_Component'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=F...
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=123,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2024-11-16 19:12:26,159:INFO:create_model() successfully completed......................................
2024-11-16 19:12:26,208:INFO:_master_model_container: 14
2024-11-16 19:12:26,208:INFO:_display_container: 2
2024-11-16 19:12:26,209:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Timestamp', 'Raw_EMG',
                                             'Independent_Component'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=F...
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=123,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2024-11-16 19:12:26,210:INFO:finalize_model() successfully completed......................................
2024-11-16 19:12:26,282:INFO:Initializing evaluate_model()
2024-11-16 19:12:26,282:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11ed4fac0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Timestamp', 'Raw_EMG',
                                             'Independent_Component'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=F...
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=123,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-11-16 19:12:26,297:INFO:Initializing plot_model()
2024-11-16 19:12:26,300:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Timestamp', 'Raw_EMG',
                                             'Independent_Component'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=F...
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=123,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x11ed4fac0>, system=True)
2024-11-16 19:12:26,300:INFO:Checking exceptions
2024-11-16 19:12:26,301:INFO:Preloading libraries
2024-11-16 19:12:26,301:INFO:Copying training dataset
2024-11-16 19:12:26,301:INFO:Plot type: pipeline
2024-11-16 19:12:26,391:INFO:Visual Rendered Successfully
2024-11-16 19:12:26,432:INFO:plot_model() successfully completed......................................
2024-11-16 19:12:26,439:INFO:Initializing save_model()
2024-11-16 19:12:26,440:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Timestamp', 'Raw_EMG',
                                             'Independent_Component'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=F...
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=123,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), model_name=nbest, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/0j/8s23v_h569nfcs43k8n8y9pc0000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Timestamp', 'Raw_EMG',
                                             'Independent_Component'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-11-16 19:12:26,440:INFO:Adding model into prep_pipe
2024-11-16 19:12:26,440:WARNING:Only Model saved as it was a pipeline.
2024-11-16 19:12:26,441:INFO:nbest.pkl saved in current working directory
2024-11-16 19:12:26,443:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Timestamp', 'Raw_EMG',
                                             'Independent_Component'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=F...
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=123,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2024-11-16 19:12:26,443:INFO:save_model() successfully completed......................................
2024-11-16 19:12:36,753:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-16 19:12:36,753:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-16 19:12:36,753:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-16 19:12:36,753:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-16 19:12:37,191:INFO:Initializing load_model()
2024-11-16 19:12:37,191:INFO:load_model(model_name=nbest, platform=None, authentication=None, verbose=True)
2024-11-16 19:12:44,352:INFO:Initializing load_model()
2024-11-16 19:12:44,353:INFO:load_model(model_name=nbest, platform=None, authentication=None, verbose=True)
2024-11-16 19:13:10,332:INFO:Initializing load_model()
2024-11-16 19:13:10,334:INFO:load_model(model_name=nbest, platform=None, authentication=None, verbose=True)
